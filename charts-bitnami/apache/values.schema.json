{
    "title": "Chart Values",
    "type": "object",
    "properties": {
        "global": {
            "type": "object",
            "properties": {
                "imageRegistry": {
                    "type": "string",
                    "description": "Global Docker image registry",
                    "default": ""
                },
                "imagePullSecrets": {
                    "type": "array",
                    "description": "Global Docker registry secret names as an array",
                    "default": [],
                    "items": {}
                },
                "storageClass": {
                    "type": "string",
                    "description": "Global StorageClass for Persistent Volume(s)",
                    "default": ""
                }
            }
        },
        "kubeVersion": {
            "type": "string",
            "description": "Override Kubernetes version",
            "default": ""
        },
        "nameOverride": {
            "type": "string",
            "description": "String to partially override common.names.fullname",
            "default": ""
        },
        "fullnameOverride": {
            "type": "string",
            "description": "String to fully override common.names.fullname",
            "default": ""
        },
        "commonLabels": {
            "type": "object",
            "description": "Labels to add to all deployed objects",
            "default": {}
        },
        "commonAnnotations": {
            "type": "object",
            "description": "Annotations to add to all deployed objects",
            "default": {}
        },
        "extraDeploy": {
            "type": "array",
            "description": "Array of extra objects to deploy with the release",
            "default": [],
            "items": {}
        },
        "image": {
            "type": "object",
            "properties": {
                "registry": {
                    "type": "string",
                    "description": "Apache image registry",
                    "default": "docker.io"
                },
                "repository": {
                    "type": "string",
                    "description": "Apache image repository",
                    "default": "bitnami/apache"
                },
                "tag": {
                    "type": "string",
                    "description": "Apache image tag (immutable tags are recommended)",
                    "default": "2.4.57-debian-11-r134"
                },
                "digest": {
                    "type": "string",
                    "description": "Apache image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag",
                    "default": ""
                },
                "pullPolicy": {
                    "type": "string",
                    "description": "Apache image pull policy",
                    "default": "IfNotPresent"
                },
                "pullSecrets": {
                    "type": "array",
                    "description": "Apache image pull secrets",
                    "default": [],
                    "items": {}
                },
                "debug": {
                    "type": "boolean",
                    "description": "Enable image debug mode",
                    "default": false
                }
            }
        },
        "git": {
            "type": "object",
            "properties": {
                "registry": {
                    "type": "string",
                    "description": "Git image registry",
                    "default": "docker.io"
                },
                "repository": {
                    "type": "string",
                    "description": "Git image name",
                    "default": "bitnami/git"
                },
                "tag": {
                    "type": "string",
                    "description": "Git image tag (immutable tags are recommended)",
                    "default": "2.41.0-debian-11-r74"
                },
                "digest": {
                    "type": "string",
                    "description": "Git image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag",
                    "default": ""
                },
                "pullPolicy": {
                    "type": "string",
                    "description": "Git image pull policy",
                    "default": "IfNotPresent"
                },
                "pullSecrets": {
                    "type": "array",
                    "description": "Specify docker-registry secret names as an array",
                    "default": [],
                    "items": {}
                }
            }
        },
        "replicaCount": {
            "type": "number",
            "description": "Number of replicas of the Apache deployment",
            "default": 1
        },
        "revisionHistoryLimit": {
            "type": "number",
            "description": "The number of old history to retain to allow rollback",
            "default": 10
        },
        "podAffinityPreset": {
            "type": "string",
            "description": "Pod affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`",
            "default": ""
        },
        "podAntiAffinityPreset": {
            "type": "string",
            "description": "Pod anti-affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`",
            "default": "soft"
        },
        "nodeAffinityPreset": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string",
                    "description": "Node affinity preset type. Ignored if `affinity` is set. Allowed values: `soft` or `hard`",
                    "default": ""
                },
                "key": {
                    "type": "string",
                    "description": "Node label key to match. Ignored if `affinity` is set",
                    "default": ""
                },
                "values": {
                    "type": "array",
                    "description": "Node label values to match. Ignored if `affinity` is set",
                    "default": [],
                    "items": {}
                }
            }
        },
        "affinity": {
            "type": "object",
            "description": "Affinity for pod assignment",
            "default": {}
        },
        "nodeSelector": {
            "type": "object",
            "description": "Node labels for pod assignment",
            "default": {}
        },
        "tolerations": {
            "type": "array",
            "description": "Tolerations for pod assignment",
            "default": [],
            "items": {}
        },
        "topologySpreadConstraints": {
            "type": "array",
            "description": "Topology Spread Constraints for pod assignment spread across your cluster among failure-domains. Evaluated as a template",
            "default": [],
            "items": {}
        },
        "extraPodSpec": {
            "type": "object",
            "description": "Optionally specify extra PodSpec",
            "default": {}
        },
        "cloneHtdocsFromGit": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Get the server static content from a git repository",
                    "default": false
                },
                "repository": {
                    "type": "string",
                    "description": "Repository to clone static content from",
                    "default": ""
                },
                "branch": {
                    "type": "string",
                    "description": "Branch inside the git repository",
                    "default": ""
                },
                "enableAutoRefresh": {
                    "type": "boolean",
                    "description": "Enables an automatic git pull with a sidecar container",
                    "default": true
                },
                "interval": {
                    "type": "number",
                    "description": "Interval for sidecar container pull from the repository",
                    "default": 60
                },
                "resources": {
                    "type": "object",
                    "description": "Init container git resource requests",
                    "default": {}
                },
                "extraVolumeMounts": {
                    "type": "array",
                    "description": "Add extra volume mounts for the GIT containers",
                    "default": [],
                    "items": {}
                }
            }
        },
        "htdocsConfigMap": {
            "type": "string",
            "description": "Name of a config map with the server static content",
            "default": ""
        },
        "htdocsPVC": {
            "type": "string",
            "description": "Name of a PVC with the server static content",
            "default": ""
        },
        "vhostsConfigMap": {
            "type": "string",
            "description": "Name of a config map with the virtual hosts content",
            "default": ""
        },
        "httpdConfConfigMap": {
            "type": "string",
            "description": "Name of a config map with the httpd.conf file contents",
            "default": ""
        },
        "podLabels": {
            "type": "object",
            "description": "Extra labels for Apache pods",
            "default": {}
        },
        "podAnnotations": {
            "type": "object",
            "description": "Pod annotations",
            "default": {}
        },
        "hostAliases": {
            "type": "array",
            "description": "",
            "items": {
                "type": "object",
                "properties": {
                    "ip": {
                        "type": "string",
                        "description": ""
                    },
                    "hostnames": {
                        "type": "array",
                        "description": "",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "priorityClassName": {
            "type": "string",
            "description": "Apache Server pods' priorityClassName",
            "default": ""
        },
        "schedulerName": {
            "type": "string",
            "description": "Name of the k8s scheduler (other than default)",
            "default": ""
        },
        "podSecurityContext": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enabled Apache Server pods' Security Context",
                    "default": true
                },
                "fsGroup": {
                    "type": "number",
                    "description": "Set Apache Server pod's Security Context fsGroup",
                    "default": 1001
                }
            }
        },
        "containerSecurityContext": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enabled Apache Server containers' Security Context",
                    "default": true
                },
                "runAsUser": {
                    "type": "number",
                    "description": "Set Apache Server containers' Security Context runAsUser",
                    "default": 1001
                },
                "runAsNonRoot": {
                    "type": "boolean",
                    "description": "Set Controller container's Security Context runAsNonRoot",
                    "default": true
                }
            }
        },
        "command": {
            "type": "array",
            "description": "Override default container command (useful when using custom images)",
            "default": [],
            "items": {}
        },
        "args": {
            "type": "array",
            "description": "Override default container args (useful when using custom images)",
            "default": [],
            "items": {}
        },
        "lifecycleHooks": {
            "type": "object",
            "description": "for the Apache server container(s) to automate configuration before or after startup",
            "default": {}
        },
        "resources": {
            "type": "object",
            "properties": {
                "limits": {
                    "type": "object",
                    "description": "The resources limits for the container",
                    "default": {}
                },
                "requests": {
                    "type": "object",
                    "description": "The requested resources for the container",
                    "default": {}
                }
            }
        },
        "startupProbe": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable startupProbe",
                    "default": false
                },
                "path": {
                    "type": "string",
                    "description": "Path to access on the HTTP server",
                    "default": "/"
                },
                "port": {
                    "type": "string",
                    "description": "Port for startupProbe",
                    "default": "http"
                },
                "initialDelaySeconds": {
                    "type": "number",
                    "description": "Initial delay seconds for startupProbe",
                    "default": 180
                },
                "periodSeconds": {
                    "type": "number",
                    "description": "Period seconds for startupProbe",
                    "default": 20
                },
                "timeoutSeconds": {
                    "type": "number",
                    "description": "Timeout seconds for startupProbe",
                    "default": 5
                },
                "failureThreshold": {
                    "type": "number",
                    "description": "Failure threshold for startupProbe",
                    "default": 6
                },
                "successThreshold": {
                    "type": "number",
                    "description": "Success threshold for startupProbe",
                    "default": 1
                }
            }
        },
        "livenessProbe": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable liveness probe",
                    "default": true
                },
                "path": {
                    "type": "string",
                    "description": "Path to access on the HTTP server",
                    "default": "/"
                },
                "port": {
                    "type": "string",
                    "description": "Port for livenessProbe",
                    "default": "http"
                },
                "initialDelaySeconds": {
                    "type": "number",
                    "description": "Initial delay seconds for livenessProbe",
                    "default": 180
                },
                "periodSeconds": {
                    "type": "number",
                    "description": "Period seconds for livenessProbe",
                    "default": 20
                },
                "timeoutSeconds": {
                    "type": "number",
                    "description": "Timeout seconds for livenessProbe",
                    "default": 5
                },
                "failureThreshold": {
                    "type": "number",
                    "description": "Failure threshold for livenessProbe",
                    "default": 6
                },
                "successThreshold": {
                    "type": "number",
                    "description": "Success threshold for livenessProbe",
                    "default": 1
                }
            }
        },
        "readinessProbe": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable readiness probe",
                    "default": true
                },
                "path": {
                    "type": "string",
                    "description": "Path to access on the HTTP server",
                    "default": "/"
                },
                "port": {
                    "type": "string",
                    "description": "Port for readinessProbe",
                    "default": "http"
                },
                "initialDelaySeconds": {
                    "type": "number",
                    "description": "Initial delay seconds for readinessProbe",
                    "default": 30
                },
                "periodSeconds": {
                    "type": "number",
                    "description": "Period seconds for readinessProbe",
                    "default": 10
                },
                "timeoutSeconds": {
                    "type": "number",
                    "description": "Timeout seconds for readinessProbe",
                    "default": 5
                },
                "failureThreshold": {
                    "type": "number",
                    "description": "Failure threshold for readinessProbe",
                    "default": 6
                },
                "successThreshold": {
                    "type": "number",
                    "description": "Success threshold for readinessProbe",
                    "default": 1
                }
            }
        },
        "customStartupProbe": {
            "type": "object",
            "description": "Custom liveness probe for the Web component",
            "default": {}
        },
        "customLivenessProbe": {
            "type": "object",
            "description": "Custom liveness probe for the Web component",
            "default": {}
        },
        "customReadinessProbe": {
            "type": "object",
            "description": "Custom rediness probe for the Web component",
            "default": {}
        },
        "extraVolumes": {
            "type": "array",
            "description": "Array to add extra volumes (evaluated as a template)",
            "default": [],
            "items": {}
        },
        "extraVolumeMounts": {
            "type": "array",
            "description": "Array to add extra mounts (normally used with extraVolumes, evaluated as a template)",
            "default": [],
            "items": {}
        },
        "extraEnvVars": {
            "type": "array",
            "description": "Array to add extra environment variables",
            "default": [],
            "items": {}
        },
        "extraEnvVarsCM": {
            "type": "string",
            "description": "Name of existing ConfigMap containing extra env vars for Apache server nodes",
            "default": ""
        },
        "extraEnvVarsSecret": {
            "type": "string",
            "description": "Name of existing Secret containing extra env vars for Apache server nodes",
            "default": ""
        },
        "containerPorts": {
            "type": "object",
            "properties": {
                "http": {
                    "type": "number",
                    "description": "Apache server HTTP container port",
                    "default": 8080
                },
                "https": {
                    "type": "number",
                    "description": "Apache server HTTPS container port",
                    "default": 8443
                }
            }
        },
        "initContainers": {
            "type": "array",
            "description": "Add additional init containers to the Apache pods",
            "default": [],
            "items": {}
        },
        "sidecars": {
            "type": "array",
            "description": "Add additional sidecar containers to the Apache pods",
            "default": [],
            "items": {}
        },
        "updateStrategy": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string",
                    "description": "Apache Server deployment strategy type.",
                    "default": "RollingUpdate"
                }
            }
        },
        "pdb": {
            "type": "object",
            "properties": {
                "create": {
                    "type": "boolean",
                    "description": "Enable a Pod Disruption Budget creation",
                    "default": false
                },
                "minAvailable": {
                    "type": "number",
                    "description": "Minimum number/percentage of pods that should remain scheduled",
                    "default": 1
                },
                "maxUnavailable": {
                    "type": "string",
                    "description": "Maximum number/percentage of pods that may be made unavailable",
                    "default": ""
                }
            }
        },
        "autoscaling": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable Horizontal POD autoscaling for Apache",
                    "default": false
                },
                "minReplicas": {
                    "type": "number",
                    "description": "Minimum number of Apache replicas",
                    "default": 1
                },
                "maxReplicas": {
                    "type": "number",
                    "description": "Maximum number of Apache replicas",
                    "default": 11
                },
                "targetCPU": {
                    "type": "number",
                    "description": "Target CPU utilization percentage",
                    "default": 50
                },
                "targetMemory": {
                    "type": "number",
                    "description": "Target Memory utilization percentage",
                    "default": 50
                }
            }
        },
        "service": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string",
                    "description": "Apache Service type",
                    "default": "LoadBalancer"
                },
                "ports": {
                    "type": "object",
                    "properties": {
                        "http": {
                            "type": "number",
                            "description": "Apache service HTTP port",
                            "default": 80
                        },
                        "https": {
                            "type": "number",
                            "description": "Apache service HTTPS port",
                            "default": 443
                        }
                    }
                },
                "nodePorts": {
                    "type": "object",
                    "properties": {
                        "http": {
                            "type": "string",
                            "description": "Node port for HTTP",
                            "default": ""
                        },
                        "https": {
                            "type": "string",
                            "description": "Node port for HTTPS",
                            "default": ""
                        }
                    }
                },
                "clusterIP": {
                    "type": "string",
                    "description": "Apache service Cluster IP",
                    "default": ""
                },
                "loadBalancerIP": {
                    "type": "string",
                    "description": "Apache service Load Balancer IP",
                    "default": ""
                },
                "loadBalancerSourceRanges": {
                    "type": "array",
                    "description": "Apache service Load Balancer sources",
                    "default": [],
                    "items": {}
                },
                "annotations": {
                    "type": "object",
                    "description": "Additional custom annotations for Apache service",
                    "default": {}
                },
                "externalTrafficPolicy": {
                    "type": "string",
                    "description": "Apache service external traffic policy",
                    "default": "Cluster"
                },
                "extraPorts": {
                    "type": "array",
                    "description": "Extra ports to expose (normally used with the `sidecar` value)",
                    "default": [],
                    "items": {}
                },
                "sessionAffinity": {
                    "type": "string",
                    "description": "Session Affinity for Kubernetes service, can be \"None\" or \"ClientIP\"",
                    "default": "None"
                },
                "sessionAffinityConfig": {
                    "type": "object",
                    "description": "Additional settings for the sessionAffinity",
                    "default": {}
                }
            }
        },
        "ingress": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable ingress record generation for Apache",
                    "default": false
                },
                "selfSigned": {
                    "type": "boolean",
                    "description": "Create a TLS secret for this ingress record using self-signed certificates generated by Helm",
                    "default": false
                },
                "pathType": {
                    "type": "string",
                    "description": "Ingress path type",
                    "default": "ImplementationSpecific"
                },
                "apiVersion": {
                    "type": "string",
                    "description": "Force Ingress API version (automatically detected if not set)",
                    "default": ""
                },
                "ingressClassName": {
                    "type": "string",
                    "description": "IngressClass that will be be used to implement the Ingress (Kubernetes 1.18+)",
                    "default": ""
                },
                "hostname": {
                    "type": "string",
                    "description": "Default host for the ingress record",
                    "default": "example.local"
                },
                "path": {
                    "type": "string",
                    "description": "Default path for the ingress record",
                    "default": "/"
                },
                "annotations": {
                    "type": "object",
                    "description": "Additional annotations for the Ingress resource. To enable certificate autogeneration, place here your cert-manager annotations.",
                    "default": {}
                },
                "tls": {
                    "type": "boolean",
                    "description": "Enable TLS configuration for the host defined at `ingress.hostname` parameter",
                    "default": false
                },
                "extraHosts": {
                    "type": "array",
                    "description": "An array with additional hostname(s) to be covered with the ingress record",
                    "default": [],
                    "items": {}
                },
                "extraPaths": {
                    "type": "array",
                    "description": "An array with additional arbitrary paths that may need to be added to the ingress under the main host",
                    "default": [],
                    "items": {}
                },
                "extraTls": {
                    "type": "array",
                    "description": "TLS configuration for additional hostname(s) to be covered with this ingress record",
                    "default": [],
                    "items": {}
                },
                "secrets": {
                    "type": "array",
                    "description": "Custom TLS certificates as secrets",
                    "default": [],
                    "items": {}
                },
                "extraRules": {
                    "type": "array",
                    "description": "Additional rules to be covered with this ingress record",
                    "default": [],
                    "items": {}
                }
            }
        },
        "metrics": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Start a sidecar prometheus exporter to expose Apache metrics",
                    "default": false
                },
                "image": {
                    "type": "object",
                    "properties": {
                        "registry": {
                            "type": "string",
                            "description": "Apache Exporter image registry",
                            "default": "docker.io"
                        },
                        "repository": {
                            "type": "string",
                            "description": "Apache Exporter image repository",
                            "default": "bitnami/apache-exporter"
                        },
                        "tag": {
                            "type": "string",
                            "description": "Apache Exporter image tag (immutable tags are recommended)",
                            "default": "1.0.1-debian-11-r21"
                        },
                        "digest": {
                            "type": "string",
                            "description": "Apache Exporter image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag",
                            "default": ""
                        },
                        "pullPolicy": {
                            "type": "string",
                            "description": "Apache Exporter image pull policy",
                            "default": "IfNotPresent"
                        },
                        "pullSecrets": {
                            "type": "array",
                            "description": "Apache Exporter image pull secrets",
                            "default": [],
                            "items": {}
                        },
                        "debug": {
                            "type": "boolean",
                            "description": "Apache Exporter image debug mode",
                            "default": false
                        }
                    }
                },
                "podAnnotations": {
                    "type": "object",
                    "properties": {
                        "prometheus": {
                            "type": "object",
                            "properties": {
                                "io/scrape": {
                                    "type": "string",
                                    "description": "",
                                    "default": "true"
                                },
                                "io/port": {
                                    "type": "string",
                                    "description": "",
                                    "default": "9117"
                                }
                            }
                        }
                    }
                },
                "resources": {
                    "type": "object",
                    "properties": {
                        "limits": {
                            "type": "object",
                            "description": "The resources limits for the container",
                            "default": {}
                        },
                        "requests": {
                            "type": "object",
                            "description": "The requested resources for the container",
                            "default": {}
                        }
                    }
                },
                "service": {
                    "type": "object",
                    "properties": {
                        "annotations": {
                            "type": "object",
                            "properties": {
                                "prometheus": {
                                    "type": "object",
                                    "properties": {
                                        "io/scrape": {
                                            "type": "string",
                                            "description": "",
                                            "default": "true"
                                        },
                                        "io/port": {
                                            "type": "string",
                                            "description": "",
                                            "default": "{{ .Values.metrics.service.port }}"
                                        }
                                    }
                                }
                            }
                        },
                        "port": {
                            "type": "number",
                            "description": "Metrics service port",
                            "default": 9117
                        }
                    }
                },
                "serviceMonitor": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "if `true`, creates a Prometheus Operator PodMonitor (also requires `metrics.enabled` to be `true`)",
                            "default": false
                        },
                        "namespace": {
                            "type": "string",
                            "description": "Namespace for the PodMonitor Resource (defaults to the Release Namespace)",
                            "default": ""
                        },
                        "interval": {
                            "type": "string",
                            "description": "Interval at which metrics should be scraped.",
                            "default": ""
                        },
                        "scrapeTimeout": {
                            "type": "string",
                            "description": "Timeout after which the scrape is ended",
                            "default": ""
                        },
                        "labels": {
                            "type": "object",
                            "description": "Labels that can be used so PodMonitor will be discovered by Prometheus",
                            "default": {}
                        },
                        "relabelings": {
                            "type": "array",
                            "description": "RelabelConfigs to apply to samples before scraping",
                            "default": [],
                            "items": {}
                        },
                        "metricRelabelings": {
                            "type": "array",
                            "description": "MetricRelabelConfigs to apply to samples before ingestion",
                            "default": [],
                            "items": {}
                        }
                    }
                },
                "prometheusRule": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "if `true`, creates a Prometheus Operator PrometheusRule (also requires `metrics.enabled` to be `true` and `metrics.prometheusRule.rules`)",
                            "default": false
                        },
                        "namespace": {
                            "type": "string",
                            "description": "Namespace for the PrometheusRule Resource (defaults to the Release Namespace)",
                            "default": ""
                        },
                        "labels": {
                            "type": "object",
                            "description": "Labels that can be used so PrometheusRule will be discovered by Prometheus",
                            "default": {}
                        },
                        "rules": {
                            "type": "array",
                            "description": "Prometheus Rule definitions",
                            "default": [],
                            "items": {}
                        }
                    }
                }
            }
        }
    }
}