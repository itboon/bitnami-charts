{
    "title": "Chart Values",
    "type": "object",
    "properties": {
        "global": {
            "type": "object",
            "properties": {
                "imageRegistry": {
                    "type": "string",
                    "description": "Global Docker image registry",
                    "default": ""
                },
                "imagePullSecrets": {
                    "type": "array",
                    "description": "Global Docker registry secret names as an array",
                    "default": [],
                    "items": {}
                },
                "storageClass": {
                    "type": "string",
                    "description": "Global StorageClass for Persistent Volume(s)",
                    "default": ""
                }
            }
        },
        "kubeVersion": {
            "type": "string",
            "description": "Force target Kubernetes version (using Helm capabilities if not set)",
            "default": ""
        },
        "nameOverride": {
            "type": "string",
            "description": "String to partially override dokuwiki.fullname template with a string (will prepend the release name)",
            "default": ""
        },
        "fullnameOverride": {
            "type": "string",
            "description": "String to fully override dokuwiki.fullname template with a string",
            "default": ""
        },
        "namespaceOverride": {
            "type": "string",
            "description": "String to fully override common.names.namespace",
            "default": ""
        },
        "commonAnnotations": {
            "type": "object",
            "description": "Annotations to add to all deployed objects",
            "default": {}
        },
        "commonLabels": {
            "type": "object",
            "description": "Labels to add to all deployed objects",
            "default": {}
        },
        "extraDeploy": {
            "type": "array",
            "description": "Array of extra objects to deploy with the release (evaluated as a template).",
            "default": [],
            "items": {}
        },
        "image": {
            "type": "object",
            "properties": {
                "registry": {
                    "type": "string",
                    "description": "DokuWiki image registry",
                    "default": "docker.io"
                },
                "repository": {
                    "type": "string",
                    "description": "DokuWiki image repository",
                    "default": "bitnami/dokuwiki"
                },
                "tag": {
                    "type": "string",
                    "description": "DokuWiki image tag",
                    "default": "20230404.1.0-debian-11-r54"
                },
                "digest": {
                    "type": "string",
                    "description": "DokuWiki image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag",
                    "default": ""
                },
                "pullPolicy": {
                    "type": "string",
                    "description": "Image pull policy",
                    "default": "IfNotPresent"
                },
                "pullSecrets": {
                    "type": "array",
                    "description": "Image pull policy",
                    "default": [],
                    "items": {}
                },
                "debug": {
                    "type": "boolean",
                    "description": "Enable image debugging",
                    "default": false
                }
            }
        },
        "hostAliases": {
            "type": "array",
            "description": "",
            "items": {
                "type": "object",
                "properties": {
                    "ip": {
                        "type": "string",
                        "description": ""
                    },
                    "hostnames": {
                        "type": "array",
                        "description": "",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "dokuwikiUsername": {
            "type": "string",
            "description": "User of the application",
            "default": "user"
        },
        "dokuwikiPassword": {
            "type": "string",
            "description": "Application password",
            "default": ""
        },
        "existingSecret": {
            "type": "string",
            "description": "Use an existing secret with the dokuwiki password",
            "default": ""
        },
        "dokuwikiEmail": {
            "type": "string",
            "description": "Admin email",
            "default": "user@example.com"
        },
        "dokuwikiFullName": {
            "type": "string",
            "description": "User's Full Name",
            "default": "User Name"
        },
        "dokuwikiWikiName": {
            "type": "string",
            "description": "Wiki name",
            "default": "My Wiki"
        },
        "customPostInitScripts": {
            "type": "object",
            "description": "Custom post-init.d user scripts",
            "default": {}
        },
        "updateStrategy": {
            "type": "object",
            "description": "Strategy to use to update Pods",
            "default": {}
        },
        "topologySpreadConstraints": {
            "type": "array",
            "description": "Topology Spread Constraints for pod assignment",
            "default": [],
            "items": {}
        },
        "persistence": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable persistence using PVC",
                    "default": true
                },
                "storageClass": {
                    "type": "string",
                    "description": "PVC Storage Class for DokuWiki volume",
                    "default": ""
                },
                "accessModes": {
                    "type": "array",
                    "description": "PVC Access Mode for DokuWiki volume",
                    "default": [
                        "ReadWriteOnce"
                    ],
                    "items": {
                        "type": "string"
                    }
                },
                "size": {
                    "type": "string",
                    "description": "PVC Storage Request for DokuWiki volume",
                    "default": "8Gi"
                },
                "existingClaim": {
                    "type": "string",
                    "description": "Name of an existing PVC to be used",
                    "default": ""
                },
                "annotations": {
                    "type": "object",
                    "description": "Annotations to add to the PVC",
                    "default": {}
                }
            }
        },
        "podSecurityContext": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable securityContext on for DokuWiki deployment",
                    "default": true
                },
                "fsGroup": {
                    "type": "number",
                    "description": "Group to configure permissions for volumes",
                    "default": 1001
                }
            }
        },
        "containerSecurityContext": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable securityContext on for DokuWiki deployment",
                    "default": true
                },
                "runAsUser": {
                    "type": "number",
                    "description": "User for the securityContext",
                    "default": 1001
                },
                "runAsNonRoot": {
                    "type": "boolean",
                    "description": "Force the container as be run as non root",
                    "default": true
                }
            }
        },
        "resources": {
            "type": "object",
            "properties": {
                "requests": {
                    "type": "object",
                    "properties": {
                        "memory": {
                            "type": "string",
                            "description": "",
                            "default": "512Mi"
                        },
                        "cpu": {
                            "type": "string",
                            "description": "",
                            "default": "300m"
                        }
                    }
                }
            }
        },
        "livenessProbe": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable/disable the liveness probe",
                    "default": true
                },
                "initialDelaySeconds": {
                    "type": "number",
                    "description": "Delay before liveness probe is initiated",
                    "default": 120
                },
                "periodSeconds": {
                    "type": "number",
                    "description": "How often to perform the probe",
                    "default": 10
                },
                "timeoutSeconds": {
                    "type": "number",
                    "description": "When the probe times out",
                    "default": 5
                },
                "failureThreshold": {
                    "type": "number",
                    "description": "Minimum consecutive failures to be considered failed",
                    "default": 6
                },
                "successThreshold": {
                    "type": "number",
                    "description": "Minimum consecutive successes to be considered successful",
                    "default": 1
                }
            }
        },
        "readinessProbe": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable/disable the readiness probe",
                    "default": true
                },
                "initialDelaySeconds": {
                    "type": "number",
                    "description": "Delay before readinessProbe is initiated",
                    "default": 30
                },
                "periodSeconds": {
                    "type": "number",
                    "description": "Period seconds for readinessProbe",
                    "default": 10
                },
                "timeoutSeconds": {
                    "type": "number",
                    "description": "When the probe times out",
                    "default": 5
                },
                "failureThreshold": {
                    "type": "number",
                    "description": "Minimum consecutive failures to be considered failed",
                    "default": 6
                },
                "successThreshold": {
                    "type": "number",
                    "description": "Minimum consecutive successes to be considered successful",
                    "default": 1
                }
            }
        },
        "startupProbe": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable/disable the startup probe",
                    "default": false
                },
                "initialDelaySeconds": {
                    "type": "number",
                    "description": "Delay before startup probe is initiated",
                    "default": 120
                },
                "periodSeconds": {
                    "type": "number",
                    "description": "How often to perform the probe",
                    "default": 10
                },
                "timeoutSeconds": {
                    "type": "number",
                    "description": "When the probe times out",
                    "default": 5
                },
                "failureThreshold": {
                    "type": "number",
                    "description": "Minimum consecutive failures to be considered failed",
                    "default": 6
                },
                "successThreshold": {
                    "type": "number",
                    "description": "Minimum consecutive successes to be considered successful",
                    "default": 1
                }
            }
        },
        "podAffinityPreset": {
            "type": "string",
            "description": "Pod affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`",
            "default": ""
        },
        "podAntiAffinityPreset": {
            "type": "string",
            "description": "Pod anti-affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`",
            "default": "soft"
        },
        "nodeAffinityPreset": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string",
                    "description": "Node affinity preset type. Ignored if `affinity` is set. Allowed values: `soft` or `hard`",
                    "default": ""
                },
                "key": {
                    "type": "string",
                    "description": "Node label key to match Ignored if `affinity` is set.",
                    "default": ""
                },
                "values": {
                    "type": "array",
                    "description": "Node label values to match. Ignored if `affinity` is set.",
                    "default": [],
                    "items": {}
                }
            }
        },
        "affinity": {
            "type": "object",
            "description": "Affinity for pod assignment",
            "default": {}
        },
        "nodeSelector": {
            "type": "object",
            "description": "Node labels for pod assignment",
            "default": {}
        },
        "tolerations": {
            "type": "array",
            "description": "Tolerations for pod assignment",
            "default": [],
            "items": {}
        },
        "command": {
            "type": "array",
            "description": "Override default container command (useful when using custom images)",
            "default": [],
            "items": {}
        },
        "args": {
            "type": "array",
            "description": "Override default container args (useful when using custom images)",
            "default": [],
            "items": {}
        },
        "extraEnvVars": {
            "type": "array",
            "description": "An array to add extra env vars",
            "default": [],
            "items": {}
        },
        "extraEnvVarsCM": {
            "type": "string",
            "description": "ConfigMap containing extra env vars",
            "default": ""
        },
        "extraEnvVarsSecret": {
            "type": "string",
            "description": "Secret containing extra env vars (in case of sensitive data)",
            "default": ""
        },
        "podAnnotations": {
            "type": "object",
            "description": "Pod annotations",
            "default": {}
        },
        "customLivenessProbe": {
            "type": "object",
            "description": "Override default liveness probe",
            "default": {}
        },
        "customReadinessProbe": {
            "type": "object",
            "description": "Override default readiness probe",
            "default": {}
        },
        "customStartupProbe": {
            "type": "object",
            "description": "Override default startup probe",
            "default": {}
        },
        "extraVolumes": {
            "type": "array",
            "description": "Array of extra volumes to be added to the deployment (evaluated as template). Requires setting `extraVolumeMounts`",
            "default": [],
            "items": {}
        },
        "extraVolumeMounts": {
            "type": "array",
            "description": "Array of extra volume mounts to be added to the container (evaluated as template). Normally used with `extraVolumes`.",
            "default": [],
            "items": {}
        },
        "lifecycleHooks": {
            "type": "object",
            "description": "LifecycleHook to set additional configuration at startup. Evaluated as a template",
            "default": {}
        },
        "podLabels": {
            "type": "object",
            "description": "Add additional labels to the pod (evaluated as a template)",
            "default": {}
        },
        "initContainers": {
            "type": "array",
            "description": "Attach additional init containers to the pod (evaluated as a template)",
            "default": [],
            "items": {}
        },
        "sidecars": {
            "type": "array",
            "description": "Attach additional containers to the pod (evaluated as a template)",
            "default": [],
            "items": {}
        },
        "priorityClassName": {
            "type": "string",
            "description": "Priority class assigned to the Pods",
            "default": ""
        },
        "schedulerName": {
            "type": "string",
            "description": "Alternative scheduler",
            "default": ""
        },
        "terminationGracePeriodSeconds": {
            "type": "string",
            "description": "In seconds, time the given to the pod to terminate gracefully",
            "default": ""
        },
        "containerPorts": {
            "type": "object",
            "properties": {
                "http": {
                    "type": "number",
                    "description": "Container HTTP port",
                    "default": 8080
                },
                "https": {
                    "type": "number",
                    "description": "Container HTTPS port",
                    "default": 8443
                }
            }
        },
        "service": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string",
                    "description": "Kubernetes Service type",
                    "default": "LoadBalancer"
                },
                "loadBalancerIP": {
                    "type": "string",
                    "description": "Use serviceLoadBalancerIP to request a specific static IP, otherwise leave blank",
                    "default": ""
                },
                "ports": {
                    "type": "object",
                    "properties": {
                        "http": {
                            "type": "number",
                            "description": "Service HTTP port",
                            "default": 80
                        },
                        "https": {
                            "type": "number",
                            "description": "Service HTTPS port",
                            "default": 443
                        }
                    }
                },
                "nodePorts": {
                    "type": "object",
                    "properties": {
                        "http": {
                            "type": "string",
                            "description": "",
                            "default": ""
                        },
                        "https": {
                            "type": "string",
                            "description": "",
                            "default": ""
                        }
                    }
                },
                "clusterIP": {
                    "type": "string",
                    "description": "Kubernetes service Cluster IP",
                    "default": ""
                },
                "loadBalancerSourceRanges": {
                    "type": "array",
                    "description": "Kubernetes service Load Balancer sources",
                    "default": [],
                    "items": {}
                },
                "externalTrafficPolicy": {
                    "type": "string",
                    "description": "Enable client source IP preservation",
                    "default": "Cluster"
                },
                "extraPorts": {
                    "type": "array",
                    "description": "Extra ports to expose in the service (normally used with the `sidecar` value)",
                    "default": [],
                    "items": {}
                },
                "annotations": {
                    "type": "object",
                    "description": "Annotations to add to the service",
                    "default": {}
                },
                "sessionAffinity": {
                    "type": "string",
                    "description": "Session Affinity for Kubernetes service, can be \"None\" or \"ClientIP\"",
                    "default": "None"
                },
                "sessionAffinityConfig": {
                    "type": "object",
                    "description": "Additional settings for the sessionAffinity",
                    "default": {}
                }
            }
        },
        "ingress": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Set to true to enable ingress record generation",
                    "default": false
                },
                "pathType": {
                    "type": "string",
                    "description": "Ingress Path type",
                    "default": "ImplementationSpecific"
                },
                "apiVersion": {
                    "type": "string",
                    "description": "Override API Version (automatically detected if not set)",
                    "default": ""
                },
                "hostname": {
                    "type": "string",
                    "description": "When the ingress is enabled, a host pointing to this will be created",
                    "default": "dokuwiki.local"
                },
                "path": {
                    "type": "string",
                    "description": "The Path to Dokuwiki. You may need to set this to '/*' in order to use this",
                    "default": "/"
                },
                "annotations": {
                    "type": "object",
                    "description": "Additional annotations for the Ingress resource. To enable certificate autogeneration, place here your cert-manager annotations.",
                    "default": {}
                },
                "tls": {
                    "type": "boolean",
                    "description": "Enable TLS configuration for the hostname defined at ingress.hostname parameter",
                    "default": false
                },
                "extraHosts": {
                    "type": "array",
                    "description": "The list of additional hostnames to be covered with this ingress record.",
                    "default": [],
                    "items": {}
                },
                "extraPaths": {
                    "type": "array",
                    "description": "Any additional arbitrary paths that may need to be added to the ingress under the main host.",
                    "default": [],
                    "items": {}
                },
                "extraTls": {
                    "type": "array",
                    "description": "The tls configuration for additional hostnames to be covered with this ingress record.",
                    "default": [],
                    "items": {}
                },
                "secrets": {
                    "type": "array",
                    "description": "If you're providing your own certificates, please use this to add the certificates as secrets",
                    "default": [],
                    "items": {}
                },
                "ingressClassName": {
                    "type": "string",
                    "description": "IngressClass that will be be used to implement the Ingress (Kubernetes 1.18+)",
                    "default": ""
                },
                "selfSigned": {
                    "type": "boolean",
                    "description": "Create a TLS secret for this ingress record using self-signed certificates generated by Helm",
                    "default": false
                },
                "extraRules": {
                    "type": "array",
                    "description": "Additional rules to be covered with this ingress record",
                    "default": [],
                    "items": {}
                }
            }
        },
        "volumePermissions": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable init container that changes volume permissions in the data directory (for cases where the default k8s `runAsUser` and `fsUser` values do not work)",
                    "default": false
                },
                "image": {
                    "type": "object",
                    "properties": {
                        "registry": {
                            "type": "string",
                            "description": "Init container volume-permissions image registry",
                            "default": "docker.io"
                        },
                        "repository": {
                            "type": "string",
                            "description": "Init container volume-permissions image name",
                            "default": "bitnami/os-shell"
                        },
                        "tag": {
                            "type": "string",
                            "description": "Init container volume-permissions image tag",
                            "default": "11-debian-11-r40"
                        },
                        "digest": {
                            "type": "string",
                            "description": "Init container volume-permissions image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag",
                            "default": ""
                        },
                        "pullPolicy": {
                            "type": "string",
                            "description": "Init container volume-permissions image pull policy",
                            "default": "IfNotPresent"
                        },
                        "pullSecrets": {
                            "type": "array",
                            "description": "Specify docker-registry secret names as an array",
                            "default": [],
                            "items": {}
                        }
                    }
                },
                "resources": {
                    "type": "object",
                    "properties": {
                        "limits": {
                            "type": "object",
                            "description": "The resources limits for the container",
                            "default": {}
                        },
                        "requests": {
                            "type": "object",
                            "description": "The requested resources for the container",
                            "default": {}
                        }
                    }
                }
            }
        },
        "metrics": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Start a exporter side-car",
                    "default": false
                },
                "image": {
                    "type": "object",
                    "properties": {
                        "registry": {
                            "type": "string",
                            "description": "Apache exporter image registry",
                            "default": "docker.io"
                        },
                        "repository": {
                            "type": "string",
                            "description": "Apache exporter image name",
                            "default": "bitnami/apache-exporter"
                        },
                        "tag": {
                            "type": "string",
                            "description": "Apache exporter image tag",
                            "default": "1.0.1-debian-11-r21"
                        },
                        "digest": {
                            "type": "string",
                            "description": "Apache exporter image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag",
                            "default": ""
                        },
                        "pullPolicy": {
                            "type": "string",
                            "description": "Image pull policy",
                            "default": "IfNotPresent"
                        },
                        "pullSecrets": {
                            "type": "array",
                            "description": "Specify docker-registry secret names as an array",
                            "default": [],
                            "items": {}
                        }
                    }
                },
                "podAnnotations": {
                    "type": "object",
                    "properties": {
                        "prometheus": {
                            "type": "object",
                            "properties": {
                                "io/scrape": {
                                    "type": "string",
                                    "description": "",
                                    "default": "true"
                                },
                                "io/port": {
                                    "type": "string",
                                    "description": "",
                                    "default": "9117"
                                }
                            }
                        }
                    }
                },
                "resources": {
                    "type": "object",
                    "description": "Exporter resource requests/limit",
                    "default": {}
                }
            }
        },
        "certificates": {
            "type": "object",
            "properties": {
                "customCertificate": {
                    "type": "object",
                    "properties": {
                        "certificateSecret": {
                            "type": "string",
                            "description": "Secret containing the certificate and key to add",
                            "default": ""
                        },
                        "chainSecret": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Name of the secret containing the certificate chain",
                                    "default": ""
                                },
                                "key": {
                                    "type": "string",
                                    "description": "Key of the certificate chain file inside the secret",
                                    "default": ""
                                }
                            }
                        },
                        "certificateLocation": {
                            "type": "string",
                            "description": "Location in the container to store the certificate",
                            "default": "/etc/ssl/certs/ssl-cert-snakeoil.pem"
                        },
                        "keyLocation": {
                            "type": "string",
                            "description": "Location in the container to store the private key",
                            "default": "/etc/ssl/private/ssl-cert-snakeoil.key"
                        },
                        "chainLocation": {
                            "type": "string",
                            "description": "Location in the container to store the certificate chain",
                            "default": "/etc/ssl/certs/mychain.pem"
                        }
                    }
                },
                "customCAs": {
                    "type": "array",
                    "description": "Defines a list of secrets to import into the container trust store",
                    "default": [],
                    "items": {}
                },
                "command": {
                    "type": "array",
                    "description": "Override default container command (useful when using custom images)",
                    "default": [],
                    "items": {}
                },
                "args": {
                    "type": "array",
                    "description": "Override default container args (useful when using custom images)",
                    "default": [],
                    "items": {}
                },
                "extraEnvVars": {
                    "type": "array",
                    "description": "Container sidecar extra environment variables (eg proxy)",
                    "default": [],
                    "items": {}
                },
                "extraEnvVarsCM": {
                    "type": "string",
                    "description": "ConfigMap containing extra env vars",
                    "default": ""
                },
                "extraEnvVarsSecret": {
                    "type": "string",
                    "description": "Secret containing extra env vars (in case of sensitive data)",
                    "default": ""
                },
                "image": {
                    "type": "object",
                    "properties": {
                        "registry": {
                            "type": "string",
                            "description": "Container sidecar registry",
                            "default": "docker.io"
                        },
                        "repository": {
                            "type": "string",
                            "description": "Container sidecar image",
                            "default": "bitnami/os-shell"
                        },
                        "tag": {
                            "type": "string",
                            "description": "Container sidecar image tag",
                            "default": "11-debian-11-r40"
                        },
                        "digest": {
                            "type": "string",
                            "description": "Container sidecar image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag",
                            "default": ""
                        },
                        "pullPolicy": {
                            "type": "string",
                            "description": "Container sidecar image pull policy",
                            "default": "IfNotPresent"
                        },
                        "pullSecrets": {
                            "type": "array",
                            "description": "Container sidecar image pull secrets",
                            "default": [],
                            "items": {}
                        }
                    }
                }
            }
        }
    }
}