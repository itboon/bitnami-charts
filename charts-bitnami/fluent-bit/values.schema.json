{
    "title": "Chart Values",
    "type": "object",
    "properties": {
        "global": {
            "type": "object",
            "properties": {
                "imageRegistry": {
                    "type": "string",
                    "description": "Global Docker image registry",
                    "default": ""
                },
                "imagePullSecrets": {
                    "type": "array",
                    "description": "Global Docker registry secret names as an array",
                    "default": [],
                    "items": {}
                },
                "storageClass": {
                    "type": "string",
                    "description": "Global StorageClass for Persistent Volume(s)",
                    "default": ""
                }
            }
        },
        "nameOverride": {
            "type": "string",
            "description": "String to partially override common.names.fullname",
            "default": ""
        },
        "fullnameOverride": {
            "type": "string",
            "description": "String to fully override common.names.fullname",
            "default": ""
        },
        "kubeVersion": {
            "type": "string",
            "description": "Force target Kubernetes version (using Helm capabilities if not set)",
            "default": ""
        },
        "commonLabels": {
            "type": "object",
            "description": "Labels to add to all deployed objects (sub-charts are not considered)",
            "default": {}
        },
        "commonAnnotations": {
            "type": "object",
            "description": "Annotations to add to all deployed objects",
            "default": {}
        },
        "diagnosticMode": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable diagnostic mode (all probes will be disabled and the command will be overridden)",
                    "default": false
                },
                "command": {
                    "type": "array",
                    "description": "Command to override all containers in the deployment",
                    "default": [
                        "sleep"
                    ],
                    "items": {
                        "type": "string"
                    }
                },
                "args": {
                    "type": "array",
                    "description": "Args to override all containers in the deployment",
                    "default": [
                        "infinity"
                    ],
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "image": {
            "type": "object",
            "properties": {
                "registry": {
                    "type": "string",
                    "description": "Fluent Bit image registry",
                    "default": "docker.io"
                },
                "repository": {
                    "type": "string",
                    "description": "Fluent Bit image repository",
                    "default": "bitnami/fluent-bit"
                },
                "tag": {
                    "type": "string",
                    "description": "Fluent Bit image tag (immutable tags are recommended)",
                    "default": "2.1.9-debian-11-r0"
                },
                "digest": {
                    "type": "string",
                    "description": "Fluent Bit image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag",
                    "default": ""
                },
                "pullPolicy": {
                    "type": "string",
                    "description": "image pull policy",
                    "default": "IfNotPresent"
                },
                "pullSecrets": {
                    "type": "array",
                    "description": "Fluent Bit image pull secrets",
                    "default": [],
                    "items": {}
                },
                "debug": {
                    "type": "boolean",
                    "description": "Enable image debug mode",
                    "default": false
                }
            }
        },
        "daemonset": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Use a daemonset instead of a deployment. `replicaCount` will not take effect.",
                    "default": false
                },
                "podSecurityContext": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable security context for daemonset pods",
                            "default": true
                        },
                        "runAsUser": {
                            "type": "number",
                            "description": "User ID for daemonset containers",
                            "default": 0
                        },
                        "runAsGroup": {
                            "type": "number",
                            "description": "Group ID for daemonset containers",
                            "default": 0
                        },
                        "fsGroup": {
                            "type": "number",
                            "description": "Group ID for daemonset containers filesystem",
                            "default": 0
                        }
                    }
                },
                "hostPaths": {
                    "type": "object",
                    "properties": {
                        "logs": {
                            "type": "string",
                            "description": "Path to the node logs dir",
                            "default": "/var/log"
                        },
                        "containerLogs": {
                            "type": "string",
                            "description": "Path to the container logs dir",
                            "default": "/var/lib/docker/containers"
                        },
                        "machineId": {
                            "type": "string",
                            "description": "Path to the machine-id file",
                            "default": "/etc/machine-id"
                        }
                    }
                }
            }
        },
        "hostNetwork": {
            "type": "boolean",
            "description": "Enable HOST Network",
            "default": false
        },
        "command": {
            "type": "array",
            "description": "Command for running the container (set to default if not set). Use array form",
            "default": [],
            "items": {}
        },
        "args": {
            "type": "array",
            "description": "Args for running the container (set to default if not set). Use array form",
            "default": [],
            "items": {}
        },
        "extraEnvVars": {
            "type": "array",
            "description": "Extra environment variables to be set on fluent-bit container",
            "default": [],
            "items": {}
        },
        "extraEnvVarsCM": {
            "type": "string",
            "description": "Name of existing ConfigMap containing extra env vars",
            "default": ""
        },
        "extraEnvVarsSecret": {
            "type": "string",
            "description": "Name of existing Secret containing extra env vars",
            "default": ""
        },
        "existingConfigMap": {
            "type": "string",
            "description": "Name of an existing ConfigMap with the Fluent Bit config file",
            "default": ""
        },
        "hostAliases": {
            "type": "array",
            "description": "Deployment pod host aliases",
            "default": [],
            "items": {}
        },
        "replicaCount": {
            "type": "number",
            "description": "Number of Fluent Bit replicas",
            "default": 1
        },
        "livenessProbe": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable livenessProbe on nodes",
                    "default": true
                },
                "initialDelaySeconds": {
                    "type": "number",
                    "description": "Initial delay seconds for livenessProbe",
                    "default": 10
                },
                "periodSeconds": {
                    "type": "number",
                    "description": "Period seconds for livenessProbe",
                    "default": 10
                },
                "timeoutSeconds": {
                    "type": "number",
                    "description": "Timeout seconds for livenessProbe",
                    "default": 1
                },
                "failureThreshold": {
                    "type": "number",
                    "description": "Failure threshold for livenessProbe",
                    "default": 3
                },
                "successThreshold": {
                    "type": "number",
                    "description": "Success threshold for livenessProbe",
                    "default": 1
                }
            }
        },
        "startupProbe": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable startupProbe on containers",
                    "default": true
                },
                "initialDelaySeconds": {
                    "type": "number",
                    "description": "Initial delay seconds for startupProbe",
                    "default": 10
                },
                "periodSeconds": {
                    "type": "number",
                    "description": "Period seconds for startupProbe",
                    "default": 10
                },
                "timeoutSeconds": {
                    "type": "number",
                    "description": "Timeout seconds for startupProbe",
                    "default": 1
                },
                "failureThreshold": {
                    "type": "number",
                    "description": "Failure threshold for startupProbe",
                    "default": 15
                },
                "successThreshold": {
                    "type": "number",
                    "description": "Success threshold for startupProbe",
                    "default": 1
                }
            }
        },
        "readinessProbe": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable readinessProbe",
                    "default": true
                },
                "initialDelaySeconds": {
                    "type": "number",
                    "description": "Initial delay seconds for readinessProbe",
                    "default": 10
                },
                "periodSeconds": {
                    "type": "number",
                    "description": "Period seconds for readinessProbe",
                    "default": 10
                },
                "timeoutSeconds": {
                    "type": "number",
                    "description": "Timeout seconds for readinessProbe",
                    "default": 1
                },
                "failureThreshold": {
                    "type": "number",
                    "description": "Failure threshold for readinessProbe",
                    "default": 15
                },
                "successThreshold": {
                    "type": "number",
                    "description": "Success threshold for readinessProbe",
                    "default": 1
                }
            }
        },
        "customLivenessProbe": {
            "type": "object",
            "description": "Custom livenessProbe that overrides the default one",
            "default": {}
        },
        "resources": {
            "type": "object",
            "properties": {
                "limits": {
                    "type": "object",
                    "description": "The resources limits for Fluent Bit containers",
                    "default": {}
                },
                "requests": {
                    "type": "object",
                    "description": "The requested resources for Fluent Bit containers",
                    "default": {}
                }
            }
        },
        "extraVolumeMounts": {
            "type": "array",
            "description": "Optionally specify extra list of additional volumeMounts for fluent-bit container",
            "default": [],
            "items": {}
        },
        "containerPorts": {
            "type": "object",
            "properties": {
                "http": {
                    "type": "number",
                    "description": "Port for HTTP port",
                    "default": 2020
                }
            }
        },
        "service": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string",
                    "description": "Fluent Bit service type",
                    "default": "ClusterIP"
                },
                "ports": {
                    "type": "object",
                    "properties": {
                        "http": {
                            "type": "number",
                            "description": "Port for HTTP port",
                            "default": 2020
                        }
                    }
                },
                "nodePorts": {
                    "type": "object",
                    "properties": {
                        "http": {
                            "type": "string",
                            "description": "Node port for HTTP port",
                            "default": ""
                        }
                    }
                },
                "extraPorts": {
                    "type": "array",
                    "description": "Extra ports to expose in the service (normally used with the `sidecar` value)",
                    "default": [],
                    "items": {}
                },
                "loadBalancerIP": {
                    "type": "string",
                    "description": "LoadBalancerIP if service type is `LoadBalancer`",
                    "default": ""
                },
                "loadBalancerSourceRanges": {
                    "type": "array",
                    "description": "Service Load Balancer sources",
                    "default": [],
                    "items": {}
                },
                "clusterIP": {
                    "type": "string",
                    "description": "Service Cluster IP",
                    "default": ""
                },
                "externalTrafficPolicy": {
                    "type": "string",
                    "description": "Service external traffic policy",
                    "default": "Cluster"
                },
                "annotations": {
                    "type": "object",
                    "description": "Provide any additional annotations which may be required.",
                    "default": {}
                },
                "sessionAffinity": {
                    "type": "string",
                    "description": "Session Affinity for Kubernetes service, can be \"None\" or \"ClientIP\"",
                    "default": "None"
                },
                "sessionAffinityConfig": {
                    "type": "object",
                    "description": "Additional settings for the sessionAffinity",
                    "default": {}
                }
            }
        },
        "serviceAccount": {
            "type": "object",
            "properties": {
                "create": {
                    "type": "boolean",
                    "description": "Enables ServiceAccount",
                    "default": true
                },
                "name": {
                    "type": "string",
                    "description": "ServiceAccount name",
                    "default": ""
                },
                "annotations": {
                    "type": "object",
                    "description": "Annotations to add to all deployed objects",
                    "default": {}
                },
                "automountServiceAccountToken": {
                    "type": "boolean",
                    "description": "Automount API credentials for a service account.",
                    "default": true
                }
            }
        },
        "podSecurityContext": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enabled Fluent Bit pods' Security Context",
                    "default": true
                },
                "fsGroup": {
                    "type": "number",
                    "description": "Set Fluent Bit pod's Security Context fsGroup",
                    "default": 1001
                }
            }
        },
        "containerSecurityContext": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enabled Fluent Bit containers' Security Context",
                    "default": true
                },
                "runAsUser": {
                    "type": "number",
                    "description": "Set Fluent Bit container's Security Context runAsUser",
                    "default": 1001
                },
                "runAsNonRoot": {
                    "type": "boolean",
                    "description": "Force the container to be run as non root",
                    "default": true
                }
            }
        },
        "podAnnotations": {
            "type": "object",
            "description": "Additional pod annotations",
            "default": {}
        },
        "podLabels": {
            "type": "object",
            "description": "Additional pod labels",
            "default": {}
        },
        "podAffinityPreset": {
            "type": "string",
            "description": "Pod affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`",
            "default": ""
        },
        "podAntiAffinityPreset": {
            "type": "string",
            "description": "Pod anti-affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`",
            "default": "soft"
        },
        "nodeAffinityPreset": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string",
                    "description": "Node affinity preset type. Ignored if `affinity` is set. Allowed values: `soft` or `hard`",
                    "default": ""
                },
                "key": {
                    "type": "string",
                    "description": "Node label key to match. Ignored if `affinity` is set",
                    "default": ""
                },
                "values": {
                    "type": "array",
                    "description": "Node label values to match. Ignored if `affinity` is set",
                    "default": [],
                    "items": {}
                }
            }
        },
        "priorityClassName": {
            "type": "string",
            "description": "Server priorityClassName",
            "default": ""
        },
        "affinity": {
            "type": "object",
            "description": "Affinity for pod assignment",
            "default": {}
        },
        "nodeSelector": {
            "type": "object",
            "description": "Node labels for pod assignment",
            "default": {}
        },
        "tolerations": {
            "type": "array",
            "description": "Tolerations for pod assignment",
            "default": [],
            "items": {}
        },
        "topologySpreadConstraints": {
            "type": "array",
            "description": "Topology Spread Constraints for pod assignment",
            "default": [],
            "items": {}
        },
        "schedulerName": {
            "type": "string",
            "description": "Alternative scheduler",
            "default": ""
        },
        "updateStrategy": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string",
                    "description": "Fluent Bit deployment strategy type",
                    "default": "RollingUpdate"
                },
                "rollingUpdate": {
                    "type": "object",
                    "description": "Fluent Bit deployment rolling update configuration parameters",
                    "default": {}
                }
            }
        },
        "extraVolumes": {
            "type": "array",
            "description": "Optionally specify extra list of additional volumes for fluent-bit container",
            "default": [],
            "items": {}
        },
        "initContainers": {
            "type": "array",
            "description": "Add additional init containers to the fluent-bit pods",
            "default": [],
            "items": {}
        },
        "sidecars": {
            "type": "array",
            "description": "Add additional sidecar containers to the fluent-bit pods",
            "default": [],
            "items": {}
        },
        "config": {
            "type": "object",
            "properties": {
                "flush": {
                    "type": "number",
                    "description": "Interval to flush output (seconds)",
                    "default": 1
                },
                "logLevel": {
                    "type": "string",
                    "description": "Diagnostic level (error/warning/info/debug/trace)",
                    "default": "info"
                },
                "service": {
                    "type": "string",
                    "description": "Defines the global behaviour of the Fluent Bit engine.",
                    "default": "[SERVICE]\n    Flush        {{ .Values.config.flush }}\n    Daemon       Off\n    LogLevel     {{ .Values.config.logLevel }}\n    Config_Watch On\n    HTTP_Server  On\n    HTTP_Listen  0.0.0.0\n    HTTP_Port    {{ .Values.containerPorts.http }}\n"
                },
                "inputs": {
                    "type": "string",
                    "description": "Defines the source from where Fluent Bit can collect data",
                    "default": "[INPUT]\n    Name cpu\n"
                },
                "filters": {
                    "type": "string",
                    "description": "Set of plugins that can be used to filter, modify, or enrich log data that is processed by Fluent Bit.",
                    "default": ""
                },
                "outputs": {
                    "type": "string",
                    "description": "Outputs to send the collected data to different destinations",
                    "default": "[OUTPUT]\n    Name  stdout\n    Match *\n"
                },
                "upstream": {
                    "type": "object",
                    "description": "This configuration is deprecated, please use `extraFiles` instead.",
                    "default": {}
                },
                "customParsers": {
                    "type": "string",
                    "description": "Custom parsers",
                    "default": "[PARSER]\n    Name docker_no_time\n    Format json\n    Time_Keep Off\n    Time_Key time\n    Time_Format %Y-%m-%dT%H:%M:%S.%L\n"
                },
                "extraFiles": {
                    "type": "object",
                    "description": "Extra config files",
                    "default": {}
                }
            }
        },
        "rbac": {
            "type": "object",
            "properties": {
                "create": {
                    "type": "boolean",
                    "description": "Create Role and RoleBinding",
                    "default": false
                },
                "nodeAccess": {
                    "type": "boolean",
                    "description": "RBAC node access",
                    "default": false
                },
                "rules": {
                    "type": "array",
                    "description": "Custom RBAC rules to set",
                    "default": [],
                    "items": {}
                }
            }
        },
        "autoscaling": {
            "type": "object",
            "properties": {
                "vpa": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable VPA",
                            "default": false
                        },
                        "annotations": {
                            "type": "object",
                            "description": "Annotations for VPA resource",
                            "default": {}
                        },
                        "controlledResources": {
                            "type": "array",
                            "description": "VPA List of resources that the vertical pod autoscaler can control. Defaults to cpu and memory",
                            "default": [],
                            "items": {}
                        },
                        "maxAllowed": {
                            "type": "object",
                            "description": "VPA Max allowed resources for the pod",
                            "default": {}
                        },
                        "minAllowed": {
                            "type": "object",
                            "description": "VPA Min allowed resources for the pod",
                            "default": {}
                        },
                        "updatePolicy": {
                            "type": "object",
                            "properties": {
                                "updateMode": {
                                    "type": "string",
                                    "description": "Autoscaling update policy Specifies whether recommended updates are applied when a Pod is started and whether recommended updates are applied during the life of a Pod",
                                    "default": "Auto"
                                }
                            }
                        }
                    }
                },
                "hpa": {
                    "type": "object",
                    "properties": {
                        "annotations": {
                            "type": "object",
                            "description": "Annotations for HPA resource",
                            "default": {}
                        },
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable HPA",
                            "default": false
                        },
                        "minReplicas": {
                            "type": "number",
                            "description": "Min replicas",
                            "default": 1
                        },
                        "maxReplicas": {
                            "type": "number",
                            "description": "Max replicas",
                            "default": 3
                        },
                        "targetCPUUtilizationPercentage": {
                            "type": "number",
                            "description": "Target CPU utilization percentage",
                            "default": 75
                        },
                        "targetMemoryUtilizationPercentage": {
                            "type": "string",
                            "description": "Target Memory utilization percentage",
                            "default": ""
                        },
                        "customRules": {
                            "type": "array",
                            "description": "Custom rules",
                            "default": [],
                            "items": {}
                        },
                        "behavior": {
                            "type": "object",
                            "description": "HPA Behavior",
                            "default": {}
                        }
                    }
                }
            }
        },
        "ingress": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable ingress controller resource for fluentBit Console",
                    "default": false
                },
                "apiVersion": {
                    "type": "string",
                    "description": "Force Ingress API version (automatically detected if not set)",
                    "default": ""
                },
                "ingressClassName": {
                    "type": "string",
                    "description": "IngressClass that will be be used to implement the Ingress (Kubernetes 1.18+)",
                    "default": ""
                },
                "hostname": {
                    "type": "string",
                    "description": "Default host for the ingress resource",
                    "default": "fluent-bit.local"
                },
                "path": {
                    "type": "string",
                    "description": "The Path to fluentBit&reg;. You may need to set this to '/*' in order to use this with ALB ingress controllers.",
                    "default": "/"
                },
                "pathType": {
                    "type": "string",
                    "description": "Ingress path type",
                    "default": "ImplementationSpecific"
                },
                "annotations": {
                    "type": "object",
                    "description": "Additional annotations for the Ingress resource. To enable certificate autogeneration, place here your cert-manager annotations.",
                    "default": {}
                },
                "tls": {
                    "type": "boolean",
                    "description": "Enable TLS configuration for the hostname defined at `ingress.hostname` parameter",
                    "default": false
                },
                "selfSigned": {
                    "type": "boolean",
                    "description": "Create a TLS secret for this ingress record using self-signed certificates generated by Helm",
                    "default": false
                },
                "extraHosts": {
                    "type": "array",
                    "description": "The list of additional hostnames to be covered with this ingress record.",
                    "default": [],
                    "items": {}
                },
                "extraPaths": {
                    "type": "array",
                    "description": "Any additional paths that may need to be added to the ingress under the main host",
                    "default": [],
                    "items": {}
                },
                "extraTls": {
                    "type": "array",
                    "description": "The tls configuration for additional hostnames to be covered with this ingress record.",
                    "default": [],
                    "items": {}
                },
                "secrets": {
                    "type": "array",
                    "description": "If you're providing your own certificates, please use this to add the certificates as secrets",
                    "default": [],
                    "items": {}
                },
                "extraRules": {
                    "type": "array",
                    "description": "Additional rules to be covered with this ingress record",
                    "default": [],
                    "items": {}
                }
            }
        },
        "pdb": {
            "type": "object",
            "properties": {
                "create": {
                    "type": "boolean",
                    "description": "Deploy a PodDisruptionBudget object for Fluent Bit deployment",
                    "default": false
                },
                "minAvailable": {
                    "type": "string",
                    "description": "Minimum available Fluent Bit replicas (expressed in percentage)",
                    "default": ""
                },
                "maxUnavailable": {
                    "type": "string",
                    "description": "Maximum unavailable Fluent Bit replicas (expressed in percentage)",
                    "default": "50%"
                }
            }
        },
        "metrics": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable the export of Prometheus metrics",
                    "default": false
                },
                "serviceMonitor": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "if `true`, creates a Prometheus Operator ServiceMonitor (also requires `metrics.enabled` to be `true`)",
                            "default": false
                        },
                        "namespace": {
                            "type": "string",
                            "description": "Namespace in which Prometheus is running",
                            "default": ""
                        },
                        "annotations": {
                            "type": "object",
                            "properties": {
                                "prometheus": {
                                    "type": "object",
                                    "properties": {
                                        "io/scrape": {
                                            "type": "string",
                                            "description": "",
                                            "default": "true"
                                        },
                                        "io/port": {
                                            "type": "string",
                                            "description": "",
                                            "default": "{{ .Values.service.ports.http }}"
                                        },
                                        "io/path": {
                                            "type": "string",
                                            "description": "",
                                            "default": "/metrics"
                                        }
                                    }
                                }
                            }
                        },
                        "labels": {
                            "type": "object",
                            "description": "Extra labels for the ServiceMonitor",
                            "default": {}
                        },
                        "jobLabel": {
                            "type": "string",
                            "description": "The name of the label on the target service to use as the job name in Prometheus",
                            "default": ""
                        },
                        "honorLabels": {
                            "type": "boolean",
                            "description": "honorLabels chooses the metric's labels on collisions with target labels",
                            "default": false
                        },
                        "interval": {
                            "type": "string",
                            "description": "Interval at which metrics should be scraped.",
                            "default": ""
                        },
                        "scrapeTimeout": {
                            "type": "string",
                            "description": "Timeout after which the scrape is ended",
                            "default": ""
                        },
                        "metricRelabelings": {
                            "type": "array",
                            "description": "Specify additional relabeling of metrics",
                            "default": [],
                            "items": {}
                        },
                        "relabelings": {
                            "type": "array",
                            "description": "Specify general relabeling",
                            "default": [],
                            "items": {}
                        },
                        "selector": {
                            "type": "object",
                            "description": "Prometheus instance selector labels",
                            "default": {}
                        }
                    }
                }
            }
        },
        "extraDeploy": {
            "type": "array",
            "description": "Array of extra objects to deploy with the release",
            "default": [],
            "items": {}
        }
    }
}