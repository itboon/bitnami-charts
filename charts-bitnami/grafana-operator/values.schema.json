{
    "title": "Chart Values",
    "type": "object",
    "properties": {
        "global": {
            "type": "object",
            "properties": {
                "imageRegistry": {
                    "type": "string",
                    "description": "Global Docker image registry",
                    "default": ""
                },
                "imagePullSecrets": {
                    "type": "array",
                    "description": "Global Docker registry secret names as an array",
                    "default": [],
                    "items": {}
                }
            }
        },
        "kubeVersion": {
            "type": "string",
            "description": "Force target Kubernetes version (using Helm capabilities if not set)",
            "default": ""
        },
        "nameOverride": {
            "type": "string",
            "description": "String to partially override common.names.fullname template with a string (will prepend the release name)",
            "default": ""
        },
        "fullnameOverride": {
            "type": "string",
            "description": "String to fully override common.names.fullname template with a string",
            "default": ""
        },
        "namespaceOverride": {
            "type": "string",
            "description": "String to fully override common.names.namespace",
            "default": ""
        },
        "extraDeploy": {
            "type": "array",
            "description": "Array of extra objects to deploy with the release",
            "default": [],
            "items": {}
        },
        "commonLabels": {
            "type": "object",
            "description": "Common Labels which are applied to every resource deployed",
            "default": {}
        },
        "commonAnnotations": {
            "type": "object",
            "description": "Common Annotations which are applied to every ressource deployed",
            "default": {}
        },
        "clusterDomain": {
            "type": "string",
            "description": "Kubernetes cluster domain name",
            "default": "cluster.local"
        },
        "operator": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable the deployment of the Grafana Operator",
                    "default": true
                },
                "command": {
                    "type": "array",
                    "description": "Default container command (useful when using custom images)",
                    "default": [],
                    "items": {}
                },
                "args": {
                    "type": "array",
                    "description": "Default container args (useful when using custom images)",
                    "default": [],
                    "items": {}
                },
                "schedulerName": {
                    "type": "string",
                    "description": "Alternative scheduler",
                    "default": ""
                },
                "lifecycleHooks": {
                    "type": "object",
                    "description": "for the grafana-operator container to automate configuration before or after startup",
                    "default": {}
                },
                "replicaCount": {
                    "type": "number",
                    "description": "Number of grafana-operator Pod replicas",
                    "default": 1
                },
                "extraVolumes": {
                    "type": "array",
                    "description": "Optionally specify extra list of additional volumes for Grafana Operator pods",
                    "default": [],
                    "items": {}
                },
                "extraVolumeMounts": {
                    "type": "array",
                    "description": "Optionally specify extra list of additional volumeMounts for Grafana Operator container(s)",
                    "default": [],
                    "items": {}
                },
                "initContainers": {
                    "type": "array",
                    "description": "Add additional init containers to the Grafana Operator pods",
                    "default": [],
                    "items": {}
                },
                "sidecars": {
                    "type": "array",
                    "description": "Add additional sidecar containers to the Grafana Operator pods",
                    "default": [],
                    "items": {}
                },
                "namespaceScope": {
                    "type": "boolean",
                    "description": "If the operator should run in namespace-scope mode or not,",
                    "default": false
                },
                "watchNamespace": {
                    "type": "string",
                    "description": "Override the namespace to watch",
                    "default": ""
                },
                "topologySpreadConstraints": {
                    "type": "array",
                    "description": "Topology Spread Constraints for pod assignment",
                    "default": [],
                    "items": {}
                },
                "priorityClassName": {
                    "type": "string",
                    "description": "%%MAIN_CONTAINER_NAME%% pods' priorityClassName",
                    "default": ""
                },
                "terminationGracePeriodSeconds": {
                    "type": "string",
                    "description": "In seconds, time the given to the %%MAIN_CONTAINER_NAME%% pod needs to terminate gracefully",
                    "default": ""
                },
                "updateStrategy": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "Set up update strategy for Grafana Operator installation.",
                            "default": "Recreate"
                        }
                    }
                },
                "image": {
                    "type": "object",
                    "properties": {
                        "registry": {
                            "type": "string",
                            "description": "Grafana Operator image registry",
                            "default": "docker.io"
                        },
                        "repository": {
                            "type": "string",
                            "description": "Grafana Operator image name",
                            "default": "bitnami/grafana-operator"
                        },
                        "tag": {
                            "type": "string",
                            "description": "Grafana Operator image tag",
                            "default": "5.4.0-debian-11-r0"
                        },
                        "digest": {
                            "type": "string",
                            "description": "Grafana Operator image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag",
                            "default": ""
                        },
                        "pullPolicy": {
                            "type": "string",
                            "description": "Grafana Operator image pull policy",
                            "default": "IfNotPresent"
                        },
                        "pullSecrets": {
                            "type": "array",
                            "description": "Grafana Operator image pull secrets",
                            "default": [],
                            "items": {}
                        }
                    }
                },
                "leaderElect": {
                    "type": "boolean",
                    "description": "Enables or disables the operator leader Election.",
                    "default": true
                },
                "zapDevel": {
                    "type": "boolean",
                    "description": "Enable zap development mode (changes defaults to console encoder, debug log level, disables sampling and stacktrace from 'warning' level)",
                    "default": false
                },
                "zapEncoder": {
                    "type": "string",
                    "description": "Zap log encoding ('json' or 'console')",
                    "default": ""
                },
                "zapLevel": {
                    "type": "string",
                    "description": "Zap log level (one of 'debug', 'info', 'error' or any integer value > 0) (default info)",
                    "default": ""
                },
                "zapSample": {
                    "type": "string",
                    "description": "Enable zap log sampling. Sampling will be disabled for integer log levels > 1",
                    "default": ""
                },
                "zapStacktraceLevel": {
                    "type": "string",
                    "description": "Set the minimum log level that triggers stacktrace generation (default error)",
                    "default": ""
                },
                "zapTimeEncoding": {
                    "type": "string",
                    "description": "Sets the zap time format ('epoch', 'millis', 'nano', or 'iso8601') (default )",
                    "default": ""
                },
                "extraArgs": {
                    "type": "array",
                    "description": "Extra arguments for the grafana operator (Evaluated as a template)",
                    "default": [],
                    "items": {}
                },
                "rbac": {
                    "type": "object",
                    "properties": {
                        "create": {
                            "type": "boolean",
                            "description": "Create specifies whether to install and use RBAC rules",
                            "default": true
                        }
                    }
                },
                "serviceAccount": {
                    "type": "object",
                    "properties": {
                        "create": {
                            "type": "boolean",
                            "description": "Specifies whether a service account should be created",
                            "default": true
                        },
                        "name": {
                            "type": "string",
                            "description": "The name of the service account to use. If not set and create is true, a name is generated using the fullname template",
                            "default": ""
                        },
                        "annotations": {
                            "type": "object",
                            "description": "Add annotations",
                            "default": {}
                        },
                        "automountServiceAccountToken": {
                            "type": "boolean",
                            "description": "Automount API credentials for a service account.",
                            "default": true
                        }
                    }
                },
                "podSecurityContext": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable pods security context",
                            "default": true
                        },
                        "runAsUser": {
                            "type": "number",
                            "description": "User ID for the pods",
                            "default": 1001
                        },
                        "runAsGroup": {
                            "type": "number",
                            "description": "User ID for the pods",
                            "default": 1001
                        },
                        "runAsNonRoot": {
                            "type": "boolean",
                            "description": "Grafana Operator must run as nonRoot",
                            "default": true
                        },
                        "fsGroup": {
                            "type": "number",
                            "description": "Group ID for the pods",
                            "default": 1001
                        },
                        "supplementalGroups": {
                            "type": "array",
                            "description": "Which group IDs containers add",
                            "default": [],
                            "items": {}
                        }
                    }
                },
                "containerSecurityContext": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable container security context",
                            "default": true
                        },
                        "runAsUser": {
                            "type": "number",
                            "description": "User ID for the operator container",
                            "default": 1001
                        },
                        "runAsGroup": {
                            "type": "number",
                            "description": "User ID for the operator container",
                            "default": 1001
                        },
                        "runAsNonRoot": {
                            "type": "boolean",
                            "description": "Force the container to be run as non-root",
                            "default": true
                        },
                        "privileged": {
                            "type": "boolean",
                            "description": "Decide if the container runs privileged.",
                            "default": false
                        },
                        "readOnlyRootFilesystem": {
                            "type": "boolean",
                            "description": "ReadOnlyRootFilesystem fot the operator container",
                            "default": false
                        },
                        "allowPrivilegeEscalation": {
                            "type": "boolean",
                            "description": "Allow Privilege Escalation for the operator container",
                            "default": false
                        }
                    }
                },
                "resources": {
                    "type": "object",
                    "description": "Container resource requests and limits",
                    "default": {}
                },
                "containerPorts": {
                    "type": "object",
                    "properties": {
                        "metrics": {
                            "type": "number",
                            "description": "Grafana Operator container port (used for metrics)",
                            "default": 8080
                        }
                    }
                },
                "hostAliases": {
                    "type": "array",
                    "description": "Add deployment host aliases",
                    "default": [],
                    "items": {}
                },
                "extraEnvVars": {
                    "type": "array",
                    "description": "Array with extra environment variables to add to RabbitMQ Cluster Operator nodes",
                    "default": [],
                    "items": {}
                },
                "extraEnvVarsCM": {
                    "type": "string",
                    "description": "Name of existing ConfigMap containing extra env vars for RabbitMQ Cluster Operator nodes",
                    "default": ""
                },
                "extraEnvVarsSecret": {
                    "type": "string",
                    "description": "Name of existing Secret containing extra env vars for RabbitMQ Cluster Operator nodes",
                    "default": ""
                },
                "podAntiAffinityPreset": {
                    "type": "string",
                    "description": "Pod anti-affinity preset. Allowed values: `soft` or `hard`",
                    "default": "soft"
                },
                "nodeAffinityPreset": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "Node affinity preset type. Allowed values: `soft` or `hard`",
                            "default": ""
                        },
                        "key": {
                            "type": "string",
                            "description": "Set nodeAffinity preset key",
                            "default": ""
                        },
                        "values": {
                            "type": "array",
                            "description": "Set nodeAffinity preset values",
                            "default": [],
                            "items": {}
                        }
                    }
                },
                "podAnnotations": {
                    "type": "object",
                    "description": "Pod annotations",
                    "default": {}
                },
                "podLabels": {
                    "type": "object",
                    "description": "Additional pod labels",
                    "default": {}
                },
                "nodeSelector": {
                    "type": "object",
                    "description": "Node labels for pod assignment",
                    "default": {}
                },
                "tolerations": {
                    "type": "array",
                    "description": "Tolerations for controller pod assignment",
                    "default": [],
                    "items": {}
                },
                "affinity": {
                    "type": "object",
                    "description": "Affinity for controller pod assignment",
                    "default": {}
                },
                "prometheus": {
                    "type": "object",
                    "properties": {
                        "serviceMonitor": {
                            "type": "object",
                            "properties": {
                                "enabled": {
                                    "type": "boolean",
                                    "description": "Specify if a ServiceMonitor will be deployed for prometheus-operator",
                                    "default": false
                                },
                                "namespace": {
                                    "type": "string",
                                    "description": "Namespace for the ServiceMonitor Resource (defaults to the Release Namespace)",
                                    "default": ""
                                },
                                "jobLabel": {
                                    "type": "string",
                                    "description": "Specify the jobLabel to use for the prometheus-operator",
                                    "default": "app.kubernetes.io/name"
                                },
                                "interval": {
                                    "type": "string",
                                    "description": "Scrape interval. If not set, the Prometheus default scrape interval is used",
                                    "default": ""
                                },
                                "scrapeTimeout": {
                                    "type": "string",
                                    "description": "Timeout after which the scrape is ended",
                                    "default": ""
                                },
                                "metricRelabelings": {
                                    "type": "array",
                                    "description": "Specify additional relabeling of metrics",
                                    "default": [],
                                    "items": {}
                                },
                                "relabelings": {
                                    "type": "array",
                                    "description": "Specify general relabeling",
                                    "default": [],
                                    "items": {}
                                },
                                "selector": {
                                    "type": "object",
                                    "description": "ServiceMonitor selector labels",
                                    "default": {}
                                },
                                "labels": {
                                    "type": "object",
                                    "description": "Extra labels for the ServiceMonitor",
                                    "default": {}
                                },
                                "honorLabels": {
                                    "type": "boolean",
                                    "description": "honorLabels chooses the metric's labels on collisions with target labels",
                                    "default": false
                                }
                            }
                        }
                    }
                },
                "livenessProbe": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable livenessProbe",
                            "default": true
                        },
                        "initialDelaySeconds": {
                            "type": "number",
                            "description": "Initial delay seconds for livenessProbe",
                            "default": 10
                        },
                        "periodSeconds": {
                            "type": "number",
                            "description": "Period seconds for livenessProbe",
                            "default": 10
                        },
                        "timeoutSeconds": {
                            "type": "number",
                            "description": "Timeout seconds for livenessProbe",
                            "default": 1
                        },
                        "failureThreshold": {
                            "type": "number",
                            "description": "Failure threshold for livenessProbe",
                            "default": 3
                        },
                        "successThreshold": {
                            "type": "number",
                            "description": "Success threshold for livenessProbe",
                            "default": 1
                        }
                    }
                },
                "readinessProbe": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable readinessProbe",
                            "default": true
                        },
                        "initialDelaySeconds": {
                            "type": "number",
                            "description": "Initial delay seconds for readinessProbe",
                            "default": 10
                        },
                        "periodSeconds": {
                            "type": "number",
                            "description": "Period seconds for readinessProbe",
                            "default": 10
                        },
                        "timeoutSeconds": {
                            "type": "number",
                            "description": "Timeout seconds for readinessProbe",
                            "default": 1
                        },
                        "failureThreshold": {
                            "type": "number",
                            "description": "Failure threshold for readinessProbe",
                            "default": 3
                        },
                        "successThreshold": {
                            "type": "number",
                            "description": "Success threshold for readinessProbe",
                            "default": 1
                        }
                    }
                },
                "startupProbe": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable startupProbe",
                            "default": true
                        },
                        "initialDelaySeconds": {
                            "type": "number",
                            "description": "Initial delay seconds for startupProbe",
                            "default": 10
                        },
                        "periodSeconds": {
                            "type": "number",
                            "description": "Period seconds for startupProbe",
                            "default": 10
                        },
                        "timeoutSeconds": {
                            "type": "number",
                            "description": "Timeout seconds for startupProbe",
                            "default": 1
                        },
                        "failureThreshold": {
                            "type": "number",
                            "description": "Failure threshold for startupProbe",
                            "default": 3
                        },
                        "successThreshold": {
                            "type": "number",
                            "description": "Success threshold for startupProbe",
                            "default": 1
                        }
                    }
                }
            }
        },
        "grafana": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enabled the deployment of the Grafana CRD object into the cluster",
                    "default": true
                },
                "image": {
                    "type": "object",
                    "properties": {
                        "registry": {
                            "type": "string",
                            "description": "Grafana image registry",
                            "default": "docker.io"
                        },
                        "repository": {
                            "type": "string",
                            "description": "Grafana image name",
                            "default": "bitnami/grafana"
                        },
                        "tag": {
                            "type": "string",
                            "description": "Grafana image tag",
                            "default": "10.1.1-debian-11-r2"
                        },
                        "digest": {
                            "type": "string",
                            "description": "Grafana image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag",
                            "default": ""
                        },
                        "pullPolicy": {
                            "type": "string",
                            "description": "Grafana image pull policy",
                            "default": "IfNotPresent"
                        },
                        "pullSecrets": {
                            "type": "array",
                            "description": "Grafana image pull secrets",
                            "default": [],
                            "items": {}
                        }
                    }
                },
                "serviceAccount": {
                    "type": "object",
                    "description": "Additional service account configuration",
                    "default": {}
                },
                "podSecurityContext": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable pods security context",
                            "default": true
                        },
                        "runAsUser": {
                            "type": "number",
                            "description": "User ID for the pods",
                            "default": 1001
                        },
                        "runAsGroup": {
                            "type": "number",
                            "description": "User ID for the pods",
                            "default": 0
                        },
                        "runAsNonRoot": {
                            "type": "boolean",
                            "description": "Grafana Operator must run as nonRoot",
                            "default": true
                        },
                        "fsGroup": {
                            "type": "number",
                            "description": "Group ID for the pods",
                            "default": 1001
                        },
                        "supplementalGroups": {
                            "type": "array",
                            "description": "Which group IDs containers add",
                            "default": [],
                            "items": {}
                        }
                    }
                },
                "containerSecurityContext": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable containers security context",
                            "default": true
                        },
                        "runAsUser": {
                            "type": "number",
                            "description": "User ID for the containers",
                            "default": 1001
                        },
                        "runAsGroup": {
                            "type": "number",
                            "description": "Group ID for the containers",
                            "default": 0
                        },
                        "privileged": {
                            "type": "boolean",
                            "description": "Decide if the container runs privileged.",
                            "default": false
                        },
                        "runAsNonRoot": {
                            "type": "boolean",
                            "description": "Force the container to run as non-root",
                            "default": true
                        },
                        "allowPrivilegeEscalation": {
                            "type": "boolean",
                            "description": "Don't allow privilege escalation for the containers",
                            "default": false
                        },
                        "readOnlyRootFilesystem": {
                            "type": "boolean",
                            "description": "Mount / (root) as a readonly filesystem",
                            "default": false
                        }
                    }
                },
                "resources": {
                    "type": "object",
                    "properties": {
                        "limits": {
                            "type": "object",
                            "description": "The resources limits for the container",
                            "default": {}
                        },
                        "requests": {
                            "type": "object",
                            "description": "The requested resources for the container",
                            "default": {}
                        }
                    }
                },
                "replicaCount": {
                    "type": "number",
                    "description": "Specify the amount of replicas running",
                    "default": 1
                },
                "podAffinityPreset": {
                    "type": "string",
                    "description": "Pod affinity preset",
                    "default": ""
                },
                "podAntiAffinityPreset": {
                    "type": "string",
                    "description": "Pod anti-affinity preset",
                    "default": "soft"
                },
                "nodeAffinityPreset": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "Set nodeAffinity preset type",
                            "default": ""
                        },
                        "key": {
                            "type": "string",
                            "description": "Set nodeAffinity preset key",
                            "default": ""
                        },
                        "values": {
                            "type": "array",
                            "description": "Set nodeAffinity preset values",
                            "default": [],
                            "items": {}
                        }
                    }
                },
                "affinity": {
                    "type": "object",
                    "description": "Affinity for controller pod assignment",
                    "default": {}
                },
                "nodeSelector": {
                    "type": "object",
                    "description": "Node labels for controller pod assignment",
                    "default": {}
                },
                "tolerations": {
                    "type": "array",
                    "description": "Tolerations for controller pod assignment",
                    "default": [],
                    "items": {}
                },
                "envFrom": {
                    "type": "array",
                    "description": "Extra environment variable to pass to the running container",
                    "default": [],
                    "items": {}
                },
                "client": {
                    "type": "object",
                    "properties": {
                        "timeout": {
                            "type": "number",
                            "description": "The timeout in seconds for the Grafana Rest API on that instance",
                            "default": 5
                        }
                    }
                },
                "labels": {
                    "type": "object",
                    "description": "Add additional labels to the grafana deployment, service and ingress resources",
                    "default": {}
                },
                "service": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "Kubernetes Service type",
                            "default": "ClusterIP"
                        },
                        "annotations": {
                            "type": "object",
                            "description": "Additional custom annotations for Grafana service",
                            "default": {}
                        },
                        "extraPorts": {
                            "type": "array",
                            "description": "Extra ports to expose in the Grafana service",
                            "default": [],
                            "items": {}
                        }
                    }
                },
                "ingress": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "If an ingress or OpenShift Route should be created",
                            "default": false
                        },
                        "ingressClassName": {
                            "type": "string",
                            "description": "IngressClass that will be be used to implement the Ingress (Kubernetes 1.18+)",
                            "default": ""
                        },
                        "host": {
                            "type": "string",
                            "description": "The host under which the grafana instance should be reachable. If empty the parameter will not be set.",
                            "default": "grafana.local"
                        },
                        "path": {
                            "type": "string",
                            "description": "The path for the ingress instance to forward to the grafana app",
                            "default": "/"
                        },
                        "pathType": {
                            "type": "string",
                            "description": "The pathType for the ingress instance to forward to the grafana app",
                            "default": "ImplementationSpecific"
                        },
                        "labels": {
                            "type": "object",
                            "description": "Additional Labels for the ingress resource",
                            "default": {}
                        },
                        "annotations": {
                            "type": "object",
                            "description": "Additional Annotations for the ingress resource",
                            "default": {}
                        },
                        "tls": {
                            "type": "boolean",
                            "description": "This enables tls support for the ingress resource",
                            "default": false
                        },
                        "tlsSecret": {
                            "type": "string",
                            "description": "The name for the secret to use for the tls termination",
                            "default": "grafana.local-tls"
                        }
                    }
                },
                "persistence": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable persistent storage for the grafana deployment",
                            "default": false
                        },
                        "storageClass": {
                            "type": "string",
                            "description": "Define the storageClass for the persistent storage if not defined default is used",
                            "default": ""
                        },
                        "existingVolume": {
                            "type": "string",
                            "description": "Define the existingVolume for the persistent storage provisioned outside this chart",
                            "default": ""
                        },
                        "accessModes": {
                            "type": "array",
                            "description": "Define the accessModes for the persistent storage",
                            "default": [
                                "ReadWriteOnce"
                            ],
                            "items": {
                                "type": "string"
                            }
                        },
                        "annotations": {
                            "type": "object",
                            "description": "Add annotations to the persistent volume",
                            "default": {}
                        },
                        "size": {
                            "type": "string",
                            "description": "Define the size of the PersistentVolumeClaim to request for",
                            "default": "10Gi"
                        }
                    }
                },
                "config": {
                    "type": "object",
                    "properties": {
                        "server": {
                            "type": "object",
                            "properties": {
                                "root_url": {
                                    "type": "string",
                                    "description": "",
                                    "default": "{{- if .Values.grafana.ingress.enabled }}\n{{ if .Values.grafana.ingress.tls }}https{{ else }}http{{ end }}://{{ include \"common.tplvalues.render\" (dict \"value\" .Values.grafana.ingress.host \"context\" $) }}\n{{- else }}\nhttp://localhost:3000\n{{- end }}"
                                }
                            }
                        },
                        "log": {
                            "type": "object",
                            "properties": {
                                "mode": {
                                    "type": "string",
                                    "description": "",
                                    "default": "console"
                                },
                                "level": {
                                    "type": "string",
                                    "description": "",
                                    "default": "warn"
                                }
                            }
                        },
                        "database": {
                            "type": "object",
                            "properties": {
                                "wal": {
                                    "type": "string",
                                    "description": "",
                                    "default": "true"
                                }
                            }
                        },
                        "analytics": {
                            "type": "object",
                            "properties": {
                                "reporting_enabled": {
                                    "type": "string",
                                    "description": "",
                                    "default": "false"
                                },
                                "check_for_updates": {
                                    "type": "string",
                                    "description": "",
                                    "default": "false"
                                }
                            }
                        },
                        "security": {
                            "type": "object",
                            "properties": {
                                "disable_gravatar": {
                                    "type": "string",
                                    "description": "",
                                    "default": "false"
                                }
                            }
                        }
                    }
                },
                "jsonnetLibrarySelector": {
                    "type": "object",
                    "properties": {
                        "matchLabels": {
                            "type": "object",
                            "properties": {
                                "app": {
                                    "type": "object",
                                    "properties": {
                                        "kubernetes": {
                                            "type": "object",
                                            "properties": {
                                                "io/instance": {
                                                    "type": "string",
                                                    "description": "",
                                                    "default": "{{ .Release.Name }}"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "livenessProbe": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable livenessProbe",
                            "default": true
                        },
                        "initialDelaySeconds": {
                            "type": "number",
                            "description": "Initial delay seconds for livenessProbe",
                            "default": 120
                        },
                        "periodSeconds": {
                            "type": "number",
                            "description": "Period seconds for livenessProbe",
                            "default": 10
                        },
                        "timeoutSeconds": {
                            "type": "number",
                            "description": "Timeout seconds for livenessProbe",
                            "default": 5
                        },
                        "failureThreshold": {
                            "type": "number",
                            "description": "Failure threshold for livenessProbe",
                            "default": 6
                        },
                        "successThreshold": {
                            "type": "number",
                            "description": "Success threshold for livenessProbe",
                            "default": 1
                        }
                    }
                },
                "readinessProbe": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable readinessProbe",
                            "default": true
                        },
                        "initialDelaySeconds": {
                            "type": "number",
                            "description": "Initial delay seconds for readinessProbe",
                            "default": 30
                        },
                        "periodSeconds": {
                            "type": "number",
                            "description": "Period seconds for readinessProbe",
                            "default": 10
                        },
                        "timeoutSeconds": {
                            "type": "number",
                            "description": "Timeout seconds for readinessProbe",
                            "default": 5
                        },
                        "failureThreshold": {
                            "type": "number",
                            "description": "Failure threshold for readinessProbe",
                            "default": 6
                        },
                        "successThreshold": {
                            "type": "number",
                            "description": "Success threshold for readinessProbe",
                            "default": 1
                        }
                    }
                },
                "updateStrategy": {
                    "type": "object",
                    "description": "Set up update strategy for Grafana installation.",
                    "default": {}
                },
                "extraVolumes": {
                    "type": "array",
                    "description": "Optionally specify extra list of additional volumes for the grafana pod(s)",
                    "default": [],
                    "items": {}
                },
                "extraVolumeMounts": {
                    "type": "array",
                    "description": "Optionally specify extra list of additional volumeMounts for the grafana container",
                    "default": [],
                    "items": {}
                },
                "secrets": {
                    "type": "array",
                    "description": "Optionally specify a list of secrets to be mounted to the grafana pod(s)",
                    "default": [],
                    "items": {}
                },
                "sidecars": {
                    "type": "array",
                    "description": "Add additional sidecar containers to the grafana pod(s)",
                    "default": [],
                    "items": {}
                }
            }
        }
    }
}