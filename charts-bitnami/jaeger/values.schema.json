{
    "title": "Chart Values",
    "type": "object",
    "properties": {
        "global": {
            "type": "object",
            "properties": {
                "imageRegistry": {
                    "type": "string",
                    "description": "Global Docker image registry",
                    "default": ""
                },
                "imagePullSecrets": {
                    "type": "array",
                    "description": "Global Docker registry secret names as an array",
                    "default": [],
                    "items": {}
                },
                "storageClass": {
                    "type": "string",
                    "description": "Global StorageClass for Persistent Volume(s)",
                    "default": ""
                }
            }
        },
        "nameOverride": {
            "type": "string",
            "description": "String to partially override common.names.fullname",
            "default": ""
        },
        "fullnameOverride": {
            "type": "string",
            "description": "String to fully override common.names.fullname",
            "default": ""
        },
        "kubeVersion": {
            "type": "string",
            "description": "Force target Kubernetes version (using Helm capabilities if not set)",
            "default": ""
        },
        "commonLabels": {
            "type": "object",
            "description": "Labels to add to all deployed objects (sub-charts are not considered)",
            "default": {}
        },
        "commonAnnotations": {
            "type": "object",
            "description": "Annotations to add to all deployed objects",
            "default": {}
        },
        "diagnosticMode": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable diagnostic mode (all probes will be disabled and the command will be overridden)",
                    "default": false
                },
                "command": {
                    "type": "array",
                    "description": "Command to override all containers in the deployment",
                    "default": [
                        "sleep"
                    ],
                    "items": {
                        "type": "string"
                    }
                },
                "args": {
                    "type": "array",
                    "description": "Args to override all containers in the deployment",
                    "default": [
                        "infinity"
                    ],
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "image": {
            "type": "object",
            "properties": {
                "registry": {
                    "type": "string",
                    "description": "Jaeger image registry",
                    "default": "docker.io"
                },
                "repository": {
                    "type": "string",
                    "description": "Jaeger image repository",
                    "default": "bitnami/jaeger"
                },
                "tag": {
                    "type": "string",
                    "description": "Jaeger image tag (immutable tags are recommended)",
                    "default": "1.49.0-debian-11-r0"
                },
                "digest": {
                    "type": "string",
                    "description": "Jaeger image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag",
                    "default": ""
                },
                "pullPolicy": {
                    "type": "string",
                    "description": "image pull policy",
                    "default": "IfNotPresent"
                },
                "pullSecrets": {
                    "type": "array",
                    "description": "Jaeger image pull secrets",
                    "default": [],
                    "items": {}
                },
                "debug": {
                    "type": "boolean",
                    "description": "Enable image debug mode",
                    "default": false
                }
            }
        },
        "query": {
            "type": "object",
            "properties": {
                "command": {
                    "type": "array",
                    "description": "Command for running the container (set to default if not set). Use array form",
                    "default": [],
                    "items": {}
                },
                "args": {
                    "type": "array",
                    "description": "Args for running the container (set to default if not set). Use array form",
                    "default": [],
                    "items": {}
                },
                "extraEnvVars": {
                    "type": "array",
                    "description": "Extra environment variables to be set on jaeger container",
                    "default": [],
                    "items": {}
                },
                "extraEnvVarsCM": {
                    "type": "string",
                    "description": "Name of existing ConfigMap containing extra env vars",
                    "default": ""
                },
                "extraEnvVarsSecret": {
                    "type": "string",
                    "description": "Name of existing Secret containing extra env vars",
                    "default": ""
                },
                "replicaCount": {
                    "type": "number",
                    "description": "Number of Jaeger replicas",
                    "default": 1
                },
                "livenessProbe": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable livenessProbe on Query nodes",
                            "default": true
                        },
                        "initialDelaySeconds": {
                            "type": "number",
                            "description": "Initial delay seconds for livenessProbe",
                            "default": 10
                        },
                        "periodSeconds": {
                            "type": "number",
                            "description": "Period seconds for livenessProbe",
                            "default": 10
                        },
                        "timeoutSeconds": {
                            "type": "number",
                            "description": "Timeout seconds for livenessProbe",
                            "default": 1
                        },
                        "failureThreshold": {
                            "type": "number",
                            "description": "Failure threshold for livenessProbe",
                            "default": 3
                        },
                        "successThreshold": {
                            "type": "number",
                            "description": "Success threshold for livenessProbe",
                            "default": 1
                        }
                    }
                },
                "startupProbe": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable startupProbe on Query containers",
                            "default": false
                        },
                        "initialDelaySeconds": {
                            "type": "number",
                            "description": "Initial delay seconds for startupProbe",
                            "default": 10
                        },
                        "periodSeconds": {
                            "type": "number",
                            "description": "Period seconds for startupProbe",
                            "default": 10
                        },
                        "timeoutSeconds": {
                            "type": "number",
                            "description": "Timeout seconds for startupProbe",
                            "default": 1
                        },
                        "failureThreshold": {
                            "type": "number",
                            "description": "Failure threshold for startupProbe",
                            "default": 15
                        },
                        "successThreshold": {
                            "type": "number",
                            "description": "Success threshold for startupProbe",
                            "default": 1
                        }
                    }
                },
                "readinessProbe": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable readinessProbe",
                            "default": false
                        },
                        "initialDelaySeconds": {
                            "type": "number",
                            "description": "Initial delay seconds for readinessProbe",
                            "default": 10
                        },
                        "periodSeconds": {
                            "type": "number",
                            "description": "Period seconds for readinessProbe",
                            "default": 10
                        },
                        "timeoutSeconds": {
                            "type": "number",
                            "description": "Timeout seconds for readinessProbe",
                            "default": 1
                        },
                        "failureThreshold": {
                            "type": "number",
                            "description": "Failure threshold for readinessProbe",
                            "default": 15
                        },
                        "successThreshold": {
                            "type": "number",
                            "description": "Success threshold for readinessProbe",
                            "default": 1
                        }
                    }
                },
                "customLivenessProbe": {
                    "type": "object",
                    "description": "Custom livenessProbe that overrides the default one",
                    "default": {}
                },
                "resources": {
                    "type": "object",
                    "properties": {
                        "limits": {
                            "type": "object",
                            "description": "The resources limits for Jaeger containers",
                            "default": {}
                        },
                        "requests": {
                            "type": "object",
                            "description": "The requested resources for Jaeger containers",
                            "default": {}
                        }
                    }
                },
                "extraVolumeMounts": {
                    "type": "array",
                    "description": "Optionally specify extra list of additional volumeMounts for jaeger container",
                    "default": [],
                    "items": {}
                },
                "containerPorts": {
                    "type": "object",
                    "properties": {
                        "api": {
                            "type": "number",
                            "description": "Port for API",
                            "default": 16686
                        },
                        "admin": {
                            "type": "number",
                            "description": "Port for admin",
                            "default": 16687
                        }
                    }
                },
                "service": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "Jaeger service type",
                            "default": "ClusterIP"
                        },
                        "ports": {
                            "type": "object",
                            "properties": {
                                "api": {
                                    "type": "number",
                                    "description": "Port for API",
                                    "default": 16686
                                },
                                "admin": {
                                    "type": "number",
                                    "description": "Port for admin",
                                    "default": 16687
                                }
                            }
                        },
                        "nodePorts": {
                            "type": "object",
                            "properties": {
                                "api": {
                                    "type": "string",
                                    "description": "Node port for API",
                                    "default": ""
                                },
                                "admin": {
                                    "type": "string",
                                    "description": "Node port for admin",
                                    "default": ""
                                }
                            }
                        },
                        "extraPorts": {
                            "type": "array",
                            "description": "Extra ports to expose in the service (normally used with the `sidecar` value)",
                            "default": [],
                            "items": {}
                        },
                        "loadBalancerIP": {
                            "type": "string",
                            "description": "LoadBalancerIP if service type is `LoadBalancer`",
                            "default": ""
                        },
                        "loadBalancerSourceRanges": {
                            "type": "array",
                            "description": "Service Load Balancer sources",
                            "default": [],
                            "items": {}
                        },
                        "clusterIP": {
                            "type": "string",
                            "description": "Service Cluster IP",
                            "default": ""
                        },
                        "externalTrafficPolicy": {
                            "type": "string",
                            "description": "Service external traffic policy",
                            "default": "Cluster"
                        },
                        "annotations": {
                            "type": "object",
                            "description": "Provide any additional annotations which may be required.",
                            "default": {}
                        },
                        "sessionAffinity": {
                            "type": "string",
                            "description": "Session Affinity for Kubernetes service, can be \"None\" or \"ClientIP\"",
                            "default": "None"
                        },
                        "sessionAffinityConfig": {
                            "type": "object",
                            "description": "Additional settings for the sessionAffinity",
                            "default": {}
                        },
                        "metrics": {
                            "type": "object",
                            "properties": {
                                "annotations": {
                                    "type": "object",
                                    "properties": {
                                        "prometheus": {
                                            "type": "object",
                                            "properties": {
                                                "io/scrape": {
                                                    "type": "string",
                                                    "description": "",
                                                    "default": "true"
                                                },
                                                "io/port": {
                                                    "type": "string",
                                                    "description": "",
                                                    "default": "{{ .Values.query.service.ports.admin }}"
                                                },
                                                "io/path": {
                                                    "type": "string",
                                                    "description": "",
                                                    "default": "/metrics"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "serviceAccount": {
                    "type": "object",
                    "properties": {
                        "create": {
                            "type": "boolean",
                            "description": "Enables ServiceAccount",
                            "default": true
                        },
                        "name": {
                            "type": "string",
                            "description": "ServiceAccount name",
                            "default": ""
                        },
                        "annotations": {
                            "type": "object",
                            "description": "Annotations to add to all deployed objects",
                            "default": {}
                        },
                        "automountServiceAccountToken": {
                            "type": "boolean",
                            "description": "Automount API credentials for a service account.",
                            "default": true
                        }
                    }
                },
                "podSecurityContext": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enabled Jaeger pods' Security Context",
                            "default": true
                        },
                        "fsGroup": {
                            "type": "number",
                            "description": "Set Jaeger pod's Security Context fsGroup",
                            "default": 1001
                        }
                    }
                },
                "containerSecurityContext": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enabled Jaeger containers' Security Context",
                            "default": true
                        },
                        "runAsUser": {
                            "type": "number",
                            "description": "Set Jaeger container's Security Context runAsUser",
                            "default": 1001
                        },
                        "runAsNonRoot": {
                            "type": "boolean",
                            "description": "Force the container to be run as non root",
                            "default": true
                        }
                    }
                },
                "podAnnotations": {
                    "type": "object",
                    "description": "Additional pod annotations",
                    "default": {}
                },
                "podLabels": {
                    "type": "object",
                    "description": "Additional pod labels",
                    "default": {}
                },
                "podAffinityPreset": {
                    "type": "string",
                    "description": "Pod affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`",
                    "default": ""
                },
                "podAntiAffinityPreset": {
                    "type": "string",
                    "description": "Pod anti-affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`",
                    "default": "soft"
                },
                "nodeAffinityPreset": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "Node affinity preset type. Ignored if `affinity` is set. Allowed values: `soft` or `hard`",
                            "default": ""
                        },
                        "key": {
                            "type": "string",
                            "description": "Node label key to match. Ignored if `affinity` is set",
                            "default": ""
                        },
                        "values": {
                            "type": "array",
                            "description": "Node label values to match. Ignored if `affinity` is set",
                            "default": [],
                            "items": {}
                        }
                    }
                },
                "priorityClassName": {
                    "type": "string",
                    "description": "Server priorityClassName",
                    "default": ""
                },
                "affinity": {
                    "type": "object",
                    "description": "Affinity for pod assignment",
                    "default": {}
                },
                "nodeSelector": {
                    "type": "object",
                    "description": "Node labels for pod assignment",
                    "default": {}
                },
                "tolerations": {
                    "type": "array",
                    "description": "Tolerations for pod assignment",
                    "default": [],
                    "items": {}
                },
                "topologySpreadConstraints": {
                    "type": "array",
                    "description": "Topology Spread Constraints for pod assignment",
                    "default": [],
                    "items": {}
                },
                "schedulerName": {
                    "type": "string",
                    "description": "Alternative scheduler",
                    "default": ""
                },
                "updateStrategy": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "Jaeger query deployment strategy type",
                            "default": "RollingUpdate"
                        },
                        "rollingUpdate": {
                            "type": "object",
                            "description": "Jaeger query deployment rolling update configuration parameters",
                            "default": {}
                        }
                    }
                },
                "extraVolumes": {
                    "type": "array",
                    "description": "Optionally specify extra list of additional volumes for jaeger container",
                    "default": [],
                    "items": {}
                },
                "initContainers": {
                    "type": "array",
                    "description": "Add additional init containers to the jaeger pods",
                    "default": [],
                    "items": {}
                },
                "sidecars": {
                    "type": "array",
                    "description": "Add additional sidecar containers to the jaeger pods",
                    "default": [],
                    "items": {}
                }
            }
        },
        "collector": {
            "type": "object",
            "properties": {
                "command": {
                    "type": "array",
                    "description": "Command for running the container (set to default if not set). Use array form",
                    "default": [],
                    "items": {}
                },
                "args": {
                    "type": "array",
                    "description": "Args for running the container (set to default if not set). Use array form",
                    "default": [],
                    "items": {}
                },
                "extraEnvVars": {
                    "type": "array",
                    "description": "Extra environment variables to be set on jaeger container",
                    "default": [],
                    "items": {}
                },
                "extraEnvVarsCM": {
                    "type": "string",
                    "description": "Name of existing ConfigMap containing extra env vars",
                    "default": ""
                },
                "extraEnvVarsSecret": {
                    "type": "string",
                    "description": "Name of existing Secret containing extra env vars",
                    "default": ""
                },
                "replicaCount": {
                    "type": "number",
                    "description": "Number of Jaeger replicas",
                    "default": 1
                },
                "livenessProbe": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable livenessProbe on collector nodes",
                            "default": true
                        },
                        "initialDelaySeconds": {
                            "type": "number",
                            "description": "Initial delay seconds for livenessProbe",
                            "default": 10
                        },
                        "periodSeconds": {
                            "type": "number",
                            "description": "Period seconds for livenessProbe",
                            "default": 10
                        },
                        "timeoutSeconds": {
                            "type": "number",
                            "description": "Timeout seconds for livenessProbe",
                            "default": 1
                        },
                        "failureThreshold": {
                            "type": "number",
                            "description": "Failure threshold for livenessProbe",
                            "default": 3
                        },
                        "successThreshold": {
                            "type": "number",
                            "description": "Success threshold for livenessProbe",
                            "default": 1
                        }
                    }
                },
                "startupProbe": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable startupProbe on collector containers",
                            "default": false
                        },
                        "initialDelaySeconds": {
                            "type": "number",
                            "description": "Initial delay seconds for startupProbe",
                            "default": 10
                        },
                        "periodSeconds": {
                            "type": "number",
                            "description": "Period seconds for startupProbe",
                            "default": 10
                        },
                        "timeoutSeconds": {
                            "type": "number",
                            "description": "Timeout seconds for startupProbe",
                            "default": 1
                        },
                        "failureThreshold": {
                            "type": "number",
                            "description": "Failure threshold for startupProbe",
                            "default": 15
                        },
                        "successThreshold": {
                            "type": "number",
                            "description": "Success threshold for startupProbe",
                            "default": 1
                        }
                    }
                },
                "readinessProbe": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable readinessProbe",
                            "default": false
                        },
                        "initialDelaySeconds": {
                            "type": "number",
                            "description": "Initial delay seconds for readinessProbe",
                            "default": 10
                        },
                        "periodSeconds": {
                            "type": "number",
                            "description": "Period seconds for readinessProbe",
                            "default": 10
                        },
                        "timeoutSeconds": {
                            "type": "number",
                            "description": "Timeout seconds for readinessProbe",
                            "default": 1
                        },
                        "failureThreshold": {
                            "type": "number",
                            "description": "Failure threshold for readinessProbe",
                            "default": 15
                        },
                        "successThreshold": {
                            "type": "number",
                            "description": "Success threshold for readinessProbe",
                            "default": 1
                        }
                    }
                },
                "customLivenessProbe": {
                    "type": "object",
                    "description": "Custom livenessProbe that overrides the default one",
                    "default": {}
                },
                "resources": {
                    "type": "object",
                    "properties": {
                        "limits": {
                            "type": "object",
                            "description": "The resources limits for Jaeger containers",
                            "default": {}
                        },
                        "requests": {
                            "type": "object",
                            "description": "The requested resources for Jaeger containers",
                            "default": {}
                        }
                    }
                },
                "extraVolumeMounts": {
                    "type": "array",
                    "description": "Optionally specify extra list of additional volumeMounts for jaeger container",
                    "default": [],
                    "items": {}
                },
                "containerPorts": {
                    "type": "object",
                    "properties": {
                        "zipkin": {
                            "type": "number",
                            "description": "can accept Zipkin spans in Thrift, JSON and Proto (disabled by default)",
                            "default": 9411
                        },
                        "grpc": {
                            "type": "number",
                            "description": "used by jaeger-agent to send spans in model.proto format",
                            "default": 14250
                        },
                        "binary": {
                            "type": "number",
                            "description": "can accept spans directly from clients in jaeger.thrift format over binary thrift protocol",
                            "default": 14268
                        },
                        "admin": {
                            "type": "number",
                            "description": "Admin port: health check at / and metrics at /metrics",
                            "default": 14269
                        }
                    }
                },
                "service": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "Jaeger service type",
                            "default": "ClusterIP"
                        },
                        "ports": {
                            "type": "object",
                            "properties": {
                                "zipkin": {
                                    "type": "number",
                                    "description": "can accept Zipkin spans in Thrift, JSON and Proto (disabled by default)",
                                    "default": 9411
                                },
                                "grpc": {
                                    "type": "number",
                                    "description": "used by jaeger-agent to send spans in model.proto format",
                                    "default": 14250
                                },
                                "binary": {
                                    "type": "number",
                                    "description": "can accept spans directly from clients in jaeger.thrift format over binary thrift protocol",
                                    "default": 14268
                                },
                                "admin": {
                                    "type": "number",
                                    "description": "Admin port: health check at / and metrics at /metrics",
                                    "default": 14269
                                }
                            }
                        },
                        "nodePorts": {
                            "type": "object",
                            "properties": {
                                "zipkin": {
                                    "type": "string",
                                    "description": "can accept Zipkin spans in Thrift, JSON and Proto (disabled by default)",
                                    "default": ""
                                },
                                "grpc": {
                                    "type": "string",
                                    "description": "used by jaeger-agent to send spans in model.proto format",
                                    "default": ""
                                },
                                "binary": {
                                    "type": "string",
                                    "description": "can accept spans directly from clients in jaeger.thrift format over binary thrift protocol",
                                    "default": ""
                                },
                                "admin": {
                                    "type": "string",
                                    "description": "Admin port: health check at / and metrics at /metrics",
                                    "default": ""
                                }
                            }
                        },
                        "extraPorts": {
                            "type": "array",
                            "description": "Extra ports to expose in the service (normally used with the `sidecar` value)",
                            "default": [],
                            "items": {}
                        },
                        "loadBalancerIP": {
                            "type": "string",
                            "description": "LoadBalancerIP if service type is `LoadBalancer`",
                            "default": ""
                        },
                        "loadBalancerSourceRanges": {
                            "type": "array",
                            "description": "Service Load Balancer sources",
                            "default": [],
                            "items": {}
                        },
                        "clusterIP": {
                            "type": "string",
                            "description": "Service Cluster IP",
                            "default": ""
                        },
                        "externalTrafficPolicy": {
                            "type": "string",
                            "description": "Service external traffic policy",
                            "default": "Cluster"
                        },
                        "annotations": {
                            "type": "object",
                            "description": "Provide any additional annotations which may be required.",
                            "default": {}
                        },
                        "sessionAffinity": {
                            "type": "string",
                            "description": "Session Affinity for Kubernetes service, can be \"None\" or \"ClientIP\"",
                            "default": "None"
                        },
                        "sessionAffinityConfig": {
                            "type": "object",
                            "description": "Additional settings for the sessionAffinity",
                            "default": {}
                        },
                        "metrics": {
                            "type": "object",
                            "properties": {
                                "annotations": {
                                    "type": "object",
                                    "properties": {
                                        "prometheus": {
                                            "type": "object",
                                            "properties": {
                                                "io/scrape": {
                                                    "type": "string",
                                                    "description": "",
                                                    "default": "true"
                                                },
                                                "io/port": {
                                                    "type": "string",
                                                    "description": "",
                                                    "default": "{{ .Values.collector.service.ports.admin }}"
                                                },
                                                "io/path": {
                                                    "type": "string",
                                                    "description": "",
                                                    "default": "/metrics"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "serviceAccount": {
                    "type": "object",
                    "properties": {
                        "create": {
                            "type": "boolean",
                            "description": "Enables ServiceAccount",
                            "default": true
                        },
                        "name": {
                            "type": "string",
                            "description": "ServiceAccount name",
                            "default": ""
                        },
                        "annotations": {
                            "type": "object",
                            "description": "Annotations to add to all deployed objects",
                            "default": {}
                        },
                        "automountServiceAccountToken": {
                            "type": "boolean",
                            "description": "Automount API credentials for a service account.",
                            "default": true
                        }
                    }
                },
                "podSecurityContext": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enabled Jaeger pods' Security Context",
                            "default": true
                        },
                        "fsGroup": {
                            "type": "number",
                            "description": "Set Jaeger pod's Security Context fsGroup",
                            "default": 1001
                        }
                    }
                },
                "containerSecurityContext": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enabled Jaeger containers' Security Context",
                            "default": true
                        },
                        "runAsUser": {
                            "type": "number",
                            "description": "Set Jaeger container's Security Context runAsUser",
                            "default": 1001
                        },
                        "runAsNonRoot": {
                            "type": "boolean",
                            "description": "Force the container to be run as non root",
                            "default": true
                        }
                    }
                },
                "podAnnotations": {
                    "type": "object",
                    "description": "Additional pod annotations",
                    "default": {}
                },
                "podLabels": {
                    "type": "object",
                    "description": "Additional pod labels",
                    "default": {}
                },
                "podAffinityPreset": {
                    "type": "string",
                    "description": "Pod affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`",
                    "default": ""
                },
                "podAntiAffinityPreset": {
                    "type": "string",
                    "description": "Pod anti-affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`",
                    "default": "soft"
                },
                "nodeAffinityPreset": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "Node affinity preset type. Ignored if `affinity` is set. Allowed values: `soft` or `hard`",
                            "default": ""
                        },
                        "key": {
                            "type": "string",
                            "description": "Node label key to match. Ignored if `affinity` is set",
                            "default": ""
                        },
                        "values": {
                            "type": "array",
                            "description": "Node label values to match. Ignored if `affinity` is set",
                            "default": [],
                            "items": {}
                        }
                    }
                },
                "priorityClassName": {
                    "type": "string",
                    "description": "Server priorityClassName",
                    "default": ""
                },
                "affinity": {
                    "type": "object",
                    "description": "Affinity for pod assignment",
                    "default": {}
                },
                "nodeSelector": {
                    "type": "object",
                    "description": "Node labels for pod assignment",
                    "default": {}
                },
                "tolerations": {
                    "type": "array",
                    "description": "Tolerations for pod assignment",
                    "default": [],
                    "items": {}
                },
                "topologySpreadConstraints": {
                    "type": "array",
                    "description": "Topology Spread Constraints for pod assignment",
                    "default": [],
                    "items": {}
                },
                "schedulerName": {
                    "type": "string",
                    "description": "Alternative scheduler",
                    "default": ""
                },
                "updateStrategy": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "Jaeger collector deployment strategy type",
                            "default": "RollingUpdate"
                        },
                        "rollingUpdate": {
                            "type": "object",
                            "description": "Jaeger collector deployment rolling update configuration parameters",
                            "default": {}
                        }
                    }
                },
                "extraVolumes": {
                    "type": "array",
                    "description": "Optionally specify extra list of additional volumes for jaeger container",
                    "default": [],
                    "items": {}
                },
                "initContainers": {
                    "type": "array",
                    "description": "Add additional init containers to the jaeger pods",
                    "default": [],
                    "items": {}
                },
                "sidecars": {
                    "type": "array",
                    "description": "Add additional sidecar containers to the jaeger pods",
                    "default": [],
                    "items": {}
                }
            }
        },
        "agent": {
            "type": "object",
            "properties": {
                "command": {
                    "type": "array",
                    "description": "Command for running the container (set to default if not set). Use array form",
                    "default": [],
                    "items": {}
                },
                "args": {
                    "type": "array",
                    "description": "Args for running the container (set to default if not set). Use array form",
                    "default": [],
                    "items": {}
                },
                "extraEnvVars": {
                    "type": "array",
                    "description": "Extra environment variables to be set on jaeger container",
                    "default": [],
                    "items": {}
                },
                "extraEnvVarsCM": {
                    "type": "string",
                    "description": "Name of existing ConfigMap containing extra env vars",
                    "default": ""
                },
                "extraEnvVarsSecret": {
                    "type": "string",
                    "description": "Name of existing Secret containing extra env vars",
                    "default": ""
                },
                "replicaCount": {
                    "type": "number",
                    "description": "Number of Jaeger replicas",
                    "default": 1
                },
                "livenessProbe": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable livenessProbe on agent nodes",
                            "default": true
                        },
                        "initialDelaySeconds": {
                            "type": "number",
                            "description": "Initial delay seconds for livenessProbe",
                            "default": 10
                        },
                        "periodSeconds": {
                            "type": "number",
                            "description": "Period seconds for livenessProbe",
                            "default": 10
                        },
                        "timeoutSeconds": {
                            "type": "number",
                            "description": "Timeout seconds for livenessProbe",
                            "default": 1
                        },
                        "failureThreshold": {
                            "type": "number",
                            "description": "Failure threshold for livenessProbe",
                            "default": 3
                        },
                        "successThreshold": {
                            "type": "number",
                            "description": "Success threshold for livenessProbe",
                            "default": 1
                        }
                    }
                },
                "startupProbe": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable startupProbe on agent containers",
                            "default": false
                        },
                        "initialDelaySeconds": {
                            "type": "number",
                            "description": "Initial delay seconds for startupProbe",
                            "default": 10
                        },
                        "periodSeconds": {
                            "type": "number",
                            "description": "Period seconds for startupProbe",
                            "default": 10
                        },
                        "timeoutSeconds": {
                            "type": "number",
                            "description": "Timeout seconds for startupProbe",
                            "default": 1
                        },
                        "failureThreshold": {
                            "type": "number",
                            "description": "Failure threshold for startupProbe",
                            "default": 15
                        },
                        "successThreshold": {
                            "type": "number",
                            "description": "Success threshold for startupProbe",
                            "default": 1
                        }
                    }
                },
                "readinessProbe": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable readinessProbe",
                            "default": false
                        },
                        "initialDelaySeconds": {
                            "type": "number",
                            "description": "Initial delay seconds for readinessProbe",
                            "default": 10
                        },
                        "periodSeconds": {
                            "type": "number",
                            "description": "Period seconds for readinessProbe",
                            "default": 10
                        },
                        "timeoutSeconds": {
                            "type": "number",
                            "description": "Timeout seconds for readinessProbe",
                            "default": 1
                        },
                        "failureThreshold": {
                            "type": "number",
                            "description": "Failure threshold for readinessProbe",
                            "default": 15
                        },
                        "successThreshold": {
                            "type": "number",
                            "description": "Success threshold for readinessProbe",
                            "default": 1
                        }
                    }
                },
                "customLivenessProbe": {
                    "type": "object",
                    "description": "Custom livenessProbe that overrides the default one",
                    "default": {}
                },
                "resources": {
                    "type": "object",
                    "properties": {
                        "limits": {
                            "type": "object",
                            "description": "The resources limits for Jaeger containers",
                            "default": {}
                        },
                        "requests": {
                            "type": "object",
                            "description": "The requested resources for Jaeger containers",
                            "default": {}
                        }
                    }
                },
                "extraVolumeMounts": {
                    "type": "array",
                    "description": "Optionally specify extra list of additional volumeMounts for jaeger container",
                    "default": [],
                    "items": {}
                },
                "containerPorts": {
                    "type": "object",
                    "properties": {
                        "compact": {
                            "type": "number",
                            "description": "accept jaeger.thrift in compact Thrift protocol used by most current Jaeger clients",
                            "default": 6831
                        },
                        "binary": {
                            "type": "number",
                            "description": "accept jaeger.thrift in binary Thrift protocol used by Node.js Jaeger client",
                            "default": 6832
                        },
                        "config": {
                            "type": "number",
                            "description": "Serve configs, sampling strategies",
                            "default": 5778
                        },
                        "zipkin": {
                            "type": "number",
                            "description": "Accept zipkin.thrift in compact Thrift protocol (deprecated; only used by very old Jaeger clients, circa 2016)",
                            "default": 5775
                        },
                        "admin": {
                            "type": "number",
                            "description": "Admin port: health check at / and metrics at /metrics",
                            "default": 14271
                        }
                    }
                },
                "service": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "Jaeger service type",
                            "default": "ClusterIP"
                        },
                        "ports": {
                            "type": "object",
                            "properties": {
                                "compact": {
                                    "type": "number",
                                    "description": "accept jaeger.thrift in compact Thrift protocol used by most current Jaeger clients",
                                    "default": 6831
                                },
                                "binary": {
                                    "type": "number",
                                    "description": "accept jaeger.thrift in binary Thrift protocol used by Node.js Jaeger client",
                                    "default": 6832
                                },
                                "config": {
                                    "type": "number",
                                    "description": "Serve configs, sampling strategies",
                                    "default": 5778
                                },
                                "zipkin": {
                                    "type": "number",
                                    "description": "Accept zipkin.thrift in compact Thrift protocol (deprecated; only used by very old Jaeger clients, circa 2016)",
                                    "default": 5775
                                },
                                "admin": {
                                    "type": "number",
                                    "description": "Admin port: health check at / and metrics at /metrics",
                                    "default": 14271
                                }
                            }
                        },
                        "nodePorts": {
                            "type": "object",
                            "properties": {
                                "compact": {
                                    "type": "string",
                                    "description": "accept jaeger.thrift in compact Thrift protocol used by most current Jaeger clients",
                                    "default": ""
                                },
                                "binary": {
                                    "type": "string",
                                    "description": "accept jaeger.thrift in binary Thrift protocol used by Node.js Jaeger client",
                                    "default": ""
                                },
                                "config": {
                                    "type": "string",
                                    "description": "Serve configs, sampling strategies",
                                    "default": ""
                                },
                                "zipkin": {
                                    "type": "string",
                                    "description": "Accept zipkin.thrift in compact Thrift protocol (deprecated; only used by very old Jaeger clients, circa 2016)",
                                    "default": ""
                                },
                                "admin": {
                                    "type": "string",
                                    "description": "Admin port: health check at / and metrics at /metrics",
                                    "default": ""
                                }
                            }
                        },
                        "extraPorts": {
                            "type": "array",
                            "description": "Extra ports to expose in the service (normally used with the `sidecar` value)",
                            "default": [],
                            "items": {}
                        },
                        "loadBalancerIP": {
                            "type": "string",
                            "description": "LoadBalancerIP if service type is `LoadBalancer`",
                            "default": ""
                        },
                        "loadBalancerSourceRanges": {
                            "type": "array",
                            "description": "Service Load Balancer sources",
                            "default": [],
                            "items": {}
                        },
                        "clusterIP": {
                            "type": "string",
                            "description": "Service Cluster IP",
                            "default": ""
                        },
                        "externalTrafficPolicy": {
                            "type": "string",
                            "description": "Service external traffic policy",
                            "default": "Cluster"
                        },
                        "annotations": {
                            "type": "object",
                            "description": "Provide any additional annotations which may be required.",
                            "default": {}
                        },
                        "sessionAffinity": {
                            "type": "string",
                            "description": "Session Affinity for Kubernetes service, can be \"None\" or \"ClientIP\"",
                            "default": "None"
                        },
                        "metrics": {
                            "type": "object",
                            "properties": {
                                "annotations": {
                                    "type": "object",
                                    "properties": {
                                        "prometheus": {
                                            "type": "object",
                                            "properties": {
                                                "io/scrape": {
                                                    "type": "string",
                                                    "description": "",
                                                    "default": "true"
                                                },
                                                "io/port": {
                                                    "type": "string",
                                                    "description": "",
                                                    "default": "{{ .Values.agent.service.ports.admin }}"
                                                },
                                                "io/path": {
                                                    "type": "string",
                                                    "description": "",
                                                    "default": "/metrics"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "sessionAffinityConfig": {
                            "type": "object",
                            "description": "Additional settings for the sessionAffinity",
                            "default": {}
                        }
                    }
                },
                "serviceAccount": {
                    "type": "object",
                    "properties": {
                        "create": {
                            "type": "boolean",
                            "description": "Enables ServiceAccount",
                            "default": true
                        },
                        "name": {
                            "type": "string",
                            "description": "ServiceAccount name",
                            "default": ""
                        },
                        "annotations": {
                            "type": "object",
                            "description": "Annotations to add to all deployed objects",
                            "default": {}
                        },
                        "automountServiceAccountToken": {
                            "type": "boolean",
                            "description": "Automount API credentials for a service account.",
                            "default": true
                        }
                    }
                },
                "podSecurityContext": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enabled Jaeger pods' Security Context",
                            "default": true
                        },
                        "fsGroup": {
                            "type": "number",
                            "description": "Set Jaeger pod's Security Context fsGroup",
                            "default": 1001
                        }
                    }
                },
                "containerSecurityContext": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enabled Jaeger containers' Security Context",
                            "default": true
                        },
                        "runAsUser": {
                            "type": "number",
                            "description": "Set Jaeger container's Security Context runAsUser",
                            "default": 1001
                        },
                        "runAsNonRoot": {
                            "type": "boolean",
                            "description": "Force the container to be run as non root",
                            "default": true
                        }
                    }
                },
                "podAnnotations": {
                    "type": "object",
                    "description": "Additional pod annotations",
                    "default": {}
                },
                "podLabels": {
                    "type": "object",
                    "description": "Additional pod labels",
                    "default": {}
                },
                "podAffinityPreset": {
                    "type": "string",
                    "description": "Pod affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`",
                    "default": ""
                },
                "podAntiAffinityPreset": {
                    "type": "string",
                    "description": "Pod anti-affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`",
                    "default": "soft"
                },
                "nodeAffinityPreset": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "Node affinity preset type. Ignored if `affinity` is set. Allowed values: `soft` or `hard`",
                            "default": ""
                        },
                        "key": {
                            "type": "string",
                            "description": "Node label key to match. Ignored if `affinity` is set",
                            "default": ""
                        },
                        "values": {
                            "type": "array",
                            "description": "Node label values to match. Ignored if `affinity` is set",
                            "default": [],
                            "items": {}
                        }
                    }
                },
                "priorityClassName": {
                    "type": "string",
                    "description": "Server priorityClassName",
                    "default": ""
                },
                "affinity": {
                    "type": "object",
                    "description": "Affinity for pod assignment",
                    "default": {}
                },
                "nodeSelector": {
                    "type": "object",
                    "description": "Node labels for pod assignment",
                    "default": {}
                },
                "tolerations": {
                    "type": "array",
                    "description": "Tolerations for pod assignment",
                    "default": [],
                    "items": {}
                },
                "topologySpreadConstraints": {
                    "type": "array",
                    "description": "Topology Spread Constraints for pod assignment",
                    "default": [],
                    "items": {}
                },
                "schedulerName": {
                    "type": "string",
                    "description": "Alternative scheduler",
                    "default": ""
                },
                "updateStrategy": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "Jaeger agent deployment strategy type",
                            "default": "RollingUpdate"
                        },
                        "rollingUpdate": {
                            "type": "object",
                            "description": "Jaeger agent deployment rolling update configuration parameters",
                            "default": {}
                        }
                    }
                },
                "extraVolumes": {
                    "type": "array",
                    "description": "Optionally specify extra list of additional volumes for jaeger container",
                    "default": [],
                    "items": {}
                },
                "initContainers": {
                    "type": "array",
                    "description": "Add additional init containers to the jaeger pods",
                    "default": [],
                    "items": {}
                },
                "sidecars": {
                    "type": "array",
                    "description": "Add additional sidecar containers to the jaeger pods",
                    "default": [],
                    "items": {}
                }
            }
        },
        "migration": {
            "type": "object",
            "properties": {
                "podLabels": {
                    "type": "object",
                    "description": "Additional pod labels",
                    "default": {}
                },
                "podAnnotations": {
                    "type": "object",
                    "description": "Additional pod annotations",
                    "default": {}
                },
                "annotations": {
                    "type": "object",
                    "description": "Provide any additional annotations which may be required.",
                    "default": {}
                },
                "podSecurityContext": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enabled Jaeger pods' Security Context",
                            "default": true
                        },
                        "fsGroup": {
                            "type": "number",
                            "description": "Set Jaeger pod's Security Context fsGroup",
                            "default": 1001
                        }
                    }
                },
                "extraEnvVars": {
                    "type": "array",
                    "description": "Extra environment variables to be set on jaeger migration container",
                    "default": [],
                    "items": {}
                },
                "extraEnvVarsCM": {
                    "type": "string",
                    "description": "Name of existing ConfigMap containing extra env vars",
                    "default": ""
                },
                "extraEnvVarsSecret": {
                    "type": "string",
                    "description": "Name of existing Secret containing extra env vars",
                    "default": ""
                },
                "extraVolumeMounts": {
                    "type": "array",
                    "description": "Optionally specify extra list of additional volumeMounts for jaeger container",
                    "default": [],
                    "items": {}
                },
                "resources": {
                    "type": "object",
                    "properties": {
                        "limits": {
                            "type": "object",
                            "description": "The resources limits for Jaeger containers",
                            "default": {}
                        },
                        "requests": {
                            "type": "object",
                            "description": "The requested resources for Jaeger containers",
                            "default": {}
                        }
                    }
                },
                "extraVolumes": {
                    "type": "array",
                    "description": "Optionally specify extra list of additional volumes for jaeger container",
                    "default": [],
                    "items": {}
                }
            }
        },
        "cqlshImage": {
            "type": "object",
            "properties": {
                "registry": {
                    "type": "string",
                    "description": "Cassandra image registry",
                    "default": "docker.io"
                },
                "repository": {
                    "type": "string",
                    "description": "Cassandra image repository",
                    "default": "bitnami/cassandra"
                },
                "tag": {
                    "type": "string",
                    "description": "Cassandra image tag (immutable tags are recommended)",
                    "default": "4.0.11-debian-11-r49"
                },
                "digest": {
                    "type": "string",
                    "description": "Cassandra image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag",
                    "default": ""
                },
                "pullPolicy": {
                    "type": "string",
                    "description": "image pull policy",
                    "default": "IfNotPresent"
                },
                "pullSecrets": {
                    "type": "array",
                    "description": "Cassandra image pull secrets",
                    "default": [],
                    "items": {}
                },
                "debug": {
                    "type": "boolean",
                    "description": "Enable image debug mode",
                    "default": false
                }
            }
        },
        "externalDatabase": {
            "type": "object",
            "properties": {
                "host": {
                    "type": "string",
                    "description": "External database host",
                    "default": ""
                },
                "port": {
                    "type": "number",
                    "description": "External database port",
                    "default": 9042
                },
                "dbUser": {
                    "type": "object",
                    "properties": {
                        "user": {
                            "type": "string",
                            "description": "Cassandra admin user",
                            "default": "bn_jaeger"
                        },
                        "password": {
                            "type": "string",
                            "description": "Password for `dbUser.user`. Randomly generated if empty",
                            "default": ""
                        }
                    }
                },
                "existingSecret": {
                    "type": "string",
                    "description": "Name of existing secret containing the database secret",
                    "default": ""
                },
                "existingSecretPasswordKey": {
                    "type": "string",
                    "description": "Name of existing secret key containing the database password secret key",
                    "default": ""
                },
                "cluster": {
                    "type": "object",
                    "properties": {
                        "datacenter": {
                            "type": "string",
                            "description": "Name for cassandra's jaeger datacenter",
                            "default": "dc1"
                        }
                    }
                },
                "keyspace": {
                    "type": "string",
                    "description": "Name for cassandra's jaeger keyspace",
                    "default": "bitnami_jaeger"
                }
            }
        },
        "cassandra": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enables cassandra storage pod",
                    "default": true
                },
                "cluster": {
                    "type": "object",
                    "properties": {
                        "datacenter": {
                            "type": "string",
                            "description": "Name for cassandra's jaeger datacenter",
                            "default": "dc1"
                        }
                    }
                },
                "keyspace": {
                    "type": "string",
                    "description": "Name for cassandra's jaeger keyspace",
                    "default": "bitnami_jaeger"
                },
                "dbUser": {
                    "type": "object",
                    "properties": {
                        "user": {
                            "type": "string",
                            "description": "Cassandra admin user",
                            "default": "bn_jaeger"
                        },
                        "password": {
                            "type": "string",
                            "description": "Password for `dbUser.user`. Randomly generated if empty",
                            "default": ""
                        }
                    }
                },
                "service": {
                    "type": "object",
                    "properties": {
                        "ports": {
                            "type": "object",
                            "properties": {
                                "cql": {
                                    "type": "number",
                                    "description": "Cassandra cql port",
                                    "default": 9042
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}