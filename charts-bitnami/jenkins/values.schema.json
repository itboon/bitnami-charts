{
    "title": "Chart Values",
    "type": "object",
    "properties": {
        "global": {
            "type": "object",
            "properties": {
                "imageRegistry": {
                    "type": "string",
                    "description": "Global Docker image registry",
                    "default": ""
                },
                "imagePullSecrets": {
                    "type": "array",
                    "description": "Global Docker registry secret names as an array",
                    "default": [],
                    "items": {}
                },
                "storageClass": {
                    "type": "string",
                    "description": "Global StorageClass for Persistent Volume(s)",
                    "default": ""
                }
            }
        },
        "kubeVersion": {
            "type": "string",
            "description": "Override Kubernetes version",
            "default": ""
        },
        "nameOverride": {
            "type": "string",
            "description": "String to partially override common.names.fullname",
            "default": ""
        },
        "fullnameOverride": {
            "type": "string",
            "description": "String to fully override common.names.fullname",
            "default": ""
        },
        "commonLabels": {
            "type": "object",
            "description": "Labels to add to all deployed objects",
            "default": {}
        },
        "commonAnnotations": {
            "type": "object",
            "description": "Annotations to add to all deployed objects",
            "default": {}
        },
        "clusterDomain": {
            "type": "string",
            "description": "Kubernetes cluster domain name",
            "default": "cluster.local"
        },
        "extraDeploy": {
            "type": "array",
            "description": "Array of extra objects to deploy with the release",
            "default": [],
            "items": {}
        },
        "diagnosticMode": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable diagnostic mode (all probes will be disabled and the command will be overridden)",
                    "default": false
                },
                "command": {
                    "type": "array",
                    "description": "Command to override all containers in the deployment",
                    "default": [
                        "sleep"
                    ],
                    "items": {
                        "type": "string"
                    }
                },
                "args": {
                    "type": "array",
                    "description": "Args to override all containers in the deployment",
                    "default": [
                        "infinity"
                    ],
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "image": {
            "type": "object",
            "properties": {
                "registry": {
                    "type": "string",
                    "description": "Jenkins image registry",
                    "default": "docker.io"
                },
                "repository": {
                    "type": "string",
                    "description": "Jenkins image repository",
                    "default": "bitnami/jenkins"
                },
                "tag": {
                    "type": "string",
                    "description": "Jenkins image tag (immutable tags are recommended)",
                    "default": "2.401.3-debian-11-r20"
                },
                "digest": {
                    "type": "string",
                    "description": "Jenkins image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag",
                    "default": ""
                },
                "pullPolicy": {
                    "type": "string",
                    "description": "Jenkins image pull policy",
                    "default": "IfNotPresent"
                },
                "pullSecrets": {
                    "type": "array",
                    "description": "Jenkins image pull secrets",
                    "default": [],
                    "items": {}
                },
                "debug": {
                    "type": "boolean",
                    "description": "Enable image debug mode",
                    "default": false
                }
            }
        },
        "jenkinsUser": {
            "type": "string",
            "description": "Jenkins username",
            "default": "user"
        },
        "jenkinsPassword": {
            "type": "string",
            "description": "Jenkins user password",
            "default": ""
        },
        "jenkinsHost": {
            "type": "string",
            "description": "Jenkins host to create application URLs",
            "default": ""
        },
        "jenkinsHome": {
            "type": "string",
            "description": "Jenkins home directory",
            "default": "/bitnami/jenkins/home"
        },
        "javaOpts": {
            "type": "array",
            "description": "Custom JVM parameters",
            "default": [],
            "items": {}
        },
        "disableInitialization": {
            "type": "string",
            "description": "Skip performing the initial bootstrapping for Jenkins",
            "default": "no"
        },
        "command": {
            "type": "array",
            "description": "Override default container command (useful when using custom images)",
            "default": [],
            "items": {}
        },
        "args": {
            "type": "array",
            "description": "Override default container args (useful when using custom images)",
            "default": [],
            "items": {}
        },
        "extraEnvVars": {
            "type": "array",
            "description": "Array with extra environment variables to add to the Jenkins container",
            "default": [],
            "items": {}
        },
        "extraEnvVarsCM": {
            "type": "string",
            "description": "Name of existing ConfigMap containing extra env vars",
            "default": ""
        },
        "extraEnvVarsSecret": {
            "type": "string",
            "description": "Name of existing Secret containing extra env vars",
            "default": ""
        },
        "plugins": {
            "type": "array",
            "description": "List of plugins to be installed during Jenkins first boot.",
            "default": [],
            "items": {}
        },
        "extraPlugins": {
            "type": "array",
            "description": "List of plugins to install in addition to those listed in `plugins`",
            "default": [],
            "items": {}
        },
        "latestPlugins": {
            "type": "boolean",
            "description": "Set to true to download the latest version of all dependencies, even if the version(s) of the requested plugin(s) are not the latest.",
            "default": true
        },
        "latestSpecifiedPlugins": {
            "type": "boolean",
            "description": "Set to true download the latest dependencies of any plugin that is requested to have the latest version.",
            "default": false
        },
        "skipImagePlugins": {
            "type": "boolean",
            "description": "Set this value to true to skip installing plugins stored under /opt/bitnami/jenkins/plugins",
            "default": false
        },
        "overridePlugins": {
            "type": "boolean",
            "description": "Setting this value to true will remove all plugins from the jenkinsHome directory and install new plugins from scratch.",
            "default": false
        },
        "overridePaths": {
            "type": "string",
            "description": "Comma-separated list of relative paths to be removed from Jenkins home volume and/or mounted if present in the mounted content dir",
            "default": ""
        },
        "initScripts": {
            "type": "object",
            "description": "Dictionary of scripts to be mounted at `/docker-entrypoint-initdb.d`. Evaluated as a template. Allows .sh and .groovy formats.",
            "default": {}
        },
        "initScriptsCM": {
            "type": "string",
            "description": "ConfigMap containing the `/docker-entrypoint-initdb.d` scripts. Evaluated as a template.",
            "default": ""
        },
        "initScriptsSecret": {
            "type": "string",
            "description": "Secret containing `/docker-entrypoint-initdb.d` scripts to be executed at initialization time that contain sensitive data. Evaluated as a template.",
            "default": ""
        },
        "initHookScripts": {
            "type": "object",
            "description": "Dictionary of scripts to be mounted at `$JENKINS_HOME/init.groovy.d`. Evaluated as a template. Allows .sh and .groovy formats.",
            "default": {}
        },
        "initHookScriptsCM": {
            "type": "string",
            "description": "ConfigMap containing the `$JENKINS_HOME/init.groovy.d` scripts. Evaluated as a template.",
            "default": ""
        },
        "initHookScriptsSecret": {
            "type": "string",
            "description": "Secret containing `$JENKINS_HOME/init.groovy.d` scripts to be executed at initialization time that contain sensitive data. Evaluated as a template.",
            "default": ""
        },
        "tls": {
            "type": "object",
            "properties": {
                "autoGenerated": {
                    "type": "boolean",
                    "description": "Create self-signed TLS certificates. Currently only supports PEM certificates.",
                    "default": false
                },
                "usePemCerts": {
                    "type": "boolean",
                    "description": "Use this variable if your secrets contain PEM certificates instead of PKCS12",
                    "default": false
                },
                "existingSecret": {
                    "type": "string",
                    "description": "Name of the existing secret containing the 'jenkins.jks' keystore, if usePemCerts is enabled, use keys 'tls.crt' and 'tls.key'.",
                    "default": ""
                },
                "password": {
                    "type": "string",
                    "description": "Password to access the JKS keystore when it is password-protected.",
                    "default": ""
                },
                "passwordsSecret": {
                    "type": "string",
                    "description": "Name of the existing secret containing the JKS keystore password.",
                    "default": ""
                },
                "resources": {
                    "type": "object",
                    "properties": {
                        "limits": {
                            "type": "object",
                            "description": "Init container generate-tls-certs resource limits",
                            "default": {}
                        },
                        "requests": {
                            "type": "object",
                            "description": "Init container generate-tls-certs resource requests",
                            "default": {}
                        }
                    }
                }
            }
        },
        "configAsCode": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable configuration as code.",
                    "default": false
                },
                "extraConfigFiles": {
                    "type": "object",
                    "description": "List of additional configuration-as-code files to be mounted",
                    "default": {}
                },
                "securityRealm": {
                    "type": "object",
                    "description": "Content of the 'securityRealm' block",
                    "default": {}
                },
                "authorizationStrategy": {
                    "type": "object",
                    "description": "Content of the 'authorizationStrategy' block",
                    "default": {}
                },
                "security": {
                    "type": "object",
                    "description": "Content of the 'security' block",
                    "default": {}
                },
                "extraJenkins": {
                    "type": "object",
                    "description": "Append additional settings under the 'jenkins' block",
                    "default": {}
                },
                "extraConfig": {
                    "type": "object",
                    "description": "Append additional settings at the root of the configuration-as-code file",
                    "default": {}
                },
                "extraKubernetes": {
                    "type": "object",
                    "description": "Append additional settings under the Kubernetes cloud block",
                    "default": {}
                },
                "extraClouds": {
                    "type": "array",
                    "description": "Additional clouds",
                    "default": [],
                    "items": {}
                },
                "existingConfigmap": {
                    "type": "string",
                    "description": "Name of an existing configmap containing the config-as-code files.",
                    "default": ""
                },
                "autoReload": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable the creation of the autoReload sidecar container.",
                            "default": true
                        },
                        "initialDelay": {
                            "type": "number",
                            "description": "In seconds, time",
                            "default": 360
                        },
                        "reqRetries": {
                            "type": "number",
                            "description": "",
                            "default": 12
                        },
                        "interval": {
                            "type": "number",
                            "description": "",
                            "default": 10
                        },
                        "command": {
                            "type": "array",
                            "description": "",
                            "default": [],
                            "items": {}
                        },
                        "args": {
                            "type": "array",
                            "description": "",
                            "default": [],
                            "items": {}
                        },
                        "extraEnvVars": {
                            "type": "array",
                            "description": "",
                            "default": [],
                            "items": {}
                        },
                        "extraEnvVarsSecret": {
                            "type": "string",
                            "description": "",
                            "default": ""
                        },
                        "extraEnvVarsCM": {
                            "type": "string",
                            "description": "",
                            "default": ""
                        },
                        "extraVolumeMounts": {
                            "type": "array",
                            "description": "",
                            "default": [],
                            "items": {}
                        },
                        "containerSecurityContext": {
                            "type": "object",
                            "properties": {
                                "enabled": {
                                    "type": "boolean",
                                    "description": "Enabled %%MAIN_CONTAINER_NAME%% containers' Security Context",
                                    "default": true
                                },
                                "runAsUser": {
                                    "type": "number",
                                    "description": "Set %%MAIN_CONTAINER_NAME%% containers' Security Context runAsUser",
                                    "default": 1001
                                },
                                "runAsNonRoot": {
                                    "type": "boolean",
                                    "description": "Set %%MAIN_CONTAINER_NAME%% containers' Security Context runAsNonRoot",
                                    "default": true
                                },
                                "readOnlyRootFilesystem": {
                                    "type": "boolean",
                                    "description": "Set %%MAIN_CONTAINER_NAME%% containers' Security Context runAsNonRoot",
                                    "default": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "agent": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Set to true to enable the configuration of Jenkins kubernetes agents",
                    "default": false
                },
                "image": {
                    "type": "object",
                    "properties": {
                        "registry": {
                            "type": "string",
                            "description": "Jenkins image registry",
                            "default": "docker.io"
                        },
                        "repository": {
                            "type": "string",
                            "description": "Jenkins image repository",
                            "default": "bitnami/jenkins-agent"
                        },
                        "tag": {
                            "type": "string",
                            "description": "Jenkins image tag (immutable tags are recommended)",
                            "default": "0.3142.0-debian-11-r23"
                        },
                        "digest": {
                            "type": "string",
                            "description": "Jenkins image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag",
                            "default": ""
                        },
                        "pullPolicy": {
                            "type": "string",
                            "description": "Jenkins image pull policy",
                            "default": "IfNotPresent"
                        },
                        "pullSecrets": {
                            "type": "array",
                            "description": "Jenkins image pull secrets",
                            "default": [],
                            "items": {}
                        },
                        "debug": {
                            "type": "boolean",
                            "description": "Enable image debug mode",
                            "default": false
                        }
                    }
                },
                "templateLabel": {
                    "type": "string",
                    "description": "Label for the Kubernetes agent template",
                    "default": "kubernetes-agent"
                },
                "podLabels": {
                    "type": "object",
                    "description": "Additional pod labels for the Jenkins agent pods",
                    "default": {}
                },
                "annotations": {
                    "type": "object",
                    "description": "Additional pod annotations for the Jenkins agent pods",
                    "default": {}
                },
                "sidecars": {
                    "type": "array",
                    "description": "Additional sidecar containers for the Jenkins agent pods",
                    "default": [],
                    "items": {}
                },
                "command": {
                    "type": "string",
                    "description": "Override default container command (useful when using custom images)",
                    "default": ""
                },
                "args": {
                    "type": "string",
                    "description": "Override default container args (useful when using custom images)",
                    "default": ""
                },
                "containerExtraEnvVars": {
                    "type": "array",
                    "description": "Additional env vars for the Jenkins agent pods",
                    "default": [],
                    "items": {}
                },
                "podExtraEnvVars": {
                    "type": "array",
                    "description": "Additional env vars for the Jenkins agent pods",
                    "default": [],
                    "items": {}
                },
                "extraAgentTemplate": {
                    "type": "object",
                    "description": "Extend the default agent template",
                    "default": {}
                },
                "extraTemplates": {
                    "type": "array",
                    "description": "Provide your own custom agent templates",
                    "default": [],
                    "items": {}
                },
                "resources": {
                    "type": "object",
                    "properties": {
                        "limits": {
                            "type": "object",
                            "description": "The resources limits for the Jenkins container",
                            "default": {}
                        },
                        "requests": {
                            "type": "object",
                            "properties": {
                                "memory": {
                                    "type": "string",
                                    "description": "",
                                    "default": "512Mi"
                                },
                                "cpu": {
                                    "type": "string",
                                    "description": "",
                                    "default": "300m"
                                }
                            }
                        }
                    }
                },
                "containerSecurityContext": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable container security context",
                            "default": false
                        },
                        "runAsUser": {
                            "type": "string",
                            "description": "User ID for the agent container",
                            "default": ""
                        },
                        "runAsGroup": {
                            "type": "string",
                            "description": "User ID for the agent container",
                            "default": ""
                        },
                        "privileged": {
                            "type": "boolean",
                            "description": "Decide if the container runs privileged.",
                            "default": false
                        }
                    }
                }
            }
        },
        "updateStrategy": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string",
                    "description": "Jenkins deployment strategy type",
                    "default": "RollingUpdate"
                }
            }
        },
        "priorityClassName": {
            "type": "string",
            "description": "Jenkins pod priority class name",
            "default": ""
        },
        "schedulerName": {
            "type": "string",
            "description": "Name of the k8s scheduler (other than default)",
            "default": ""
        },
        "topologySpreadConstraints": {
            "type": "array",
            "description": "Topology Spread Constraints for pod assignment",
            "default": [],
            "items": {}
        },
        "hostAliases": {
            "type": "array",
            "description": "Jenkins pod host aliases",
            "default": [],
            "items": {}
        },
        "extraVolumes": {
            "type": "array",
            "description": "Optionally specify extra list of additional volumes for Jenkins pods",
            "default": [],
            "items": {}
        },
        "extraVolumeMounts": {
            "type": "array",
            "description": "Optionally specify extra list of additional volumeMounts for Jenkins container(s)",
            "default": [],
            "items": {}
        },
        "sidecars": {
            "type": "array",
            "description": "Add additional sidecar containers to the Jenkins pod",
            "default": [],
            "items": {}
        },
        "initContainers": {
            "type": "array",
            "description": "Add additional init containers to the Jenkins pods",
            "default": [],
            "items": {}
        },
        "lifecycleHooks": {
            "type": "object",
            "description": "Add lifecycle hooks to the Jenkins deployment",
            "default": {}
        },
        "podLabels": {
            "type": "object",
            "description": "Extra labels for Jenkins pods",
            "default": {}
        },
        "podAnnotations": {
            "type": "object",
            "description": "Annotations for Jenkins pods",
            "default": {}
        },
        "podAffinityPreset": {
            "type": "string",
            "description": "Pod affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`",
            "default": ""
        },
        "podAntiAffinityPreset": {
            "type": "string",
            "description": "Pod anti-affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`",
            "default": "soft"
        },
        "nodeAffinityPreset": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string",
                    "description": "Node affinity preset type. Ignored if `affinity` is set. Allowed values: `soft` or `hard`",
                    "default": ""
                },
                "key": {
                    "type": "string",
                    "description": "Node label key to match. Ignored if `affinity` is set",
                    "default": ""
                },
                "values": {
                    "type": "array",
                    "description": "Node label values to match. Ignored if `affinity` is set",
                    "default": [],
                    "items": {}
                }
            }
        },
        "affinity": {
            "type": "object",
            "description": "Affinity for pod assignment",
            "default": {}
        },
        "nodeSelector": {
            "type": "object",
            "description": "Node labels for pod assignment",
            "default": {}
        },
        "tolerations": {
            "type": "array",
            "description": "Tolerations for pod assignment",
            "default": [],
            "items": {}
        },
        "resources": {
            "type": "object",
            "properties": {
                "limits": {
                    "type": "object",
                    "description": "The resources limits for the Jenkins container",
                    "default": {}
                },
                "requests": {
                    "type": "object",
                    "properties": {
                        "memory": {
                            "type": "string",
                            "description": "",
                            "default": "512Mi"
                        },
                        "cpu": {
                            "type": "string",
                            "description": "",
                            "default": "300m"
                        }
                    }
                }
            }
        },
        "containerPorts": {
            "type": "object",
            "properties": {
                "http": {
                    "type": "number",
                    "description": "Jenkins HTTP container port",
                    "default": 8080
                },
                "https": {
                    "type": "number",
                    "description": "Jenkins HTTPS container port",
                    "default": 8443
                },
                "agentListener": {
                    "type": "number",
                    "description": "Jenkins agent listener port, ignored if agent.enabled=false",
                    "default": 50000
                }
            }
        },
        "podSecurityContext": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enabled Jenkins pods' Security Context",
                    "default": true
                },
                "fsGroup": {
                    "type": "number",
                    "description": "Set Jenkins pod's Security Context fsGroup",
                    "default": 1001
                }
            }
        },
        "containerSecurityContext": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enabled Jenkins containers' Security Context",
                    "default": true
                },
                "runAsUser": {
                    "type": "number",
                    "description": "Set Jenkins container's Security Context runAsUser",
                    "default": 1001
                },
                "runAsNonRoot": {
                    "type": "boolean",
                    "description": "Set Jenkins container's Security Context runAsNonRoot",
                    "default": true
                }
            }
        },
        "startupProbe": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable startupProbe",
                    "default": false
                },
                "initialDelaySeconds": {
                    "type": "number",
                    "description": "Initial delay seconds for startupProbe",
                    "default": 180
                },
                "periodSeconds": {
                    "type": "number",
                    "description": "Period seconds for startupProbe",
                    "default": 10
                },
                "timeoutSeconds": {
                    "type": "number",
                    "description": "Timeout seconds for startupProbe",
                    "default": 5
                },
                "failureThreshold": {
                    "type": "number",
                    "description": "Failure threshold for startupProbe",
                    "default": 6
                },
                "successThreshold": {
                    "type": "number",
                    "description": "Success threshold for startupProbe",
                    "default": 1
                }
            }
        },
        "livenessProbe": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable livenessProbe",
                    "default": true
                },
                "initialDelaySeconds": {
                    "type": "number",
                    "description": "Initial delay seconds for livenessProbe",
                    "default": 180
                },
                "periodSeconds": {
                    "type": "number",
                    "description": "Period seconds for livenessProbe",
                    "default": 10
                },
                "timeoutSeconds": {
                    "type": "number",
                    "description": "Timeout seconds for livenessProbe",
                    "default": 5
                },
                "failureThreshold": {
                    "type": "number",
                    "description": "Failure threshold for livenessProbe",
                    "default": 6
                },
                "successThreshold": {
                    "type": "number",
                    "description": "Success threshold for livenessProbe",
                    "default": 1
                }
            }
        },
        "readinessProbe": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable readinessProbe",
                    "default": true
                },
                "initialDelaySeconds": {
                    "type": "number",
                    "description": "Initial delay seconds for readinessProbe",
                    "default": 30
                },
                "periodSeconds": {
                    "type": "number",
                    "description": "Period seconds for readinessProbe",
                    "default": 5
                },
                "timeoutSeconds": {
                    "type": "number",
                    "description": "Timeout seconds for readinessProbe",
                    "default": 3
                },
                "failureThreshold": {
                    "type": "number",
                    "description": "Failure threshold for readinessProbe",
                    "default": 3
                },
                "successThreshold": {
                    "type": "number",
                    "description": "Success threshold for readinessProbe",
                    "default": 1
                }
            }
        },
        "customStartupProbe": {
            "type": "object",
            "description": "Custom startupProbe that overrides the default one",
            "default": {}
        },
        "customLivenessProbe": {
            "type": "object",
            "description": "Custom livenessProbe that overrides the default one",
            "default": {}
        },
        "customReadinessProbe": {
            "type": "object",
            "description": "Custom readinessProbe that overrides the default one",
            "default": {}
        },
        "service": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string",
                    "description": "Jenkins service type",
                    "default": "LoadBalancer"
                },
                "ports": {
                    "type": "object",
                    "properties": {
                        "http": {
                            "type": "number",
                            "description": "Jenkins service HTTP port",
                            "default": 80
                        },
                        "https": {
                            "type": "number",
                            "description": "Jenkins service HTTPS port",
                            "default": 443
                        }
                    }
                },
                "nodePorts": {
                    "type": "object",
                    "properties": {
                        "http": {
                            "type": "string",
                            "description": "Node port for HTTP",
                            "default": ""
                        },
                        "https": {
                            "type": "string",
                            "description": "Node port for HTTPS",
                            "default": ""
                        }
                    }
                },
                "clusterIP": {
                    "type": "string",
                    "description": "Jenkins service Cluster IP",
                    "default": ""
                },
                "loadBalancerIP": {
                    "type": "string",
                    "description": "Jenkins service Load Balancer IP",
                    "default": ""
                },
                "loadBalancerSourceRanges": {
                    "type": "array",
                    "description": "Jenkins service Load Balancer sources",
                    "default": [],
                    "items": {}
                },
                "externalTrafficPolicy": {
                    "type": "string",
                    "description": "Jenkins service external traffic policy",
                    "default": "Cluster"
                },
                "annotations": {
                    "type": "object",
                    "description": "Additional custom annotations for Jenkins service",
                    "default": {}
                },
                "extraPorts": {
                    "type": "array",
                    "description": "Extra ports to expose (normally used with the `sidecar` value)",
                    "default": [],
                    "items": {}
                },
                "sessionAffinity": {
                    "type": "string",
                    "description": "Session Affinity for Kubernetes service, can be \"None\" or \"ClientIP\"",
                    "default": "None"
                },
                "sessionAffinityConfig": {
                    "type": "object",
                    "description": "Additional settings for the sessionAffinity",
                    "default": {}
                }
            }
        },
        "agentListenerService": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "",
                    "default": true
                },
                "type": {
                    "type": "string",
                    "description": "Jenkins service type",
                    "default": "ClusterIP"
                },
                "ports": {
                    "type": "object",
                    "properties": {
                        "agentListener": {
                            "type": "number",
                            "description": "Jenkins service agent listener port",
                            "default": 50000
                        }
                    }
                },
                "nodePorts": {
                    "type": "object",
                    "properties": {
                        "agentListener": {
                            "type": "string",
                            "description": "Node port for agent listener",
                            "default": ""
                        }
                    }
                },
                "clusterIP": {
                    "type": "string",
                    "description": "Jenkins service Cluster IP",
                    "default": ""
                },
                "loadBalancerIP": {
                    "type": "string",
                    "description": "Jenkins service Load Balancer IP",
                    "default": ""
                },
                "loadBalancerSourceRanges": {
                    "type": "array",
                    "description": "Jenkins service Load Balancer sources",
                    "default": [],
                    "items": {}
                },
                "externalTrafficPolicy": {
                    "type": "string",
                    "description": "Jenkins service external traffic policy",
                    "default": "Cluster"
                },
                "annotations": {
                    "type": "object",
                    "description": "Additional custom annotations for Jenkins service",
                    "default": {}
                },
                "extraPorts": {
                    "type": "array",
                    "description": "Extra ports to expose (normally used with the `sidecar` value)",
                    "default": [],
                    "items": {}
                },
                "sessionAffinity": {
                    "type": "string",
                    "description": "Session Affinity for Kubernetes service, can be \"None\" or \"ClientIP\"",
                    "default": "None"
                },
                "sessionAffinityConfig": {
                    "type": "object",
                    "description": "Additional settings for the sessionAffinity",
                    "default": {}
                }
            }
        },
        "ingress": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable ingress record generation for Jenkins",
                    "default": false
                },
                "pathType": {
                    "type": "string",
                    "description": "Ingress path type",
                    "default": "ImplementationSpecific"
                },
                "apiVersion": {
                    "type": "string",
                    "description": "Force Ingress API version (automatically detected if not set)",
                    "default": ""
                },
                "hostname": {
                    "type": "string",
                    "description": "Default host for the ingress record",
                    "default": "jenkins.local"
                },
                "path": {
                    "type": "string",
                    "description": "Default path for the ingress record",
                    "default": "/"
                },
                "annotations": {
                    "type": "object",
                    "description": "Additional annotations for the Ingress resource. To enable certificate autogeneration, place here your cert-manager annotations.",
                    "default": {}
                },
                "tls": {
                    "type": "boolean",
                    "description": "Enable TLS configuration for the host defined at `ingress.hostname` parameter",
                    "default": false
                },
                "selfSigned": {
                    "type": "boolean",
                    "description": "Create a TLS secret for this ingress record using self-signed certificates generated by Helm",
                    "default": false
                },
                "extraHosts": {
                    "type": "array",
                    "description": "An array with additional hostname(s) to be covered with the ingress record",
                    "default": [],
                    "items": {}
                },
                "extraPaths": {
                    "type": "array",
                    "description": "An array with additional arbitrary paths that may need to be added to the ingress under the main host",
                    "default": [],
                    "items": {}
                },
                "extraTls": {
                    "type": "array",
                    "description": "TLS configuration for additional hostname(s) to be covered with this ingress record",
                    "default": [],
                    "items": {}
                },
                "secrets": {
                    "type": "array",
                    "description": "Custom TLS certificates as secrets",
                    "default": [],
                    "items": {}
                },
                "ingressClassName": {
                    "type": "string",
                    "description": "IngressClass that will be be used to implement the Ingress (Kubernetes 1.18+)",
                    "default": ""
                },
                "extraRules": {
                    "type": "array",
                    "description": "Additional rules to be covered with this ingress record",
                    "default": [],
                    "items": {}
                }
            }
        },
        "persistence": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable persistence using Persistent Volume Claims",
                    "default": true
                },
                "storageClass": {
                    "type": "string",
                    "description": "Persistent Volume storage class",
                    "default": ""
                },
                "existingClaim": {
                    "type": "string",
                    "description": "Use a existing PVC which must be created manually before bound",
                    "default": ""
                },
                "annotations": {
                    "type": "object",
                    "description": "Additional custom annotations for the PVC",
                    "default": {}
                },
                "accessModes": {
                    "type": "array",
                    "description": "Persistent Volume access modes",
                    "default": [
                        "ReadWriteOnce"
                    ],
                    "items": {
                        "type": "string"
                    }
                },
                "size": {
                    "type": "string",
                    "description": "Persistent Volume size",
                    "default": "8Gi"
                },
                "selector": {
                    "type": "object",
                    "description": "Selector to match an existing Persistent Volume for Ingester's data PVC",
                    "default": {}
                }
            }
        },
        "volumePermissions": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable init container that changes the owner/group of the PV mount point to `runAsUser:fsGroup`",
                    "default": false
                },
                "image": {
                    "type": "object",
                    "properties": {
                        "registry": {
                            "type": "string",
                            "description": "OS Shell + Utility image registry",
                            "default": "docker.io"
                        },
                        "repository": {
                            "type": "string",
                            "description": "OS Shell + Utility image repository",
                            "default": "bitnami/os-shell"
                        },
                        "tag": {
                            "type": "string",
                            "description": "OS Shell + Utility image tag (immutable tags are recommended)",
                            "default": "11-debian-11-r43"
                        },
                        "digest": {
                            "type": "string",
                            "description": "OS Shell + Utility image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag",
                            "default": ""
                        },
                        "pullPolicy": {
                            "type": "string",
                            "description": "OS Shell + Utility image pull policy",
                            "default": "IfNotPresent"
                        },
                        "pullSecrets": {
                            "type": "array",
                            "description": "OS Shell + Utility image pull secrets",
                            "default": [],
                            "items": {}
                        }
                    }
                },
                "resources": {
                    "type": "object",
                    "properties": {
                        "limits": {
                            "type": "object",
                            "description": "The resources limits for the init container",
                            "default": {}
                        },
                        "requests": {
                            "type": "object",
                            "description": "The requested resources for the init container",
                            "default": {}
                        }
                    }
                },
                "securityContext": {
                    "type": "object",
                    "properties": {
                        "runAsUser": {
                            "type": "number",
                            "description": "Set init container's Security Context runAsUser",
                            "default": 0
                        }
                    }
                }
            }
        },
        "rbac": {
            "type": "object",
            "properties": {
                "create": {
                    "type": "boolean",
                    "description": "Specifies whether RBAC resources should be created",
                    "default": true
                },
                "rules": {
                    "type": "array",
                    "description": "Custom RBAC rules to set",
                    "default": [],
                    "items": {}
                }
            }
        },
        "serviceAccount": {
            "type": "object",
            "properties": {
                "create": {
                    "type": "boolean",
                    "description": "Specifies whether a ServiceAccount should be created",
                    "default": true
                },
                "name": {
                    "type": "string",
                    "description": "The name of the ServiceAccount to use.",
                    "default": ""
                },
                "annotations": {
                    "type": "object",
                    "description": "Additional Service Account annotations (evaluated as a template)",
                    "default": {}
                },
                "automountServiceAccountToken": {
                    "type": "boolean",
                    "description": "Automount service account token for the server service account",
                    "default": true
                }
            }
        }
    }
}