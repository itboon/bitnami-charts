{
    "title": "Chart Values",
    "type": "object",
    "properties": {
        "global": {
            "type": "object",
            "properties": {
                "imageRegistry": {
                    "type": "string",
                    "description": "Global Docker image registry",
                    "default": ""
                },
                "imagePullSecrets": {
                    "type": "array",
                    "description": "Global Docker registry secret names as an array",
                    "default": [],
                    "items": {}
                },
                "storageClass": {
                    "type": "string",
                    "description": "Global StorageClass for Persistent Volume(s)",
                    "default": ""
                }
            }
        },
        "kubeVersion": {
            "type": "string",
            "description": "Force target Kubernetes version (using Helm capabilities if not set)",
            "default": ""
        },
        "nameOverride": {
            "type": "string",
            "description": "Release name override",
            "default": ""
        },
        "fullnameOverride": {
            "type": "string",
            "description": "Release full name override",
            "default": ""
        },
        "commonLabels": {
            "type": "object",
            "description": "Labels to add to all deployed objects",
            "default": {}
        },
        "commonAnnotations": {
            "type": "object",
            "description": "Annotations to add to all deployed objects",
            "default": {}
        },
        "extraDeploy": {
            "type": "array",
            "description": "Array of extra objects to deploy with the release",
            "default": [],
            "items": {}
        },
        "diagnosticMode": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable diagnostic mode (all probes will be disabled and the command will be overridden)",
                    "default": false
                },
                "command": {
                    "type": "array",
                    "description": "Command to override all containers in the the deployment(s)/statefulset(s)",
                    "default": [
                        "sleep"
                    ],
                    "items": {
                        "type": "string"
                    }
                },
                "args": {
                    "type": "array",
                    "description": "Args to override all containers in the the deployment(s)/statefulset(s)",
                    "default": [
                        "infinity"
                    ],
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "image": {
            "type": "object",
            "properties": {
                "registry": {
                    "type": "string",
                    "description": "kiam image registry",
                    "default": "docker.io"
                },
                "repository": {
                    "type": "string",
                    "description": "kiam image name",
                    "default": "bitnami/kiam"
                },
                "tag": {
                    "type": "string",
                    "description": "kiam image tag",
                    "default": "4.2.0-debian-11-r377"
                },
                "digest": {
                    "type": "string",
                    "description": "kiam image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag",
                    "default": ""
                },
                "pullPolicy": {
                    "type": "string",
                    "description": "kiam image pull policy",
                    "default": "IfNotPresent"
                },
                "pullSecrets": {
                    "type": "array",
                    "description": "Specify docker-registry secret names as an array",
                    "default": [],
                    "items": {}
                }
            }
        },
        "server": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Deploy the kiam server",
                    "default": true
                },
                "containerPort": {
                    "type": "number",
                    "description": "HTTPS port to expose at container level",
                    "default": 8443
                },
                "resourceType": {
                    "type": "string",
                    "description": "Specify how to deploy the server (allowed values: `daemonset` and `deployment`)",
                    "default": "daemonset"
                },
                "hostAliases": {
                    "type": "array",
                    "description": "Add deployment host aliases",
                    "default": [],
                    "items": {}
                },
                "useHostNetwork": {
                    "type": "boolean",
                    "description": "Use host networking (ports will be directly exposed in the host)",
                    "default": false
                },
                "replicaCount": {
                    "type": "number",
                    "description": "Number of replicas to deploy (when `server.resourceType` is `daemonset`)",
                    "default": 1
                },
                "logJsonOutput": {
                    "type": "boolean",
                    "description": "Use JSON format for logs",
                    "default": true
                },
                "logLevel": {
                    "type": "string",
                    "description": "Logging level",
                    "default": "info"
                },
                "sslCertHostPath": {
                    "type": "string",
                    "description": "Path to the host system SSL certificates (necessary for contacting the AWS metadata server)",
                    "default": "/etc/ssl/certs"
                },
                "podSecurityPolicy": {
                    "type": "object",
                    "properties": {
                        "create": {
                            "type": "boolean",
                            "description": "Whether to create a PodSecurityPolicy. WARNING: PodSecurityPolicy is deprecated in Kubernetes v1.21 or later, unavailable in v1.25 or later",
                            "default": true
                        },
                        "allowedHostPaths": {
                            "type": "array",
                            "description": "Extra host paths to allow in the PodSecurityPolicy",
                            "default": [],
                            "items": {}
                        }
                    }
                },
                "priorityClassName": {
                    "type": "string",
                    "description": "Server priorityClassName",
                    "default": ""
                },
                "schedulerName": {
                    "type": "string",
                    "description": "Name of the k8s scheduler (other than default)",
                    "default": ""
                },
                "topologySpreadConstraints": {
                    "type": "array",
                    "description": "Topology Spread Constraints for pod assignment",
                    "default": [],
                    "items": {}
                },
                "startupProbe": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable startupProbe",
                            "default": false
                        },
                        "initialDelaySeconds": {
                            "type": "number",
                            "description": "Initial delay seconds for startupProbe",
                            "default": 5
                        },
                        "periodSeconds": {
                            "type": "number",
                            "description": "Period seconds for startupProbe",
                            "default": 30
                        },
                        "timeoutSeconds": {
                            "type": "number",
                            "description": "Timeout seconds for startupProbe",
                            "default": 5
                        },
                        "failureThreshold": {
                            "type": "number",
                            "description": "Failure threshold for startupProbe",
                            "default": 5
                        },
                        "successThreshold": {
                            "type": "number",
                            "description": "Success threshold for startupProbe",
                            "default": 1
                        }
                    }
                },
                "livenessProbe": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable livenessProbe",
                            "default": true
                        },
                        "initialDelaySeconds": {
                            "type": "number",
                            "description": "Initial delay seconds for livenessProbe",
                            "default": 5
                        },
                        "periodSeconds": {
                            "type": "number",
                            "description": "Period seconds for livenessProbe",
                            "default": 30
                        },
                        "timeoutSeconds": {
                            "type": "number",
                            "description": "Timeout seconds for livenessProbe",
                            "default": 5
                        },
                        "failureThreshold": {
                            "type": "number",
                            "description": "Failure threshold for livenessProbe",
                            "default": 5
                        },
                        "successThreshold": {
                            "type": "number",
                            "description": "Success threshold for livenessProbe",
                            "default": 1
                        }
                    }
                },
                "readinessProbe": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable readinessProbe",
                            "default": true
                        },
                        "initialDelaySeconds": {
                            "type": "number",
                            "description": "Initial delay seconds for readinessProbe",
                            "default": 5
                        },
                        "periodSeconds": {
                            "type": "number",
                            "description": "Period seconds for readinessProbe",
                            "default": 30
                        },
                        "timeoutSeconds": {
                            "type": "number",
                            "description": "Timeout seconds for readinessProbe",
                            "default": 5
                        },
                        "failureThreshold": {
                            "type": "number",
                            "description": "Failure threshold for readinessProbe",
                            "default": 5
                        },
                        "successThreshold": {
                            "type": "number",
                            "description": "Success threshold for readinessProbe",
                            "default": 1
                        }
                    }
                },
                "customStartupProbe": {
                    "type": "object",
                    "description": "Override default startup probe",
                    "default": {}
                },
                "customLivenessProbe": {
                    "type": "object",
                    "description": "Override default liveness probe",
                    "default": {}
                },
                "customReadinessProbe": {
                    "type": "object",
                    "description": "Override default readiness probe",
                    "default": {}
                },
                "extraArgs": {
                    "type": "object",
                    "description": "Extra arguments to add to the default kiam command",
                    "default": {}
                },
                "command": {
                    "type": "array",
                    "description": "Override kiam default command",
                    "default": [],
                    "items": {}
                },
                "args": {
                    "type": "array",
                    "description": "Override kiam default args",
                    "default": [],
                    "items": {}
                },
                "tlsFiles": {
                    "type": "object",
                    "properties": {
                        "ca": {
                            "type": "string",
                            "description": "",
                            "default": ""
                        },
                        "cert": {
                            "type": "string",
                            "description": "",
                            "default": ""
                        },
                        "key": {
                            "type": "string",
                            "description": "",
                            "default": ""
                        }
                    }
                },
                "gatewayTimeoutCreation": {
                    "type": "string",
                    "description": "Timeout when creating the kiam gateway",
                    "default": "1s"
                },
                "tlsSecret": {
                    "type": "string",
                    "description": "Name of a secret with TLS certificates for the container",
                    "default": ""
                },
                "dnsPolicy": {
                    "type": "string",
                    "description": "Pod DNS policy",
                    "default": "Default"
                },
                "roleBaseArn": {
                    "type": "string",
                    "description": "Base ARN for IAM roles. If not set kiam will detect it automatically",
                    "default": ""
                },
                "cacheSyncInterval": {
                    "type": "string",
                    "description": "Cache synchronization interval",
                    "default": "1m"
                },
                "assumeRoleArn": {
                    "type": "string",
                    "description": "IAM role for the server to assume",
                    "default": ""
                },
                "sessionDuration": {
                    "type": "string",
                    "description": "Session duration for STS tokens",
                    "default": "15m"
                },
                "tlsCerts": {
                    "type": "object",
                    "properties": {
                        "certFileName": {
                            "type": "string",
                            "description": "",
                            "default": "cert.pem"
                        },
                        "keyFileName": {
                            "type": "string",
                            "description": "",
                            "default": "key.pem"
                        },
                        "caFileName": {
                            "type": "string",
                            "description": "",
                            "default": "ca.pem"
                        }
                    }
                },
                "resources": {
                    "type": "object",
                    "properties": {
                        "limits": {
                            "type": "object",
                            "description": "The resources limits for the kiam container",
                            "default": {}
                        },
                        "requests": {
                            "type": "object",
                            "description": "The requested resources for the kiam container",
                            "default": {}
                        }
                    }
                },
                "containerSecurityContext": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enabled kiam server containers' Security Context",
                            "default": true
                        },
                        "runAsUser": {
                            "type": "number",
                            "description": "Set kiam server container's Security Context runAsUser",
                            "default": 1001
                        },
                        "runAsNonRoot": {
                            "type": "boolean",
                            "description": "Set kiam server container's Security Context runAsNonRoot",
                            "default": true
                        },
                        "seLinuxOptions": {
                            "type": "object",
                            "description": "Set kiam server container's Security Context SE Linux options",
                            "default": {}
                        }
                    }
                },
                "podSecurityContext": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enabled kiam server pods' Security Context",
                            "default": true
                        },
                        "fsGroup": {
                            "type": "number",
                            "description": "Set kiam server pod's Security Context fsGroup",
                            "default": 1001
                        }
                    }
                },
                "podAffinityPreset": {
                    "type": "string",
                    "description": "Pod affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`",
                    "default": ""
                },
                "podAntiAffinityPreset": {
                    "type": "string",
                    "description": "Pod anti-affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`",
                    "default": "soft"
                },
                "nodeAffinityPreset": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "Node affinity preset type. Ignored if `affinity` is set. Allowed values: `soft` or `hard`",
                            "default": ""
                        },
                        "key": {
                            "type": "string",
                            "description": "Node label key to match. Ignored if `affinity` is set.",
                            "default": ""
                        },
                        "values": {
                            "type": "array",
                            "description": "Node label values to match. Ignored if `affinity` is set.",
                            "default": [],
                            "items": {}
                        }
                    }
                },
                "affinity": {
                    "type": "object",
                    "description": "Affinity for pod assignment",
                    "default": {}
                },
                "nodeSelector": {
                    "type": "object",
                    "description": "Node labels for pod assignment",
                    "default": {}
                },
                "tolerations": {
                    "type": "array",
                    "description": "Tolerations for pod assignment",
                    "default": [],
                    "items": {}
                },
                "podLabels": {
                    "type": "object",
                    "description": "Extra labels for kiam pods",
                    "default": {}
                },
                "podAnnotations": {
                    "type": "object",
                    "description": "Annotations for kiam pods",
                    "default": {}
                },
                "lifecycleHooks": {
                    "type": "object",
                    "description": "lifecycleHooks for the kiam server container to automate configuration before or after startup.",
                    "default": {}
                },
                "updateStrategy": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "Update strategy - only really applicable for deployments with RWO PVs attached",
                            "default": "RollingUpdate"
                        }
                    }
                },
                "extraEnvVars": {
                    "type": "array",
                    "description": "Array containing extra env vars to configure kiam server",
                    "default": [],
                    "items": {}
                },
                "extraEnvVarsCM": {
                    "type": "string",
                    "description": "ConfigMap containing extra env vars to configure kiam server",
                    "default": ""
                },
                "extraEnvVarsSecret": {
                    "type": "string",
                    "description": "Secret containing extra env vars to configure kiam server (in case of sensitive data)",
                    "default": ""
                },
                "extraVolumes": {
                    "type": "array",
                    "description": "Optionally specify extra list of additional volumes for kiam pods",
                    "default": [],
                    "items": {}
                },
                "extraVolumeMounts": {
                    "type": "array",
                    "description": "Optionally specify extra list of additional volumeMounts for kiam container(s)",
                    "default": [],
                    "items": {}
                },
                "initContainers": {
                    "type": "array",
                    "description": "Add additional init containers to the kiam pods",
                    "default": [],
                    "items": {}
                },
                "sidecars": {
                    "type": "array",
                    "description": "Add additional sidecar containers to the kiam pods",
                    "default": [],
                    "items": {}
                },
                "service": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "Kubernetes service type",
                            "default": "ClusterIP"
                        },
                        "nodePorts": {
                            "type": "object",
                            "properties": {
                                "http": {
                                    "type": "string",
                                    "description": "",
                                    "default": ""
                                },
                                "metrics": {
                                    "type": "string",
                                    "description": "",
                                    "default": ""
                                }
                            }
                        },
                        "port": {
                            "type": "number",
                            "description": "Service grpc-lb port",
                            "default": 8443
                        },
                        "clusterIP": {
                            "type": "string",
                            "description": "kiam service clusterIP IP",
                            "default": "None"
                        },
                        "loadBalancerIP": {
                            "type": "string",
                            "description": "loadBalancerIP if service type is `LoadBalancer`",
                            "default": ""
                        },
                        "loadBalancerSourceRanges": {
                            "type": "array",
                            "description": "Address that are allowed when service is LoadBalancer",
                            "default": [],
                            "items": {}
                        },
                        "extraPorts": {
                            "type": "array",
                            "description": "Extra ports to expose (normally used with the `sidecar` value)",
                            "default": [],
                            "items": {}
                        },
                        "externalTrafficPolicy": {
                            "type": "string",
                            "description": "Enable client source IP preservation",
                            "default": "Cluster"
                        },
                        "annotations": {
                            "type": "object",
                            "description": "Annotations for kiam service",
                            "default": {}
                        },
                        "sessionAffinity": {
                            "type": "string",
                            "description": "Session Affinity for Kubernetes service, can be \"None\" or \"ClientIP\"",
                            "default": "None"
                        },
                        "sessionAffinityConfig": {
                            "type": "object",
                            "description": "Additional settings for the sessionAffinity",
                            "default": {}
                        }
                    }
                },
                "serviceAccount": {
                    "type": "object",
                    "properties": {
                        "create": {
                            "type": "boolean",
                            "description": "Specifies whether a ServiceAccount should be created",
                            "default": true
                        },
                        "name": {
                            "type": "string",
                            "description": "Name of the service account to use. If not set and create is true, a name is generated using the fullname template.",
                            "default": ""
                        },
                        "automountServiceAccountToken": {
                            "type": "boolean",
                            "description": "Automount service account token for the server service account",
                            "default": true
                        },
                        "annotations": {
                            "type": "object",
                            "description": "Annotations for service account. Evaluated as a template. Only used if `create` is `true`.",
                            "default": {}
                        }
                    }
                },
                "metrics": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable exposing kiam statistics",
                            "default": false
                        },
                        "annotations": {
                            "type": "object",
                            "properties": {
                                "prometheus": {
                                    "type": "object",
                                    "properties": {
                                        "io/scrape": {
                                            "type": "string",
                                            "description": "",
                                            "default": "true"
                                        },
                                        "io/port": {
                                            "type": "string",
                                            "description": "",
                                            "default": "{{ .Values.server.metrics.port }}"
                                        }
                                    }
                                }
                            }
                        },
                        "port": {
                            "type": "number",
                            "description": "Metrics port",
                            "default": 9621
                        },
                        "syncInterval": {
                            "type": "string",
                            "description": "Metrics synchronization interval statistics",
                            "default": "5s"
                        },
                        "serviceMonitor": {
                            "type": "object",
                            "properties": {
                                "enabled": {
                                    "type": "boolean",
                                    "description": "Create ServiceMonitor Resource for scraping metrics using PrometheusOperator",
                                    "default": false
                                },
                                "namespace": {
                                    "type": "string",
                                    "description": "Namespace in which Prometheus is running",
                                    "default": ""
                                },
                                "jobLabel": {
                                    "type": "string",
                                    "description": "The name of the label on the target service to use as the job name in prometheus.",
                                    "default": ""
                                },
                                "interval": {
                                    "type": "string",
                                    "description": "Interval at which metrics should be scraped",
                                    "default": "30s"
                                },
                                "metricRelabelings": {
                                    "type": "array",
                                    "description": "Specify Metric Relabellings to add to the scrape endpoint",
                                    "default": [],
                                    "items": {}
                                },
                                "relabelings": {
                                    "type": "array",
                                    "description": "Specify Relabelings to add to the scrape endpoint",
                                    "default": [],
                                    "items": {}
                                },
                                "scrapeTimeout": {
                                    "type": "string",
                                    "description": "Specify the timeout after which the scrape is ended",
                                    "default": ""
                                },
                                "selector": {
                                    "type": "object",
                                    "description": "metrics service selector",
                                    "default": {}
                                },
                                "labels": {
                                    "type": "object",
                                    "description": "Extra labels for the ServiceMonitor",
                                    "default": {}
                                },
                                "honorLabels": {
                                    "type": "boolean",
                                    "description": "honorLabels chooses the metric's labels on collisions with target labels",
                                    "default": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "agent": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Deploy the kiam agent",
                    "default": true
                },
                "logJsonOutput": {
                    "type": "boolean",
                    "description": "Use JSON format for logs",
                    "default": true
                },
                "logLevel": {
                    "type": "string",
                    "description": "Logging level",
                    "default": "info"
                },
                "priorityClassName": {
                    "type": "string",
                    "description": "Server priorityClassName",
                    "default": ""
                },
                "schedulerName": {
                    "type": "string",
                    "description": "Name of the k8s scheduler (other than default)",
                    "default": ""
                },
                "topologySpreadConstraints": {
                    "type": "array",
                    "description": "Topology Spread Constraints for pod assignment",
                    "default": [],
                    "items": {}
                },
                "allowRouteRegExp": {
                    "type": "string",
                    "description": "Regexp with the allowed paths for agents to redirect",
                    "default": ""
                },
                "hostAliases": {
                    "type": "array",
                    "description": "Add deployment host aliases",
                    "default": [],
                    "items": {}
                },
                "containerPort": {
                    "type": "number",
                    "description": "HTTPS port to expose at container level",
                    "default": 8183
                },
                "iptables": {
                    "type": "boolean",
                    "description": "Have the agent modify the host iptables rules",
                    "default": false
                },
                "iptablesRemoveOnShutdown": {
                    "type": "boolean",
                    "description": "Remove iptables rules when shutting down the agent node",
                    "default": false
                },
                "hostInterface": {
                    "type": "string",
                    "description": "Interface for agents for redirecting requests",
                    "default": "cali+"
                },
                "keepaliveParams": {
                    "type": "object",
                    "properties": {
                        "permitWithoutStream": {
                            "type": "boolean",
                            "description": "Permit keepalive without stream",
                            "default": false
                        },
                        "time": {
                            "type": "string",
                            "description": "Keepalive time",
                            "default": ""
                        },
                        "timeout": {
                            "type": "string",
                            "description": "Keepalive timeout",
                            "default": ""
                        }
                    }
                },
                "tlsFiles": {
                    "type": "object",
                    "properties": {
                        "ca": {
                            "type": "string",
                            "description": "",
                            "default": ""
                        },
                        "cert": {
                            "type": "string",
                            "description": "",
                            "default": ""
                        },
                        "key": {
                            "type": "string",
                            "description": "",
                            "default": ""
                        }
                    }
                },
                "enableDeepProbe": {
                    "type": "boolean",
                    "description": "Use the probes using the `/health` endpoint",
                    "default": false
                },
                "dnsPolicy": {
                    "type": "string",
                    "description": "Pod DNS policy",
                    "default": "ClusterFirstWithHostNet"
                },
                "sslCertHostPath": {
                    "type": "string",
                    "description": "Path to the host system SSL certificates (necessary for contacting the AWS metadata agent)",
                    "default": "/etc/ssl/certs"
                },
                "tlsCerts": {
                    "type": "object",
                    "properties": {
                        "certFileName": {
                            "type": "string",
                            "description": "",
                            "default": "cert.pem"
                        },
                        "keyFileName": {
                            "type": "string",
                            "description": "",
                            "default": "key.pem"
                        },
                        "caFileName": {
                            "type": "string",
                            "description": "",
                            "default": "ca.pem"
                        }
                    }
                },
                "podSecurityPolicy": {
                    "type": "object",
                    "properties": {
                        "create": {
                            "type": "boolean",
                            "description": "Whether to create a PodSecurityPolicy. WARNING: PodSecurityPolicy is deprecated in Kubernetes v1.21 or later, unavailable in v1.25 or later",
                            "default": true
                        },
                        "allowedHostPaths": {
                            "type": "array",
                            "description": "Extra host paths to allow in the PodSecurityPolicy",
                            "default": [],
                            "items": {}
                        }
                    }
                },
                "tlsSecret": {
                    "type": "string",
                    "description": "Name of a secret with TLS certificates for the container",
                    "default": ""
                },
                "useHostNetwork": {
                    "type": "boolean",
                    "description": "Use host networking (ports will be directly exposed in the host)",
                    "default": true
                },
                "startupProbe": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable startupProbe",
                            "default": false
                        },
                        "initialDelaySeconds": {
                            "type": "number",
                            "description": "Initial delay seconds for startupProbe",
                            "default": 5
                        },
                        "periodSeconds": {
                            "type": "number",
                            "description": "Period seconds for startupProbe",
                            "default": 30
                        },
                        "timeoutSeconds": {
                            "type": "number",
                            "description": "Timeout seconds for startupProbe",
                            "default": 5
                        },
                        "failureThreshold": {
                            "type": "number",
                            "description": "Failure threshold for startupProbe",
                            "default": 5
                        },
                        "successThreshold": {
                            "type": "number",
                            "description": "Success threshold for startupProbe",
                            "default": 1
                        }
                    }
                },
                "livenessProbe": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable livenessProbe",
                            "default": true
                        },
                        "initialDelaySeconds": {
                            "type": "number",
                            "description": "Initial delay seconds for livenessProbe",
                            "default": 5
                        },
                        "periodSeconds": {
                            "type": "number",
                            "description": "Period seconds for livenessProbe",
                            "default": 30
                        },
                        "timeoutSeconds": {
                            "type": "number",
                            "description": "Timeout seconds for livenessProbe",
                            "default": 5
                        },
                        "failureThreshold": {
                            "type": "number",
                            "description": "Failure threshold for livenessProbe",
                            "default": 5
                        },
                        "successThreshold": {
                            "type": "number",
                            "description": "Success threshold for livenessProbe",
                            "default": 1
                        }
                    }
                },
                "readinessProbe": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable readinessProbe",
                            "default": true
                        },
                        "initialDelaySeconds": {
                            "type": "number",
                            "description": "Initial delay seconds for readinessProbe",
                            "default": 5
                        },
                        "periodSeconds": {
                            "type": "number",
                            "description": "Period seconds for readinessProbe",
                            "default": 30
                        },
                        "timeoutSeconds": {
                            "type": "number",
                            "description": "Timeout seconds for readinessProbe",
                            "default": 5
                        },
                        "failureThreshold": {
                            "type": "number",
                            "description": "Failure threshold for readinessProbe",
                            "default": 5
                        },
                        "successThreshold": {
                            "type": "number",
                            "description": "Success threshold for readinessProbe",
                            "default": 1
                        }
                    }
                },
                "customStartupProbe": {
                    "type": "object",
                    "description": "Override default startup probe",
                    "default": {}
                },
                "customLivenessProbe": {
                    "type": "object",
                    "description": "Override default liveness probe",
                    "default": {}
                },
                "customReadinessProbe": {
                    "type": "object",
                    "description": "Override default readiness probe",
                    "default": {}
                },
                "extraArgs": {
                    "type": "object",
                    "description": "Extra arguments to add to the default kiam command",
                    "default": {}
                },
                "gatewayTimeoutCreation": {
                    "type": "string",
                    "description": "Timeout when creating the kiam gateway",
                    "default": "1s"
                },
                "command": {
                    "type": "array",
                    "description": "Override kiam default command",
                    "default": [],
                    "items": {}
                },
                "args": {
                    "type": "array",
                    "description": "Override kiam default args",
                    "default": [],
                    "items": {}
                },
                "resources": {
                    "type": "object",
                    "properties": {
                        "limits": {
                            "type": "object",
                            "description": "The resources limits for the kiam container",
                            "default": {}
                        },
                        "requests": {
                            "type": "object",
                            "description": "The requested resources for the kiam container",
                            "default": {}
                        }
                    }
                },
                "containerSecurityContext": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enabled agent containers' Security Context",
                            "default": true
                        },
                        "runAsUser": {
                            "type": "number",
                            "description": "Set agent container's Security Context runAsUser",
                            "default": 0
                        },
                        "runAsNonRoot": {
                            "type": "boolean",
                            "description": "Set agent container's Security Context runAsNonRoot",
                            "default": false
                        },
                        "capabilities": {
                            "type": "object",
                            "properties": {
                                "add": {
                                    "type": "array",
                                    "description": "Add capabilities for the securityContext",
                                    "default": [
                                        "NET_ADMIN"
                                    ],
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "podSecurityContext": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enabled agent pods' Security Context",
                            "default": true
                        },
                        "fsGroup": {
                            "type": "number",
                            "description": "Set agent pod's Security Context fsGroup",
                            "default": 1001
                        }
                    }
                },
                "podAffinityPreset": {
                    "type": "string",
                    "description": "Pod affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`",
                    "default": ""
                },
                "podAntiAffinityPreset": {
                    "type": "string",
                    "description": "Pod anti-affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`",
                    "default": "soft"
                },
                "nodeAffinityPreset": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "Node affinity preset type. Ignored if `affinity` is set. Allowed values: `soft` or `hard`",
                            "default": ""
                        },
                        "key": {
                            "type": "string",
                            "description": "Node label key to match. Ignored if `affinity` is set.",
                            "default": ""
                        },
                        "values": {
                            "type": "array",
                            "description": "Node label values to match. Ignored if `affinity` is set.",
                            "default": [],
                            "items": {}
                        }
                    }
                },
                "affinity": {
                    "type": "object",
                    "description": "Affinity for pod assignment",
                    "default": {}
                },
                "nodeSelector": {
                    "type": "object",
                    "description": "Node labels for pod assignment",
                    "default": {}
                },
                "tolerations": {
                    "type": "array",
                    "description": "Tolerations for pod assignment",
                    "default": [],
                    "items": {}
                },
                "podLabels": {
                    "type": "object",
                    "description": "Extra labels for kiam pods",
                    "default": {}
                },
                "podAnnotations": {
                    "type": "object",
                    "description": "Annotations for kiam pods",
                    "default": {}
                },
                "lifecycleHooks": {
                    "type": "object",
                    "description": "LifecycleHooks to set additional configuration at startup.",
                    "default": {}
                },
                "updateStrategy": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "Update strategy - only really applicable for deployments with RWO PVs attached",
                            "default": "RollingUpdate"
                        }
                    }
                },
                "extraEnvVars": {
                    "type": "array",
                    "description": "Array containing extra env vars to configure kiam agent",
                    "default": [],
                    "items": {}
                },
                "extraEnvVarsCM": {
                    "type": "string",
                    "description": "ConfigMap containing extra env vars to configure kiam agent",
                    "default": ""
                },
                "extraEnvVarsSecret": {
                    "type": "string",
                    "description": "Secret containing extra env vars to configure kiam agent (in case of sensitive data)",
                    "default": ""
                },
                "service": {
                    "type": "object",
                    "properties": {
                        "nodePorts": {
                            "type": "object",
                            "properties": {
                                "metrics": {
                                    "type": "string",
                                    "description": "",
                                    "default": ""
                                }
                            }
                        },
                        "type": {
                            "type": "string",
                            "description": "Kubernetes service type",
                            "default": "ClusterIP"
                        },
                        "clusterIP": {
                            "type": "string",
                            "description": "kiam service clusterIP IP",
                            "default": ""
                        },
                        "loadBalancerIP": {
                            "type": "string",
                            "description": "loadBalancerIP if service type is `LoadBalancer`",
                            "default": ""
                        },
                        "loadBalancerSourceRanges": {
                            "type": "array",
                            "description": "Address that are allowed when service is LoadBalancer",
                            "default": [],
                            "items": {}
                        },
                        "externalTrafficPolicy": {
                            "type": "string",
                            "description": "Enable client source IP preservation",
                            "default": "Cluster"
                        },
                        "extraPorts": {
                            "type": "array",
                            "description": "Extra ports to expose (normally used with the `sidecar` value)",
                            "default": [],
                            "items": {}
                        },
                        "annotations": {
                            "type": "object",
                            "description": "Annotations for kiam service",
                            "default": {}
                        },
                        "sessionAffinity": {
                            "type": "string",
                            "description": "Session Affinity for Kubernetes service, can be \"None\" or \"ClientIP\"",
                            "default": "None"
                        },
                        "sessionAffinityConfig": {
                            "type": "object",
                            "description": "Additional settings for the sessionAffinity",
                            "default": {}
                        }
                    }
                },
                "extraVolumes": {
                    "type": "array",
                    "description": "Optionally specify extra list of additional volumes for kiam pods",
                    "default": [],
                    "items": {}
                },
                "extraVolumeMounts": {
                    "type": "array",
                    "description": "Optionally specify extra list of additional volumeMounts for kiam container(s)",
                    "default": [],
                    "items": {}
                },
                "initContainers": {
                    "type": "array",
                    "description": "Add additional init containers to the kiam pods",
                    "default": [],
                    "items": {}
                },
                "sidecars": {
                    "type": "array",
                    "description": "Add additional sidecar containers to the kiam pods",
                    "default": [],
                    "items": {}
                },
                "serviceAccount": {
                    "type": "object",
                    "properties": {
                        "create": {
                            "type": "boolean",
                            "description": "Specifies whether a ServiceAccount should be created",
                            "default": true
                        },
                        "name": {
                            "type": "string",
                            "description": "Name of the service account to use. If not set and create is true, a name is generated using the fullname template.",
                            "default": ""
                        },
                        "automountServiceAccountToken": {
                            "type": "boolean",
                            "description": "Automount service account token for the server service account",
                            "default": true
                        },
                        "annotations": {
                            "type": "object",
                            "description": "Annotations for service account. Evaluated as a template. Only used if `create` is `true`.",
                            "default": {}
                        }
                    }
                },
                "metrics": {
                    "type": "object",
                    "properties": {
                        "annotations": {
                            "type": "object",
                            "properties": {
                                "prometheus": {
                                    "type": "object",
                                    "properties": {
                                        "io/scrape": {
                                            "type": "string",
                                            "description": "",
                                            "default": "true"
                                        },
                                        "io/port": {
                                            "type": "string",
                                            "description": "",
                                            "default": "{{ .Values.agent.metrics.port }}"
                                        }
                                    }
                                }
                            }
                        },
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable exposing kiam statistics",
                            "default": false
                        },
                        "port": {
                            "type": "number",
                            "description": "Service HTTP management port",
                            "default": 9620
                        },
                        "syncInterval": {
                            "type": "string",
                            "description": "Metrics synchronization interval statistics",
                            "default": "5s"
                        },
                        "serviceMonitor": {
                            "type": "object",
                            "properties": {
                                "enabled": {
                                    "type": "boolean",
                                    "description": "Create ServiceMonitor Resource for scraping metrics using PrometheusOperator",
                                    "default": false
                                },
                                "namespace": {
                                    "type": "string",
                                    "description": "Namespace which Prometheus is running in",
                                    "default": ""
                                },
                                "jobLabel": {
                                    "type": "string",
                                    "description": "The name of the label on the target service to use as the job name in prometheus.",
                                    "default": ""
                                },
                                "interval": {
                                    "type": "string",
                                    "description": "Interval at which metrics should be scraped",
                                    "default": "30s"
                                },
                                "metricRelabelings": {
                                    "type": "array",
                                    "description": "Specify Metric Relabelings to add to the scrape endpoint",
                                    "default": [],
                                    "items": {}
                                },
                                "relabelings": {
                                    "type": "array",
                                    "description": "Specify Relabelings to add to the scrape endpoint",
                                    "default": [],
                                    "items": {}
                                },
                                "scrapeTimeout": {
                                    "type": "string",
                                    "description": "Specify the timeout after which the scrape is ended",
                                    "default": ""
                                },
                                "selector": {
                                    "type": "object",
                                    "description": "metrics service selector",
                                    "default": {}
                                },
                                "labels": {
                                    "type": "object",
                                    "description": "Extra labels for the ServiceMonitor",
                                    "default": {}
                                },
                                "honorLabels": {
                                    "type": "boolean",
                                    "description": "honorLabels chooses the metric's labels on collisions with target labels",
                                    "default": false
                                }
                            }
                        }
                    }
                }
            }
        },
        "rbac": {
            "type": "object",
            "properties": {
                "create": {
                    "type": "boolean",
                    "description": "Whether to create and use RBAC resources or not",
                    "default": true
                }
            }
        }
    }
}