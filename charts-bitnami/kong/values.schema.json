{
    "title": "Chart Values",
    "type": "object",
    "properties": {
        "global": {
            "type": "object",
            "properties": {
                "imageRegistry": {
                    "type": "string",
                    "description": "Global Docker image registry",
                    "default": ""
                },
                "imagePullSecrets": {
                    "type": "array",
                    "description": "Global Docker registry secret names as an array",
                    "default": [],
                    "items": {}
                },
                "storageClass": {
                    "type": "string",
                    "description": "Global StorageClass for Persistent Volume(s)",
                    "default": ""
                }
            }
        },
        "kubeVersion": {
            "type": "string",
            "description": "Force target Kubernetes version (using Helm capabilities if not set)",
            "default": ""
        },
        "nameOverride": {
            "type": "string",
            "description": "String to partially override common.names.fullname template with a string (will prepend the release name)",
            "default": ""
        },
        "fullnameOverride": {
            "type": "string",
            "description": "String to fully override common.names.fullname template with a string",
            "default": ""
        },
        "commonAnnotations": {
            "type": "object",
            "description": "Common annotations to add to all Kong resources (sub-charts are not considered). Evaluated as a template",
            "default": {}
        },
        "commonLabels": {
            "type": "object",
            "description": "Common labels to add to all Kong resources (sub-charts are not considered). Evaluated as a template",
            "default": {}
        },
        "clusterDomain": {
            "type": "string",
            "description": "Kubernetes cluster domain",
            "default": "cluster.local"
        },
        "extraDeploy": {
            "type": "array",
            "description": "Array of extra objects to deploy with the release (evaluated as a template).",
            "default": [],
            "items": {}
        },
        "diagnosticMode": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable diagnostic mode (all probes will be disabled and the command will be overridden)",
                    "default": false
                },
                "command": {
                    "type": "array",
                    "description": "Command to override all containers in the daemonset/deployment",
                    "default": [
                        "sleep"
                    ],
                    "items": {
                        "type": "string"
                    }
                },
                "args": {
                    "type": "array",
                    "description": "Args to override all containers in the daemonset/deployment",
                    "default": [
                        "infinity"
                    ],
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "image": {
            "type": "object",
            "properties": {
                "registry": {
                    "type": "string",
                    "description": "kong image registry",
                    "default": "docker.io"
                },
                "repository": {
                    "type": "string",
                    "description": "kong image repository",
                    "default": "bitnami/kong"
                },
                "tag": {
                    "type": "string",
                    "description": "kong image tag (immutable tags are recommended)",
                    "default": "3.4.0-debian-11-r22"
                },
                "digest": {
                    "type": "string",
                    "description": "kong image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag",
                    "default": ""
                },
                "pullPolicy": {
                    "type": "string",
                    "description": "kong image pull policy",
                    "default": "IfNotPresent"
                },
                "pullSecrets": {
                    "type": "array",
                    "description": "Specify docker-registry secret names as an array",
                    "default": [],
                    "items": {}
                },
                "debug": {
                    "type": "boolean",
                    "description": "Enable image debug mode",
                    "default": false
                }
            }
        },
        "database": {
            "type": "string",
            "description": "Select which database backend Kong will use. Can be 'postgresql', 'cassandra' or 'off'",
            "default": "postgresql"
        },
        "useDaemonset": {
            "type": "boolean",
            "description": "Use a daemonset instead of a deployment. `replicaCount` will not take effect.",
            "default": false
        },
        "replicaCount": {
            "type": "number",
            "description": "Number of Kong replicas",
            "default": 2
        },
        "containerSecurityContext": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enabled Kong containers' Security Context",
                    "default": true
                },
                "runAsUser": {
                    "type": "number",
                    "description": "Set Kong container's Security Context runAsUser",
                    "default": 1001
                },
                "runAsNonRoot": {
                    "type": "boolean",
                    "description": "Set Kong container's Security Context runAsNonRoot",
                    "default": true
                }
            }
        },
        "podSecurityContext": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enabled Kong pods' Security Context",
                    "default": false
                },
                "fsGroup": {
                    "type": "number",
                    "description": "Set Kong pod's Security Context fsGroup",
                    "default": 1001
                }
            }
        },
        "updateStrategy": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string",
                    "description": "Kong update strategy",
                    "default": "RollingUpdate"
                },
                "rollingUpdate": {
                    "type": "object",
                    "description": "Kong deployment rolling update configuration parameters",
                    "default": {}
                }
            }
        },
        "hostAliases": {
            "type": "array",
            "description": "Add deployment host aliases",
            "default": [],
            "items": {}
        },
        "topologySpreadConstraints": {
            "type": "array",
            "description": "Topology Spread Constraints for pod assignment spread across your cluster among failure-domains. Evaluated as a template",
            "default": [],
            "items": {}
        },
        "priorityClassName": {
            "type": "string",
            "description": "Priority Class Name",
            "default": ""
        },
        "schedulerName": {
            "type": "string",
            "description": "Use an alternate scheduler, e.g. \"stork\".",
            "default": ""
        },
        "terminationGracePeriodSeconds": {
            "type": "string",
            "description": "Seconds Kong pod needs to terminate gracefully",
            "default": ""
        },
        "podAnnotations": {
            "type": "object",
            "description": "Additional pod annotations",
            "default": {}
        },
        "podLabels": {
            "type": "object",
            "description": "Additional pod labels",
            "default": {}
        },
        "podAffinityPreset": {
            "type": "string",
            "description": "Pod affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`",
            "default": ""
        },
        "podAntiAffinityPreset": {
            "type": "string",
            "description": "Pod anti-affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`",
            "default": "soft"
        },
        "nodeAffinityPreset": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string",
                    "description": "Node affinity preset type. Ignored if `affinity` is set. Allowed values: `soft` or `hard`",
                    "default": ""
                },
                "key": {
                    "type": "string",
                    "description": "Node label key to match Ignored if `affinity` is set.",
                    "default": ""
                },
                "values": {
                    "type": "array",
                    "description": "Node label values to match. Ignored if `affinity` is set.",
                    "default": [],
                    "items": {}
                }
            }
        },
        "affinity": {
            "type": "object",
            "description": "Affinity for pod assignment",
            "default": {}
        },
        "nodeSelector": {
            "type": "object",
            "description": "Node labels for pod assignment",
            "default": {}
        },
        "tolerations": {
            "type": "array",
            "description": "Tolerations for pod assignment",
            "default": [],
            "items": {}
        },
        "extraVolumes": {
            "type": "array",
            "description": "Array of extra volumes to be added to the Kong deployment deployment (evaluated as template). Requires setting `extraVolumeMounts`",
            "default": [],
            "items": {}
        },
        "initContainers": {
            "type": "array",
            "description": "Add additional init containers to the Kong pods",
            "default": [],
            "items": {}
        },
        "sidecars": {
            "type": "array",
            "description": "Add additional sidecar containers to the Kong pods",
            "default": [],
            "items": {}
        },
        "autoscaling": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Deploy a HorizontalPodAutoscaler object for the Kong deployment",
                    "default": false
                },
                "minReplicas": {
                    "type": "number",
                    "description": "Minimum number of replicas to scale back",
                    "default": 2
                },
                "maxReplicas": {
                    "type": "number",
                    "description": "Maximum number of replicas to scale out",
                    "default": 5
                },
                "metrics": {
                    "type": "array",
                    "description": "",
                    "items": {
                        "type": "object",
                        "properties": {
                            "type": {
                                "type": "string",
                                "description": ""
                            },
                            "resource": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "description": ""
                                    },
                                    "targetAverageUtilization": {
                                        "type": "number",
                                        "description": ""
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "pdb": {
            "type": "object",
            "properties": {
                "create": {
                    "type": "boolean",
                    "description": "Deploy a PodDisruptionBudget object for Kong deployment",
                    "default": false
                },
                "minAvailable": {
                    "type": "string",
                    "description": "Minimum available Kong replicas (expressed in percentage)",
                    "default": ""
                },
                "maxUnavailable": {
                    "type": "string",
                    "description": "Maximum unavailable Kong replicas (expressed in percentage)",
                    "default": "50%"
                }
            }
        },
        "kong": {
            "type": "object",
            "properties": {
                "command": {
                    "type": "array",
                    "description": "Override default container command (useful when using custom images)",
                    "default": [],
                    "items": {}
                },
                "args": {
                    "type": "array",
                    "description": "Override default container args (useful when using custom images)",
                    "default": [],
                    "items": {}
                },
                "initScriptsCM": {
                    "type": "string",
                    "description": "Configmap with init scripts to execute",
                    "default": ""
                },
                "initScriptsSecret": {
                    "type": "string",
                    "description": "Configmap with init scripts to execute",
                    "default": ""
                },
                "declarativeConfig": {
                    "type": "string",
                    "description": "Declarative configuration to be loaded by Kong (evaluated as a template)",
                    "default": ""
                },
                "declarativeConfigCM": {
                    "type": "string",
                    "description": "Configmap with declarative configuration to be loaded by Kong (evaluated as a template)",
                    "default": ""
                },
                "extraEnvVars": {
                    "type": "array",
                    "description": "Array containing extra env vars to configure Kong",
                    "default": [],
                    "items": {}
                },
                "extraEnvVarsCM": {
                    "type": "string",
                    "description": "ConfigMap containing extra env vars to configure Kong",
                    "default": ""
                },
                "extraEnvVarsSecret": {
                    "type": "string",
                    "description": "Secret containing extra env vars to configure Kong (in case of sensitive data)",
                    "default": ""
                },
                "extraVolumeMounts": {
                    "type": "array",
                    "description": "Array of extra volume mounts to be added to the Kong Container (evaluated as template). Normally used with `extraVolumes`.",
                    "default": [],
                    "items": {}
                },
                "containerPorts": {
                    "type": "object",
                    "properties": {
                        "proxyHttp": {
                            "type": "number",
                            "description": "Kong proxy HTTP container port",
                            "default": 8000
                        },
                        "proxyHttps": {
                            "type": "number",
                            "description": "Kong proxy HTTPS container port",
                            "default": 8443
                        },
                        "adminHttp": {
                            "type": "number",
                            "description": "Kong admin HTTP container port",
                            "default": 8001
                        },
                        "adminHttps": {
                            "type": "number",
                            "description": "Kong admin HTTPS container port",
                            "default": 8444
                        }
                    }
                },
                "resources": {
                    "type": "object",
                    "properties": {
                        "limits": {
                            "type": "object",
                            "description": "The resources limits for the Kong container",
                            "default": {}
                        },
                        "requests": {
                            "type": "object",
                            "description": "The requested resources for the Kong container",
                            "default": {}
                        }
                    }
                },
                "livenessProbe": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable livenessProbe on Kong containers",
                            "default": true
                        },
                        "initialDelaySeconds": {
                            "type": "number",
                            "description": "Initial delay seconds for livenessProbe",
                            "default": 120
                        },
                        "periodSeconds": {
                            "type": "number",
                            "description": "Period seconds for livenessProbe",
                            "default": 10
                        },
                        "timeoutSeconds": {
                            "type": "number",
                            "description": "Timeout seconds for livenessProbe",
                            "default": 5
                        },
                        "failureThreshold": {
                            "type": "number",
                            "description": "Failure threshold for livenessProbe",
                            "default": 6
                        },
                        "successThreshold": {
                            "type": "number",
                            "description": "Success threshold for livenessProbe",
                            "default": 1
                        }
                    }
                },
                "readinessProbe": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable readinessProbe on Kong containers",
                            "default": true
                        },
                        "initialDelaySeconds": {
                            "type": "number",
                            "description": "Initial delay seconds for readinessProbe",
                            "default": 30
                        },
                        "periodSeconds": {
                            "type": "number",
                            "description": "Period seconds for readinessProbe",
                            "default": 10
                        },
                        "timeoutSeconds": {
                            "type": "number",
                            "description": "Timeout seconds for readinessProbe",
                            "default": 5
                        },
                        "failureThreshold": {
                            "type": "number",
                            "description": "Failure threshold for readinessProbe",
                            "default": 6
                        },
                        "successThreshold": {
                            "type": "number",
                            "description": "Success threshold for readinessProbe",
                            "default": 1
                        }
                    }
                },
                "startupProbe": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable startupProbe on Kong containers",
                            "default": false
                        },
                        "initialDelaySeconds": {
                            "type": "number",
                            "description": "Initial delay seconds for startupProbe",
                            "default": 10
                        },
                        "periodSeconds": {
                            "type": "number",
                            "description": "Period seconds for startupProbe",
                            "default": 15
                        },
                        "timeoutSeconds": {
                            "type": "number",
                            "description": "Timeout seconds for startupProbe",
                            "default": 3
                        },
                        "failureThreshold": {
                            "type": "number",
                            "description": "Failure threshold for startupProbe",
                            "default": 20
                        },
                        "successThreshold": {
                            "type": "number",
                            "description": "Success threshold for startupProbe",
                            "default": 1
                        }
                    }
                },
                "customLivenessProbe": {
                    "type": "object",
                    "description": "Override default liveness probe (kong container)",
                    "default": {}
                },
                "customReadinessProbe": {
                    "type": "object",
                    "description": "Override default readiness probe (kong container)",
                    "default": {}
                },
                "customStartupProbe": {
                    "type": "object",
                    "description": "Override default startup probe (kong container)",
                    "default": {}
                },
                "lifecycleHooks": {
                    "type": "object",
                    "description": "Lifecycle hooks (kong container)",
                    "default": {}
                }
            }
        },
        "service": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string",
                    "description": "Kubernetes Service type",
                    "default": "ClusterIP"
                },
                "exposeAdmin": {
                    "type": "boolean",
                    "description": "Add the Kong Admin ports to the service",
                    "default": false
                },
                "disableHttpPort": {
                    "type": "boolean",
                    "description": "Disable Kong proxy HTTP and Kong admin HTTP ports",
                    "default": false
                },
                "ports": {
                    "type": "object",
                    "properties": {
                        "proxyHttp": {
                            "type": "number",
                            "description": "Kong proxy service HTTP port",
                            "default": 80
                        },
                        "proxyHttps": {
                            "type": "number",
                            "description": "Kong proxy service HTTPS port",
                            "default": 443
                        },
                        "adminHttp": {
                            "type": "number",
                            "description": "Kong admin service HTTP port (only if service.exposeAdmin=true)",
                            "default": 8001
                        },
                        "adminHttps": {
                            "type": "number",
                            "description": "Kong admin service HTTPS port (only if service.exposeAdmin=true)",
                            "default": 8444
                        }
                    }
                },
                "nodePorts": {
                    "type": "object",
                    "properties": {
                        "proxyHttp": {
                            "type": "string",
                            "description": "NodePort for the Kong proxy HTTP endpoint",
                            "default": ""
                        },
                        "proxyHttps": {
                            "type": "string",
                            "description": "NodePort for the Kong proxy HTTPS endpoint",
                            "default": ""
                        },
                        "adminHttp": {
                            "type": "string",
                            "description": "NodePort for the Kong admin HTTP endpoint",
                            "default": ""
                        },
                        "adminHttps": {
                            "type": "string",
                            "description": "NodePort for the Kong admin HTTPS endpoint",
                            "default": ""
                        }
                    }
                },
                "sessionAffinity": {
                    "type": "string",
                    "description": "Control where client requests go, to the same pod or round-robin",
                    "default": "None"
                },
                "sessionAffinityConfig": {
                    "type": "object",
                    "description": "Additional settings for the sessionAffinity",
                    "default": {}
                },
                "clusterIP": {
                    "type": "string",
                    "description": "Cluster internal IP of the service",
                    "default": ""
                },
                "externalTrafficPolicy": {
                    "type": "string",
                    "description": "external traffic policy managing client source IP preservation",
                    "default": ""
                },
                "loadBalancerIP": {
                    "type": "string",
                    "description": "loadBalancerIP if kong service type is `LoadBalancer`",
                    "default": ""
                },
                "loadBalancerSourceRanges": {
                    "type": "array",
                    "description": "Kong service Load Balancer sources",
                    "default": [],
                    "items": {}
                },
                "annotations": {
                    "type": "object",
                    "description": "Annotations for Kong service",
                    "default": {}
                },
                "extraPorts": {
                    "type": "array",
                    "description": "Extra ports to expose (normally used with the `sidecar` value)",
                    "default": [],
                    "items": {}
                }
            }
        },
        "ingress": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable ingress controller resource",
                    "default": false
                },
                "ingressClassName": {
                    "type": "string",
                    "description": "IngressClass that will be be used to implement the Ingress (Kubernetes 1.18+)",
                    "default": ""
                },
                "pathType": {
                    "type": "string",
                    "description": "Ingress path type",
                    "default": "ImplementationSpecific"
                },
                "apiVersion": {
                    "type": "string",
                    "description": "Force Ingress API version (automatically detected if not set)",
                    "default": ""
                },
                "hostname": {
                    "type": "string",
                    "description": "Default host for the ingress resource",
                    "default": "kong.local"
                },
                "path": {
                    "type": "string",
                    "description": "Ingress path",
                    "default": "/"
                },
                "tls": {
                    "type": "boolean",
                    "description": "Enable TLS configuration for the host defined at `ingress.hostname` parameter",
                    "default": false
                },
                "selfSigned": {
                    "type": "boolean",
                    "description": "Create a TLS secret for this ingress record using self-signed certificates generated by Helm",
                    "default": false
                },
                "extraHosts": {
                    "type": "array",
                    "description": "The list of additional hostnames to be covered with this ingress record.",
                    "default": [],
                    "items": {}
                },
                "extraPaths": {
                    "type": "array",
                    "description": "Additional arbitrary path/backend objects",
                    "default": [],
                    "items": {}
                },
                "extraTls": {
                    "type": "array",
                    "description": "The tls configuration for additional hostnames to be covered with this ingress record.",
                    "default": [],
                    "items": {}
                },
                "secrets": {
                    "type": "array",
                    "description": "If you're providing your own certificates, please use this to add the certificates as secrets",
                    "default": [],
                    "items": {}
                },
                "extraRules": {
                    "type": "array",
                    "description": "Additional rules to be covered with this ingress record",
                    "default": [],
                    "items": {}
                }
            }
        },
        "ingressController": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable/disable the Kong Ingress Controller",
                    "default": true
                },
                "image": {
                    "type": "object",
                    "properties": {
                        "registry": {
                            "type": "string",
                            "description": "Kong Ingress Controller image registry",
                            "default": "docker.io"
                        },
                        "repository": {
                            "type": "string",
                            "description": "Kong Ingress Controller image name",
                            "default": "bitnami/kong-ingress-controller"
                        },
                        "tag": {
                            "type": "string",
                            "description": "Kong Ingress Controller image tag",
                            "default": "2.11.1-debian-11-r5"
                        },
                        "digest": {
                            "type": "string",
                            "description": "Kong Ingress Controller image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag",
                            "default": ""
                        },
                        "pullPolicy": {
                            "type": "string",
                            "description": "Kong Ingress Controller image pull policy",
                            "default": "IfNotPresent"
                        },
                        "pullSecrets": {
                            "type": "array",
                            "description": "Specify docker-registry secret names as an array",
                            "default": [],
                            "items": {}
                        }
                    }
                },
                "proxyReadyTimeout": {
                    "type": "number",
                    "description": "Maximum time (in seconds) to wait for the Kong container to be ready",
                    "default": 300
                },
                "ingressClass": {
                    "type": "string",
                    "description": "Name of the class to register Kong Ingress Controller (useful when having other Ingress Controllers in the cluster)",
                    "default": "kong"
                },
                "command": {
                    "type": "array",
                    "description": "Override default container command (useful when using custom images)",
                    "default": [],
                    "items": {}
                },
                "args": {
                    "type": "array",
                    "description": "Override default container args (useful when using custom images)",
                    "default": [],
                    "items": {}
                },
                "extraEnvVars": {
                    "type": "array",
                    "description": "Array containing extra env vars to configure Kong",
                    "default": [],
                    "items": {}
                },
                "extraEnvVarsCM": {
                    "type": "string",
                    "description": "ConfigMap containing extra env vars to configure Kong Ingress Controller",
                    "default": ""
                },
                "extraEnvVarsSecret": {
                    "type": "string",
                    "description": "Secret containing extra env vars to configure Kong Ingress Controller (in case of sensitive data)",
                    "default": ""
                },
                "extraVolumeMounts": {
                    "type": "array",
                    "description": "Array of extra volume mounts to be added to the Kong Ingress Controller container (evaluated as template). Normally used with `extraVolumes`.",
                    "default": [],
                    "items": {}
                },
                "containerPorts": {
                    "type": "object",
                    "properties": {
                        "health": {
                            "type": "number",
                            "description": "Kong Ingress Controller health container port",
                            "default": 10254
                        }
                    }
                },
                "resources": {
                    "type": "object",
                    "properties": {
                        "limits": {
                            "type": "object",
                            "description": "The resources limits for the Kong Ingress Controller container",
                            "default": {}
                        },
                        "requests": {
                            "type": "object",
                            "description": "The requested resources for the Kong Ingress Controller container",
                            "default": {}
                        }
                    }
                },
                "livenessProbe": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable livenessProbe on Kong Ingress Controller containers",
                            "default": true
                        },
                        "initialDelaySeconds": {
                            "type": "number",
                            "description": "Initial delay seconds for livenessProbe",
                            "default": 120
                        },
                        "periodSeconds": {
                            "type": "number",
                            "description": "Period seconds for livenessProbe",
                            "default": 10
                        },
                        "timeoutSeconds": {
                            "type": "number",
                            "description": "Timeout seconds for livenessProbe",
                            "default": 5
                        },
                        "failureThreshold": {
                            "type": "number",
                            "description": "Failure threshold for livenessProbe",
                            "default": 6
                        },
                        "successThreshold": {
                            "type": "number",
                            "description": "Success threshold for livenessProbe",
                            "default": 1
                        }
                    }
                },
                "readinessProbe": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable readinessProbe on Kong Ingress Controller containers",
                            "default": true
                        },
                        "initialDelaySeconds": {
                            "type": "number",
                            "description": "Initial delay seconds for readinessProbe",
                            "default": 30
                        },
                        "periodSeconds": {
                            "type": "number",
                            "description": "Period seconds for readinessProbe",
                            "default": 10
                        },
                        "timeoutSeconds": {
                            "type": "number",
                            "description": "Timeout seconds for readinessProbe",
                            "default": 5
                        },
                        "failureThreshold": {
                            "type": "number",
                            "description": "Failure threshold for readinessProbe",
                            "default": 6
                        },
                        "successThreshold": {
                            "type": "number",
                            "description": "Success threshold for readinessProbe",
                            "default": 1
                        }
                    }
                },
                "startupProbe": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable startupProbe on Kong Ingress Controller containers",
                            "default": false
                        },
                        "initialDelaySeconds": {
                            "type": "number",
                            "description": "Initial delay seconds for startupProbe",
                            "default": 10
                        },
                        "periodSeconds": {
                            "type": "number",
                            "description": "Period seconds for startupProbe",
                            "default": 15
                        },
                        "timeoutSeconds": {
                            "type": "number",
                            "description": "Timeout seconds for startupProbe",
                            "default": 3
                        },
                        "failureThreshold": {
                            "type": "number",
                            "description": "Failure threshold for startupProbe",
                            "default": 20
                        },
                        "successThreshold": {
                            "type": "number",
                            "description": "Success threshold for startupProbe",
                            "default": 1
                        }
                    }
                },
                "customLivenessProbe": {
                    "type": "object",
                    "description": "Override default liveness probe (Kong Ingress Controller container)",
                    "default": {}
                },
                "customReadinessProbe": {
                    "type": "object",
                    "description": "Override default readiness probe (Kong Ingress Controller container)",
                    "default": {}
                },
                "customStartupProbe": {
                    "type": "object",
                    "description": "Override default startup probe (Kong Ingress Controller container)",
                    "default": {}
                },
                "lifecycleHooks": {
                    "type": "object",
                    "description": "Lifecycle hooks (Kong Ingress Controller container)",
                    "default": {}
                },
                "serviceAccount": {
                    "type": "object",
                    "properties": {
                        "create": {
                            "type": "boolean",
                            "description": "Enable the creation of a ServiceAccount for Keycloak pods",
                            "default": true
                        },
                        "name": {
                            "type": "string",
                            "description": "Name of the created ServiceAccount (name generated using common.names.fullname template otherwise)",
                            "default": ""
                        },
                        "automountServiceAccountToken": {
                            "type": "boolean",
                            "description": "Auto-mount the service account token in the pod",
                            "default": true
                        },
                        "annotations": {
                            "type": "object",
                            "description": "Additional custom annotations for the ServiceAccount",
                            "default": {}
                        }
                    }
                },
                "rbac": {
                    "type": "object",
                    "properties": {
                        "create": {
                            "type": "boolean",
                            "description": "Create the necessary RBAC resources for the Ingress Controller to work",
                            "default": true
                        },
                        "rules": {
                            "type": "array",
                            "description": "Custom RBAC rules",
                            "default": [],
                            "items": {}
                        }
                    }
                }
            }
        },
        "migration": {
            "type": "object",
            "properties": {
                "command": {
                    "type": "array",
                    "description": "Override default container command (useful when using custom images)",
                    "default": [],
                    "items": {}
                },
                "args": {
                    "type": "array",
                    "description": "Override default container args (useful when using custom images)",
                    "default": [],
                    "items": {}
                },
                "extraEnvVars": {
                    "type": "array",
                    "description": "Array containing extra env vars to configure the Kong migration job",
                    "default": [],
                    "items": {}
                },
                "extraEnvVarsCM": {
                    "type": "string",
                    "description": "ConfigMap containing extra env vars to configure the Kong migration job",
                    "default": ""
                },
                "extraEnvVarsSecret": {
                    "type": "string",
                    "description": "Secret containing extra env vars to configure the Kong migration job (in case of sensitive data)",
                    "default": ""
                },
                "extraVolumeMounts": {
                    "type": "array",
                    "description": "Array of extra volume mounts to be added to the Kong Container (evaluated as template). Normally used with `extraVolumes`.",
                    "default": [],
                    "items": {}
                },
                "resources": {
                    "type": "object",
                    "properties": {
                        "limits": {
                            "type": "object",
                            "description": "The resources limits for the container",
                            "default": {}
                        },
                        "requests": {
                            "type": "object",
                            "description": "The requested resources for the container",
                            "default": {}
                        }
                    }
                },
                "hostAliases": {
                    "type": "array",
                    "description": "Add deployment host aliases",
                    "default": [],
                    "items": {}
                },
                "annotations": {
                    "type": "object",
                    "properties": {
                        "helm": {
                            "type": "object",
                            "properties": {
                                "sh/hook": {
                                    "type": "string",
                                    "description": "",
                                    "default": "post-install, pre-upgrade"
                                },
                                "sh/hook-delete-policy": {
                                    "type": "string",
                                    "description": "",
                                    "default": "before-hook-creation,hook-succeeded"
                                }
                            }
                        }
                    }
                },
                "podLabels": {
                    "type": "object",
                    "description": "Additional pod labels",
                    "default": {}
                },
                "podAnnotations": {
                    "type": "object",
                    "description": "Additional pod annotations",
                    "default": {}
                }
            }
        },
        "postgresql": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Switch to enable or disable the PostgreSQL helm chart",
                    "default": true
                },
                "auth": {
                    "type": "object",
                    "properties": {
                        "postgresPassword": {
                            "type": "string",
                            "description": "Password for the \"postgres\" admin user",
                            "default": ""
                        },
                        "username": {
                            "type": "string",
                            "description": "Name for a custom user to create",
                            "default": "kong"
                        },
                        "password": {
                            "type": "string",
                            "description": "Password for the custom user to create",
                            "default": ""
                        },
                        "database": {
                            "type": "string",
                            "description": "Name for a custom database to create",
                            "default": "kong"
                        },
                        "existingSecret": {
                            "type": "string",
                            "description": "Name of existing secret to use for PostgreSQL credentials",
                            "default": ""
                        },
                        "usePasswordFiles": {
                            "type": "boolean",
                            "description": "Mount credentials as a files instead of using an environment variable",
                            "default": false
                        }
                    }
                },
                "architecture": {
                    "type": "string",
                    "description": "PostgreSQL architecture (`standalone` or `replication`)",
                    "default": "standalone"
                },
                "image": {
                    "type": "object",
                    "properties": {
                        "registry": {
                            "type": "string",
                            "description": "PostgreSQL image registry",
                            "default": "docker.io"
                        },
                        "repository": {
                            "type": "string",
                            "description": "PostgreSQL image repository",
                            "default": "bitnami/postgresql"
                        },
                        "tag": {
                            "type": "string",
                            "description": "PostgreSQL image tag (immutable tags are recommended)",
                            "default": "14.9.0-debian-11-r24"
                        },
                        "digest": {
                            "type": "string",
                            "description": "PostgreSQL image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag",
                            "default": ""
                        }
                    }
                },
                "external": {
                    "type": "object",
                    "properties": {
                        "host": {
                            "type": "string",
                            "description": "Database host",
                            "default": ""
                        },
                        "port": {
                            "type": "number",
                            "description": "Database port number",
                            "default": 5432
                        },
                        "user": {
                            "type": "string",
                            "description": "Non-root username for Kong",
                            "default": "kong"
                        },
                        "password": {
                            "type": "string",
                            "description": "Password for the non-root username for Kong",
                            "default": ""
                        },
                        "database": {
                            "type": "string",
                            "description": "Kong database name",
                            "default": "kong"
                        },
                        "existingSecret": {
                            "type": "string",
                            "description": "Name of an existing secret resource containing the database credentials",
                            "default": ""
                        },
                        "existingSecretPasswordKey": {
                            "type": "string",
                            "description": "Name of an existing secret key containing the database credentials",
                            "default": ""
                        }
                    }
                }
            }
        },
        "cassandra": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Switch to enable or disable the Cassandra helm chart",
                    "default": false
                },
                "dbUser": {
                    "type": "object",
                    "properties": {
                        "user": {
                            "type": "string",
                            "description": "Cassandra admin user",
                            "default": "kong"
                        },
                        "password": {
                            "type": "string",
                            "description": "Password for `cassandra.dbUser.user`. Randomly generated if empty",
                            "default": ""
                        },
                        "existingSecret": {
                            "type": "string",
                            "description": "Name of existing secret to use for Cassandra credentials",
                            "default": ""
                        }
                    }
                },
                "usePasswordFile": {
                    "type": "boolean",
                    "description": "Mount credentials as a files instead of using an environment variable",
                    "default": false
                },
                "replicaCount": {
                    "type": "number",
                    "description": "Number of Cassandra replicas",
                    "default": 1
                },
                "external": {
                    "type": "object",
                    "properties": {
                        "hosts": {
                            "type": "array",
                            "description": "List of Cassandra hosts",
                            "default": [],
                            "items": {}
                        },
                        "port": {
                            "type": "number",
                            "description": "Cassandra port number",
                            "default": 9042
                        },
                        "user": {
                            "type": "string",
                            "description": "Username of the external cassandra installation",
                            "default": ""
                        },
                        "password": {
                            "type": "string",
                            "description": "Password of the external cassandra installation",
                            "default": ""
                        },
                        "existingSecret": {
                            "type": "string",
                            "description": "Name of an existing secret resource containing the Cassandra credentials",
                            "default": ""
                        },
                        "existingSecretPasswordKey": {
                            "type": "string",
                            "description": "Name of an existing secret key containing the Cassandra credentials",
                            "default": ""
                        }
                    }
                }
            }
        },
        "metrics": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable the export of Prometheus metrics",
                    "default": false
                },
                "containerPorts": {
                    "type": "object",
                    "properties": {
                        "http": {
                            "type": "number",
                            "description": "Prometheus metrics HTTP container port",
                            "default": 9119
                        }
                    }
                },
                "service": {
                    "type": "object",
                    "properties": {
                        "sessionAffinity": {
                            "type": "string",
                            "description": "Control where client requests go, to the same pod or round-robin",
                            "default": "None"
                        },
                        "annotations": {
                            "type": "object",
                            "properties": {
                                "prometheus": {
                                    "type": "object",
                                    "properties": {
                                        "io/scrape": {
                                            "type": "string",
                                            "description": "",
                                            "default": "true"
                                        },
                                        "io/port": {
                                            "type": "string",
                                            "description": "",
                                            "default": "{{ coalesce .Values.metrics.service.ports.http .Values.metrics.service.port }}"
                                        },
                                        "io/path": {
                                            "type": "string",
                                            "description": "",
                                            "default": "/metrics"
                                        }
                                    }
                                }
                            }
                        },
                        "clusterIP": {
                            "type": "string",
                            "description": "Cluster internal IP of the service",
                            "default": ""
                        },
                        "ports": {
                            "type": "object",
                            "properties": {
                                "http": {
                                    "type": "number",
                                    "description": "Prometheus metrics service HTTP port",
                                    "default": 9119
                                }
                            }
                        }
                    }
                },
                "serviceMonitor": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Create ServiceMonitor Resource for scraping metrics using PrometheusOperator",
                            "default": false
                        },
                        "namespace": {
                            "type": "string",
                            "description": "Namespace which Prometheus is running in",
                            "default": ""
                        },
                        "interval": {
                            "type": "string",
                            "description": "Interval at which metrics should be scraped",
                            "default": "30s"
                        },
                        "scrapeTimeout": {
                            "type": "string",
                            "description": "Specify the timeout after which the scrape is ended",
                            "default": ""
                        },
                        "labels": {
                            "type": "object",
                            "description": "Additional labels that can be used so ServiceMonitor will be discovered by Prometheus",
                            "default": {}
                        },
                        "selector": {
                            "type": "object",
                            "description": "Prometheus instance selector labels",
                            "default": {}
                        },
                        "relabelings": {
                            "type": "array",
                            "description": "RelabelConfigs to apply to samples before scraping",
                            "default": [],
                            "items": {}
                        },
                        "metricRelabelings": {
                            "type": "array",
                            "description": "MetricRelabelConfigs to apply to samples before ingestion",
                            "default": [],
                            "items": {}
                        },
                        "honorLabels": {
                            "type": "boolean",
                            "description": "honorLabels chooses the metric's labels on collisions with target labels",
                            "default": false
                        },
                        "jobLabel": {
                            "type": "string",
                            "description": "The name of the label on the target service to use as the job name in prometheus.",
                            "default": ""
                        },
                        "serviceAccount": {
                            "type": "string",
                            "description": "Service account used by Prometheus Operator",
                            "default": ""
                        },
                        "rbac": {
                            "type": "object",
                            "properties": {
                                "create": {
                                    "type": "boolean",
                                    "description": "Create the necessary RBAC resources so Prometheus Operator can reach Kong's namespace",
                                    "default": true
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}