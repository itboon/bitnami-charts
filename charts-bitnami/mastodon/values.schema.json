{
    "title": "Chart Values",
    "type": "object",
    "properties": {
        "global": {
            "type": "object",
            "properties": {
                "imageRegistry": {
                    "type": "string",
                    "description": "Global Docker image registry",
                    "default": ""
                },
                "imagePullSecrets": {
                    "type": "array",
                    "description": "Global Docker registry secret names as an array",
                    "default": [],
                    "items": {}
                },
                "storageClass": {
                    "type": "string",
                    "description": "Global StorageClass for Persistent Volume(s)",
                    "default": ""
                }
            }
        },
        "kubeVersion": {
            "type": "string",
            "description": "Override Kubernetes version",
            "default": ""
        },
        "nameOverride": {
            "type": "string",
            "description": "String to partially override common.names.name",
            "default": ""
        },
        "fullnameOverride": {
            "type": "string",
            "description": "String to fully override common.names.fullname",
            "default": ""
        },
        "namespaceOverride": {
            "type": "string",
            "description": "String to fully override common.names.namespace",
            "default": ""
        },
        "commonLabels": {
            "type": "object",
            "description": "Labels to add to all deployed objects",
            "default": {}
        },
        "commonAnnotations": {
            "type": "object",
            "description": "Annotations to add to all deployed objects",
            "default": {}
        },
        "clusterDomain": {
            "type": "string",
            "description": "Kubernetes cluster domain name",
            "default": "cluster.local"
        },
        "extraDeploy": {
            "type": "array",
            "description": "Array of extra objects to deploy with the release",
            "default": [],
            "items": {}
        },
        "diagnosticMode": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable diagnostic mode (all probes will be disabled and the command will be overridden)",
                    "default": false
                },
                "command": {
                    "type": "array",
                    "description": "Command to override all containers in the deployment",
                    "default": [
                        "sleep"
                    ],
                    "items": {
                        "type": "string"
                    }
                },
                "args": {
                    "type": "array",
                    "description": "Args to override all containers in the deployment",
                    "default": [
                        "infinity"
                    ],
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "image": {
            "type": "object",
            "properties": {
                "registry": {
                    "type": "string",
                    "description": "Mastodon image registry",
                    "default": "docker.io"
                },
                "repository": {
                    "type": "string",
                    "description": "Mastodon image repository",
                    "default": "bitnami/mastodon"
                },
                "tag": {
                    "type": "string",
                    "description": "Mastodon image tag (immutable tags are recommended)",
                    "default": "4.1.7-debian-11-r0"
                },
                "digest": {
                    "type": "string",
                    "description": "Mastodon image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag image tag (immutable tags are recommended)",
                    "default": ""
                },
                "pullPolicy": {
                    "type": "string",
                    "description": "Mastodon image pull policy",
                    "default": "IfNotPresent"
                },
                "pullSecrets": {
                    "type": "array",
                    "description": "Mastodon image pull secrets",
                    "default": [],
                    "items": {}
                },
                "debug": {
                    "type": "boolean",
                    "description": "Enable Mastodon image debug mode",
                    "default": false
                }
            }
        },
        "environment": {
            "type": "string",
            "description": "Mastodon Rails and Node environment. Should be one of 'production',",
            "default": "production"
        },
        "adminUser": {
            "type": "string",
            "description": "Mastodon admin username",
            "default": "user"
        },
        "adminEmail": {
            "type": "string",
            "description": "Mastodon admin email",
            "default": "user@changeme.com"
        },
        "adminPassword": {
            "type": "string",
            "description": "Mastodon admin password",
            "default": ""
        },
        "defaultConfig": {
            "type": "string",
            "description": "Default configuration for Mastodon in the form of environment variables",
            "default": "MASTODON_ADMIN_USERNAME: {{ .Values.adminUser | quote }}\nMASTODON_ADMIN_EMAIL: {{ .Values.adminEmail | quote }}\nDB_HOST: {{ include \"mastodon.database.host\" . | quote }}\nDB_PORT: {{ include \"mastodon.database.port\" . | quote }}\nDB_NAME: {{ include \"mastodon.database.name\" . | quote }}\nDB_USER: {{ include \"mastodon.database.user\" . | quote }}\nES_ENABLED: {{ .Values.enableSearches | quote }}\nES_HOST: {{ include \"mastodon.elasticsearch.host\" . | quote }}\nES_PORT: {{ include \"mastodon.elasticsearch.port\" . | quote }}\nWEB_DOMAIN: {{ include \"mastodon.web.domain\" . | quote }}\nLOCAL_DOMAIN: {{ .Values.localDomain | quote }}\nLOCAL_HTTPS: {{ .Values.local_https | quote }}\nDEFAULT_LOCALE: {{ .Values.defaultLocale | quote }}\nSTREAMING_API_BASE_URL: {{ include \"mastodon.streaming.url\" . | quote }}\nREDIS_HOST: {{ include \"mastodon.redis.host\" . | quote }}\nREDIS_PORT: {{ include \"mastodon.redis.port\" . | quote }}\nSMTP_SERVER: {{ .Values.smtp.server | quote }}\nSMTP_PORT: {{ .Values.smtp.port | quote }}\nSMTP_FROM_ADDRESS: {{ .Values.smtp.from_address | quote }}\nSMTP_DOMAIN: {{ .Values.smtp.domain | quote }}\nSMTP_REPLY_TO: {{ .Values.smtp.reply_to | quote }}\nSMTP_DELIVERY_METHOD: {{ .Values.smtp.delivery_method | quote }}\nSMTP_CA_FILE: {{ .Values.smtp.ca_file | quote }}\nSMTP_OPENSSL_VERIFY_MODE: {{ .Values.smtp.openssl_verify_mode | quote }}\nSMTP_ENABLE_STARTTLS_AUTO: {{ .Values.smtp.enable_starttls_auto | quote }}\nSMTP_TLS: {{ .Values.smtp.tls | quote }}\nSMTP_AUTH_METHOD: {{ .Values.smtp.auth_method | quote }}\nRAILS_ENV: {{ .Values.environment | quote }}\nNODE_ENV: {{ .Values.environment | quote }}\n{{- if .Values.enableS3 }}\nS3_ENABLED: \"true\"\nS3_BUCKET: {{ include \"mastodon.s3.bucket\" . | quote }}\nS3_ENDPOINT: {{ include \"mastodon.s3.endpoint\" . | quote }}\nS3_HOSTNAME: {{ include \"mastodon.s3.host\" . | quote }}\nS3_REGION: {{ include \"mastodon.s3.region\" . | quote }}\nS3_ALIAS_HOST: {{ include \"mastodon.s3.aliasHost\" . | quote }}\nS3_PROTOCOL: {{ include \"mastodon.s3.protocol.setting\" . | quote }}\n{{- end }}\n"
        },
        "defaultSecretConfig": {
            "type": "string",
            "description": "Default secret configuration for Mastodon in the form of environment variables",
            "default": "MASTODON_ADMIN_PASSWORD: {{ include \"common.secrets.passwords.manage\" (dict \"secret\" (printf \"%s-default\" (include \"common.names.fullname\" .)) \"key\" \"MASTODON_ADMIN_PASSWORD\" \"providedValues\" (list \"adminPassword\") \"context\" $) }}\nSECRET_KEY_BASE: {{ include \"common.secrets.passwords.manage\" (dict \"secret\" (printf \"%s-default\" (include \"common.names.fullname\" .)) \"key\" \"SECRET_KEY_BASE\" \"providedValues\" (list \"secretKeyBase\") \"context\" $) }}\nOTP_SECRET: {{ include \"common.secrets.passwords.manage\" (dict \"secret\" (printf \"%s-default\" (include \"common.names.fullname\" .)) \"key\" \"OTP_SECRET\" \"providedValues\" (list \"otpSecret\") \"context\" $) }}\n"
        },
        "extraConfig": {
            "type": "object",
            "description": "Extra configuration for Mastodon in the form of environment variables",
            "default": {}
        },
        "extraSecretConfig": {
            "type": "object",
            "description": "Extra secret configuration for Mastodon in the form of environment variables",
            "default": {}
        },
        "existingConfigmap": {
            "type": "string",
            "description": "The name of an existing ConfigMap with your default configuration for Mastodon",
            "default": ""
        },
        "existingSecret": {
            "type": "string",
            "description": "The name of an existing Secret with your default configuration for Mastodon",
            "default": ""
        },
        "extraConfigExistingConfigmap": {
            "type": "string",
            "description": "The name of an existing ConfigMap with your extra configuration for Mastodon",
            "default": ""
        },
        "extraConfigExistingSecret": {
            "type": "string",
            "description": "The name of an existing Secret with your extra configuration for Mastodon",
            "default": ""
        },
        "enableSearches": {
            "type": "boolean",
            "description": "Enable the search engine (uses Elasticsearch under the hood)",
            "default": true
        },
        "enableS3": {
            "type": "boolean",
            "description": "Enable the S3 storage engine",
            "default": true
        },
        "forceHttpsS3Protocol": {
            "type": "boolean",
            "description": "Force Mastodon's S3_PROTOCOL to be https (Useful when TLS is terminated using cert-manager/Ingress)",
            "default": false
        },
        "useSecureWebSocket": {
            "type": "boolean",
            "description": "Set Mastodon's STREAMING_API_BASE_URL to use secure websocket (wss:// instead of ws://)",
            "default": false
        },
        "local_https": {
            "type": "boolean",
            "description": "Set this instance to advertise itself to the fediverse using HTTPS rather than HTTP URLs. This should almost always be true.",
            "default": true
        },
        "localDomain": {
            "type": "string",
            "description": "The domain name used by accounts on this instance. Unless you're using",
            "default": ""
        },
        "webDomain": {
            "type": "string",
            "description": "Optional alternate domain used when you want to host Mastodon at a",
            "default": ""
        },
        "defaultLocale": {
            "type": "string",
            "description": "Set the default locale for this instance",
            "default": "en"
        },
        "s3AliasHost": {
            "type": "string",
            "description": "S3 alias host for Mastodon (will use 'http://webDomain/bucket' if not set)",
            "default": ""
        },
        "smtp": {
            "type": "object",
            "properties": {
                "server": {
                    "type": "string",
                    "description": "SMTP server",
                    "default": ""
                },
                "port": {
                    "type": "number",
                    "description": "SMTP port",
                    "default": 587
                },
                "from_address": {
                    "type": "string",
                    "description": "From address for sent emails",
                    "default": ""
                },
                "domain": {
                    "type": "string",
                    "description": "SMTP domain",
                    "default": ""
                },
                "reply_to": {
                    "type": "string",
                    "description": "Reply-To value for sent emails",
                    "default": ""
                },
                "delivery_method": {
                    "type": "string",
                    "description": "SMTP delivery method",
                    "default": "smtp"
                },
                "ca_file": {
                    "type": "string",
                    "description": "SMTP CA file location",
                    "default": "/etc/ssl/certs/ca-certificates.crt"
                },
                "openssl_verify_mode": {
                    "type": "string",
                    "description": "OpenSSL verify mode",
                    "default": "none"
                },
                "enable_starttls_auto": {
                    "type": "boolean",
                    "description": "Automatically enable StartTLS",
                    "default": true
                },
                "tls": {
                    "type": "boolean",
                    "description": "SMTP TLS",
                    "default": false
                },
                "auth_method": {
                    "type": "string",
                    "description": "SMTP auth method (set to \"none\" to disable SMTP auth)",
                    "default": "plain"
                },
                "login": {
                    "type": "string",
                    "description": "SMTP auth username",
                    "default": ""
                },
                "password": {
                    "type": "string",
                    "description": "SMTP auth password",
                    "default": ""
                },
                "existingSecret": {
                    "type": "string",
                    "description": "Name of an existing secret resource containing the SMTP",
                    "default": ""
                },
                "existingSecretLoginKey": {
                    "type": "string",
                    "description": "Name of the key for the SMTP login credential",
                    "default": ""
                },
                "existingSecretPasswordKey": {
                    "type": "string",
                    "description": "Name of the key for the SMTP password credential",
                    "default": ""
                }
            }
        },
        "web": {
            "type": "object",
            "properties": {
                "replicaCount": {
                    "type": "number",
                    "description": "Number of Mastodon web replicas to deploy",
                    "default": 1
                },
                "containerPorts": {
                    "type": "object",
                    "properties": {
                        "http": {
                            "type": "number",
                            "description": "Mastodon web HTTP container port",
                            "default": 3000
                        }
                    }
                },
                "livenessProbe": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable livenessProbe on Mastodon web containers",
                            "default": true
                        },
                        "initialDelaySeconds": {
                            "type": "number",
                            "description": "Initial delay seconds for livenessProbe",
                            "default": 10
                        },
                        "periodSeconds": {
                            "type": "number",
                            "description": "Period seconds for livenessProbe",
                            "default": 10
                        },
                        "timeoutSeconds": {
                            "type": "number",
                            "description": "Timeout seconds for livenessProbe",
                            "default": 5
                        },
                        "failureThreshold": {
                            "type": "number",
                            "description": "Failure threshold for livenessProbe",
                            "default": 6
                        },
                        "successThreshold": {
                            "type": "number",
                            "description": "Success threshold for livenessProbe",
                            "default": 1
                        }
                    }
                },
                "readinessProbe": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable readinessProbe on Mastodon web containers",
                            "default": true
                        },
                        "initialDelaySeconds": {
                            "type": "number",
                            "description": "Initial delay seconds for readinessProbe",
                            "default": 10
                        },
                        "periodSeconds": {
                            "type": "number",
                            "description": "Period seconds for readinessProbe",
                            "default": 10
                        },
                        "timeoutSeconds": {
                            "type": "number",
                            "description": "Timeout seconds for readinessProbe",
                            "default": 5
                        },
                        "failureThreshold": {
                            "type": "number",
                            "description": "Failure threshold for readinessProbe",
                            "default": 6
                        },
                        "successThreshold": {
                            "type": "number",
                            "description": "Success threshold for readinessProbe",
                            "default": 1
                        }
                    }
                },
                "startupProbe": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable startupProbe on Mastodon web containers",
                            "default": false
                        },
                        "initialDelaySeconds": {
                            "type": "number",
                            "description": "Initial delay seconds for startupProbe",
                            "default": 10
                        },
                        "periodSeconds": {
                            "type": "number",
                            "description": "Period seconds for startupProbe",
                            "default": 10
                        },
                        "timeoutSeconds": {
                            "type": "number",
                            "description": "Timeout seconds for startupProbe",
                            "default": 5
                        },
                        "failureThreshold": {
                            "type": "number",
                            "description": "Failure threshold for startupProbe",
                            "default": 6
                        },
                        "successThreshold": {
                            "type": "number",
                            "description": "Success threshold for startupProbe",
                            "default": 1
                        }
                    }
                },
                "customLivenessProbe": {
                    "type": "object",
                    "description": "Custom livenessProbe that overrides the default one",
                    "default": {}
                },
                "customReadinessProbe": {
                    "type": "object",
                    "description": "Custom readinessProbe that overrides the default one",
                    "default": {}
                },
                "customStartupProbe": {
                    "type": "object",
                    "description": "Custom startupProbe that overrides the default one",
                    "default": {}
                },
                "resources": {
                    "type": "object",
                    "properties": {
                        "limits": {
                            "type": "object",
                            "description": "The resources limits for the Mastodon web containers",
                            "default": {}
                        },
                        "requests": {
                            "type": "object",
                            "description": "The requested resources for the Mastodon web containers",
                            "default": {}
                        }
                    }
                },
                "podSecurityContext": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enabled Mastodon web pods' Security Context",
                            "default": true
                        },
                        "fsGroup": {
                            "type": "number",
                            "description": "Set Mastodon web pod's Security Context fsGroup",
                            "default": 1001
                        },
                        "seccompProfile": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string",
                                    "description": "Set container's Security Context seccomp profile",
                                    "default": "RuntimeDefault"
                                }
                            }
                        }
                    }
                },
                "containerSecurityContext": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enabled Mastodon web containers' Security Context",
                            "default": true
                        },
                        "runAsUser": {
                            "type": "number",
                            "description": "Set Mastodon web containers' Security Context runAsUser",
                            "default": 1001
                        },
                        "runAsNonRoot": {
                            "type": "boolean",
                            "description": "Set Mastodon web containers' Security Context runAsNonRoot",
                            "default": true
                        },
                        "readOnlyRootFilesystem": {
                            "type": "boolean",
                            "description": "Set Mastodon web containers' Security Context runAsNonRoot",
                            "default": false
                        },
                        "allowPrivilegeEscalation": {
                            "type": "boolean",
                            "description": "Set container's privilege escalation",
                            "default": false
                        },
                        "capabilities": {
                            "type": "object",
                            "properties": {
                                "drop": {
                                    "type": "array",
                                    "description": "Set container's Security Context runAsNonRoot",
                                    "default": [
                                        "ALL"
                                    ],
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "command": {
                    "type": "array",
                    "description": "Override default container command (useful when using custom images)",
                    "default": [],
                    "items": {}
                },
                "args": {
                    "type": "array",
                    "description": "Override default container args (useful when using custom images)",
                    "default": [],
                    "items": {}
                },
                "hostAliases": {
                    "type": "array",
                    "description": "Mastodon web pods host aliases",
                    "default": [],
                    "items": {}
                },
                "podLabels": {
                    "type": "object",
                    "description": "Extra labels for Mastodon web pods",
                    "default": {}
                },
                "podAnnotations": {
                    "type": "object",
                    "description": "Annotations for Mastodon web pods",
                    "default": {}
                },
                "podAffinityPreset": {
                    "type": "string",
                    "description": "Pod affinity preset. Ignored if `web.affinity` is set. Allowed values: `soft` or `hard`",
                    "default": ""
                },
                "podAntiAffinityPreset": {
                    "type": "string",
                    "description": "Pod anti-affinity preset. Ignored if `web.affinity` is set. Allowed values: `soft` or `hard`",
                    "default": "soft"
                },
                "nodeAffinityPreset": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "Node affinity preset type. Ignored if `web.affinity` is set. Allowed values: `soft` or `hard`",
                            "default": ""
                        },
                        "key": {
                            "type": "string",
                            "description": "Node label key to match. Ignored if `web.affinity` is set",
                            "default": ""
                        },
                        "values": {
                            "type": "array",
                            "description": "Node label values to match. Ignored if `web.affinity` is set",
                            "default": [],
                            "items": {}
                        }
                    }
                },
                "affinity": {
                    "type": "object",
                    "description": "Affinity for Mastodon web pods assignment",
                    "default": {}
                },
                "nodeSelector": {
                    "type": "object",
                    "description": "Node labels for Mastodon web pods assignment",
                    "default": {}
                },
                "tolerations": {
                    "type": "array",
                    "description": "Tolerations for Mastodon web pods assignment",
                    "default": [],
                    "items": {}
                },
                "updateStrategy": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "Mastodon web statefulset strategy type",
                            "default": "RollingUpdate"
                        }
                    }
                },
                "priorityClassName": {
                    "type": "string",
                    "description": "Mastodon web pods' priorityClassName",
                    "default": ""
                },
                "topologySpreadConstraints": {
                    "type": "array",
                    "description": "Topology Spread Constraints for pod assignment spread across your cluster among failure-domains. Evaluated as a template",
                    "default": [],
                    "items": {}
                },
                "schedulerName": {
                    "type": "string",
                    "description": "Name of the k8s scheduler (other than default) for Mastodon web pods",
                    "default": ""
                },
                "terminationGracePeriodSeconds": {
                    "type": "string",
                    "description": "Seconds Redmine pod needs to terminate gracefully",
                    "default": ""
                },
                "lifecycleHooks": {
                    "type": "object",
                    "description": "for the Mastodon web container(s) to automate configuration before or after startup",
                    "default": {}
                },
                "extraEnvVars": {
                    "type": "array",
                    "description": "Array with extra environment variables to add to Mastodon web nodes",
                    "default": [],
                    "items": {}
                },
                "extraEnvVarsCM": {
                    "type": "string",
                    "description": "Name of existing ConfigMap containing extra env vars for Mastodon web nodes",
                    "default": ""
                },
                "extraEnvVarsSecret": {
                    "type": "string",
                    "description": "Name of existing Secret containing extra env vars for Mastodon web nodes",
                    "default": ""
                },
                "extraVolumes": {
                    "type": "array",
                    "description": "Optionally specify extra list of additional volumes for the Mastodon web pod(s)",
                    "default": [],
                    "items": {}
                },
                "extraVolumeMounts": {
                    "type": "array",
                    "description": "Optionally specify extra list of additional volumeMounts for the Mastodon web container(s)",
                    "default": [],
                    "items": {}
                },
                "sidecars": {
                    "type": "array",
                    "description": "Add additional sidecar containers to the Mastodon web pod(s)",
                    "default": [],
                    "items": {}
                },
                "initContainers": {
                    "type": "array",
                    "description": "Add additional init containers to the Mastodon web pod(s)",
                    "default": [],
                    "items": {}
                },
                "service": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "Mastodon web service type",
                            "default": "ClusterIP"
                        },
                        "ports": {
                            "type": "object",
                            "properties": {
                                "http": {
                                    "type": "number",
                                    "description": "Mastodon web service HTTP port",
                                    "default": 80
                                }
                            }
                        },
                        "nodePorts": {
                            "type": "object",
                            "properties": {
                                "http": {
                                    "type": "string",
                                    "description": "Node port for HTTP",
                                    "default": ""
                                }
                            }
                        },
                        "clusterIP": {
                            "type": "string",
                            "description": "Mastodon web service Cluster IP",
                            "default": ""
                        },
                        "loadBalancerIP": {
                            "type": "string",
                            "description": "Mastodon web service Load Balancer IP",
                            "default": ""
                        },
                        "loadBalancerSourceRanges": {
                            "type": "array",
                            "description": "Mastodon web service Load Balancer sources",
                            "default": [],
                            "items": {}
                        },
                        "externalTrafficPolicy": {
                            "type": "string",
                            "description": "Mastodon web service external traffic policy",
                            "default": "Cluster"
                        },
                        "annotations": {
                            "type": "object",
                            "description": "Additional custom annotations for Mastodon web service",
                            "default": {}
                        },
                        "extraPorts": {
                            "type": "array",
                            "description": "Extra ports to expose in Mastodon web service (normally used with the `sidecars` value)",
                            "default": [],
                            "items": {}
                        },
                        "sessionAffinity": {
                            "type": "string",
                            "description": "Control where web requests go, to the same pod or round-robin",
                            "default": "None"
                        },
                        "sessionAffinityConfig": {
                            "type": "object",
                            "description": "Additional settings for the sessionAffinity",
                            "default": {}
                        }
                    }
                }
            }
        },
        "sidekiq": {
            "type": "object",
            "properties": {
                "replicaCount": {
                    "type": "number",
                    "description": "Number of Mastodon sidekiq replicas to deploy",
                    "default": 1
                },
                "livenessProbe": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable livenessProbe on Mastodon sidekiq containers",
                            "default": true
                        },
                        "initialDelaySeconds": {
                            "type": "number",
                            "description": "Initial delay seconds for livenessProbe",
                            "default": 10
                        },
                        "periodSeconds": {
                            "type": "number",
                            "description": "Period seconds for livenessProbe",
                            "default": 10
                        },
                        "timeoutSeconds": {
                            "type": "number",
                            "description": "Timeout seconds for livenessProbe",
                            "default": 5
                        },
                        "failureThreshold": {
                            "type": "number",
                            "description": "Failure threshold for livenessProbe",
                            "default": 6
                        },
                        "successThreshold": {
                            "type": "number",
                            "description": "Success threshold for livenessProbe",
                            "default": 1
                        }
                    }
                },
                "readinessProbe": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable readinessProbe on Mastodon sidekiq containers",
                            "default": true
                        },
                        "initialDelaySeconds": {
                            "type": "number",
                            "description": "Initial delay seconds for readinessProbe",
                            "default": 10
                        },
                        "periodSeconds": {
                            "type": "number",
                            "description": "Period seconds for readinessProbe",
                            "default": 10
                        },
                        "timeoutSeconds": {
                            "type": "number",
                            "description": "Timeout seconds for readinessProbe",
                            "default": 5
                        },
                        "failureThreshold": {
                            "type": "number",
                            "description": "Failure threshold for readinessProbe",
                            "default": 6
                        },
                        "successThreshold": {
                            "type": "number",
                            "description": "Success threshold for readinessProbe",
                            "default": 1
                        }
                    }
                },
                "startupProbe": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable startupProbe on Mastodon sidekiq containers",
                            "default": false
                        },
                        "initialDelaySeconds": {
                            "type": "number",
                            "description": "Initial delay seconds for startupProbe",
                            "default": 10
                        },
                        "periodSeconds": {
                            "type": "number",
                            "description": "Period seconds for startupProbe",
                            "default": 10
                        },
                        "timeoutSeconds": {
                            "type": "number",
                            "description": "Timeout seconds for startupProbe",
                            "default": 5
                        },
                        "failureThreshold": {
                            "type": "number",
                            "description": "Failure threshold for startupProbe",
                            "default": 6
                        },
                        "successThreshold": {
                            "type": "number",
                            "description": "Success threshold for startupProbe",
                            "default": 1
                        }
                    }
                },
                "customLivenessProbe": {
                    "type": "object",
                    "description": "Custom livenessProbe that overrides the default one",
                    "default": {}
                },
                "customReadinessProbe": {
                    "type": "object",
                    "description": "Custom readinessProbe that overrides the default one",
                    "default": {}
                },
                "customStartupProbe": {
                    "type": "object",
                    "description": "Custom startupProbe that overrides the default one",
                    "default": {}
                },
                "resources": {
                    "type": "object",
                    "properties": {
                        "limits": {
                            "type": "object",
                            "description": "The resources limits for the Mastodon sidekiq containers",
                            "default": {}
                        },
                        "requests": {
                            "type": "object",
                            "description": "The requested resources for the Mastodon sidekiq containers",
                            "default": {}
                        }
                    }
                },
                "podSecurityContext": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enabled Mastodon sidekiq pods' Security Context",
                            "default": true
                        },
                        "fsGroup": {
                            "type": "number",
                            "description": "Set Mastodon sidekiq pod's Security Context fsGroup",
                            "default": 1001
                        },
                        "seccompProfile": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string",
                                    "description": "Set container's Security Context seccomp profile",
                                    "default": "RuntimeDefault"
                                }
                            }
                        }
                    }
                },
                "containerSecurityContext": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enabled Mastodon sidekiq containers' Security Context",
                            "default": true
                        },
                        "runAsUser": {
                            "type": "number",
                            "description": "Set Mastodon sidekiq containers' Security Context runAsUser",
                            "default": 1001
                        },
                        "runAsNonRoot": {
                            "type": "boolean",
                            "description": "Set Mastodon sidekiq containers' Security Context runAsNonRoot",
                            "default": true
                        },
                        "readOnlyRootFilesystem": {
                            "type": "boolean",
                            "description": "Set Mastodon sidekiq containers' Security Context runAsNonRoot",
                            "default": false
                        },
                        "allowPrivilegeEscalation": {
                            "type": "boolean",
                            "description": "Set container's privilege escalation",
                            "default": false
                        },
                        "capabilities": {
                            "type": "object",
                            "properties": {
                                "drop": {
                                    "type": "array",
                                    "description": "Set container's Security Context runAsNonRoot",
                                    "default": [
                                        "ALL"
                                    ],
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "command": {
                    "type": "array",
                    "description": "Override default container command (useful when using custom images)",
                    "default": [],
                    "items": {}
                },
                "args": {
                    "type": "array",
                    "description": "Override default container args (useful when using custom images)",
                    "default": [],
                    "items": {}
                },
                "hostAliases": {
                    "type": "array",
                    "description": "Mastodon sidekiq pods host aliases",
                    "default": [],
                    "items": {}
                },
                "podLabels": {
                    "type": "object",
                    "description": "Extra labels for Mastodon sidekiq pods",
                    "default": {}
                },
                "podAnnotations": {
                    "type": "object",
                    "description": "Annotations for Mastodon sidekiq pods",
                    "default": {}
                },
                "podAffinityPreset": {
                    "type": "string",
                    "description": "Pod affinity preset. Ignored if `sidekiq.affinity` is set. Allowed values: `soft` or `hard`",
                    "default": ""
                },
                "podAntiAffinityPreset": {
                    "type": "string",
                    "description": "Pod anti-affinity preset. Ignored if `sidekiq.affinity` is set. Allowed values: `soft` or `hard`",
                    "default": "soft"
                },
                "nodeAffinityPreset": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "Node affinity preset type. Ignored if `sidekiq.affinity` is set. Allowed values: `soft` or `hard`",
                            "default": ""
                        },
                        "key": {
                            "type": "string",
                            "description": "Node label key to match. Ignored if `sidekiq.affinity` is set",
                            "default": ""
                        },
                        "values": {
                            "type": "array",
                            "description": "Node label values to match. Ignored if `sidekiq.affinity` is set",
                            "default": [],
                            "items": {}
                        }
                    }
                },
                "affinity": {
                    "type": "object",
                    "description": "Affinity for Mastodon sidekiq pods assignment",
                    "default": {}
                },
                "nodeSelector": {
                    "type": "object",
                    "description": "Node labels for Mastodon sidekiq pods assignment",
                    "default": {}
                },
                "tolerations": {
                    "type": "array",
                    "description": "Tolerations for Mastodon sidekiq pods assignment",
                    "default": [],
                    "items": {}
                },
                "updateStrategy": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "Mastodon sidekiq statefulset strategy type",
                            "default": "RollingUpdate"
                        }
                    }
                },
                "priorityClassName": {
                    "type": "string",
                    "description": "Mastodon sidekiq pods' priorityClassName",
                    "default": ""
                },
                "topologySpreadConstraints": {
                    "type": "array",
                    "description": "Topology Spread Constraints for pod assignment spread across your cluster among failure-domains. Evaluated as a template",
                    "default": [],
                    "items": {}
                },
                "schedulerName": {
                    "type": "string",
                    "description": "Name of the k8s scheduler (other than default) for Mastodon sidekiq pods",
                    "default": ""
                },
                "terminationGracePeriodSeconds": {
                    "type": "string",
                    "description": "Seconds Redmine pod needs to terminate gracefully",
                    "default": ""
                },
                "lifecycleHooks": {
                    "type": "object",
                    "description": "for the Mastodon sidekiq container(s) to automate configuration before or after startup",
                    "default": {}
                },
                "extraEnvVars": {
                    "type": "array",
                    "description": "Array with extra environment variables to add to Mastodon sidekiq nodes",
                    "default": [],
                    "items": {}
                },
                "extraEnvVarsCM": {
                    "type": "string",
                    "description": "Name of existing ConfigMap containing extra env vars for Mastodon sidekiq nodes",
                    "default": ""
                },
                "extraEnvVarsSecret": {
                    "type": "string",
                    "description": "Name of existing Secret containing extra env vars for Mastodon sidekiq nodes",
                    "default": ""
                },
                "extraVolumes": {
                    "type": "array",
                    "description": "Optionally specify extra list of additional volumes for the Mastodon sidekiq pod(s)",
                    "default": [],
                    "items": {}
                },
                "extraVolumeMounts": {
                    "type": "array",
                    "description": "Optionally specify extra list of additional volumeMounts for the Mastodon sidekiq container(s)",
                    "default": [],
                    "items": {}
                },
                "sidecars": {
                    "type": "array",
                    "description": "Add additional sidecar containers to the Mastodon sidekiq pod(s)",
                    "default": [],
                    "items": {}
                },
                "initContainers": {
                    "type": "array",
                    "description": "Add additional init containers to the Mastodon sidekiq pod(s)",
                    "default": [],
                    "items": {}
                }
            }
        },
        "streaming": {
            "type": "object",
            "properties": {
                "replicaCount": {
                    "type": "number",
                    "description": "Number of Mastodon streaming replicas to deploy",
                    "default": 1
                },
                "containerPorts": {
                    "type": "object",
                    "properties": {
                        "http": {
                            "type": "number",
                            "description": "Mastodon streaming HTTP container port",
                            "default": 8080
                        }
                    }
                },
                "livenessProbe": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable livenessProbe on Mastodon streaming containers",
                            "default": true
                        },
                        "initialDelaySeconds": {
                            "type": "number",
                            "description": "Initial delay seconds for livenessProbe",
                            "default": 10
                        },
                        "periodSeconds": {
                            "type": "number",
                            "description": "Period seconds for livenessProbe",
                            "default": 10
                        },
                        "timeoutSeconds": {
                            "type": "number",
                            "description": "Timeout seconds for livenessProbe",
                            "default": 5
                        },
                        "failureThreshold": {
                            "type": "number",
                            "description": "Failure threshold for livenessProbe",
                            "default": 6
                        },
                        "successThreshold": {
                            "type": "number",
                            "description": "Success threshold for livenessProbe",
                            "default": 1
                        }
                    }
                },
                "readinessProbe": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable readinessProbe on Mastodon streaming containers",
                            "default": true
                        },
                        "initialDelaySeconds": {
                            "type": "number",
                            "description": "Initial delay seconds for readinessProbe",
                            "default": 10
                        },
                        "periodSeconds": {
                            "type": "number",
                            "description": "Period seconds for readinessProbe",
                            "default": 10
                        },
                        "timeoutSeconds": {
                            "type": "number",
                            "description": "Timeout seconds for readinessProbe",
                            "default": 5
                        },
                        "failureThreshold": {
                            "type": "number",
                            "description": "Failure threshold for readinessProbe",
                            "default": 6
                        },
                        "successThreshold": {
                            "type": "number",
                            "description": "Success threshold for readinessProbe",
                            "default": 1
                        }
                    }
                },
                "startupProbe": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable startupProbe on Mastodon streaming containers",
                            "default": false
                        },
                        "initialDelaySeconds": {
                            "type": "number",
                            "description": "Initial delay seconds for startupProbe",
                            "default": 10
                        },
                        "periodSeconds": {
                            "type": "number",
                            "description": "Period seconds for startupProbe",
                            "default": 10
                        },
                        "timeoutSeconds": {
                            "type": "number",
                            "description": "Timeout seconds for startupProbe",
                            "default": 5
                        },
                        "failureThreshold": {
                            "type": "number",
                            "description": "Failure threshold for startupProbe",
                            "default": 6
                        },
                        "successThreshold": {
                            "type": "number",
                            "description": "Success threshold for startupProbe",
                            "default": 1
                        }
                    }
                },
                "customLivenessProbe": {
                    "type": "object",
                    "description": "Custom livenessProbe that overrides the default one",
                    "default": {}
                },
                "customReadinessProbe": {
                    "type": "object",
                    "description": "Custom readinessProbe that overrides the default one",
                    "default": {}
                },
                "customStartupProbe": {
                    "type": "object",
                    "description": "Custom startupProbe that overrides the default one",
                    "default": {}
                },
                "resources": {
                    "type": "object",
                    "properties": {
                        "limits": {
                            "type": "object",
                            "description": "The resources limits for the Mastodon streaming containers",
                            "default": {}
                        },
                        "requests": {
                            "type": "object",
                            "description": "The requested resources for the Mastodon streaming containers",
                            "default": {}
                        }
                    }
                },
                "podSecurityContext": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enabled Mastodon streaming pods' Security Context",
                            "default": true
                        },
                        "fsGroup": {
                            "type": "number",
                            "description": "Set Mastodon streaming pod's Security Context fsGroup",
                            "default": 1001
                        },
                        "seccompProfile": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string",
                                    "description": "Set container's Security Context seccomp profile",
                                    "default": "RuntimeDefault"
                                }
                            }
                        }
                    }
                },
                "containerSecurityContext": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enabled Mastodon streaming containers' Security Context",
                            "default": true
                        },
                        "runAsUser": {
                            "type": "number",
                            "description": "Set Mastodon streaming containers' Security Context runAsUser",
                            "default": 1001
                        },
                        "runAsNonRoot": {
                            "type": "boolean",
                            "description": "Set Mastodon streaming containers' Security Context runAsNonRoot",
                            "default": true
                        },
                        "readOnlyRootFilesystem": {
                            "type": "boolean",
                            "description": "Set Mastodon streaming containers' Security Context runAsNonRoot",
                            "default": false
                        },
                        "allowPrivilegeEscalation": {
                            "type": "boolean",
                            "description": "Set container's privilege escalation",
                            "default": false
                        },
                        "capabilities": {
                            "type": "object",
                            "properties": {
                                "drop": {
                                    "type": "array",
                                    "description": "Set container's Security Context runAsNonRoot",
                                    "default": [
                                        "ALL"
                                    ],
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "command": {
                    "type": "array",
                    "description": "Override default container command (useful when using custom images)",
                    "default": [],
                    "items": {}
                },
                "args": {
                    "type": "array",
                    "description": "Override default container args (useful when using custom images)",
                    "default": [],
                    "items": {}
                },
                "hostAliases": {
                    "type": "array",
                    "description": "Mastodon streaming pods host aliases",
                    "default": [],
                    "items": {}
                },
                "podLabels": {
                    "type": "object",
                    "description": "Extra labels for Mastodon streaming pods",
                    "default": {}
                },
                "podAnnotations": {
                    "type": "object",
                    "description": "Annotations for Mastodon streaming pods",
                    "default": {}
                },
                "podAffinityPreset": {
                    "type": "string",
                    "description": "Pod affinity preset. Ignored if `streaming.affinity` is set. Allowed values: `soft` or `hard`",
                    "default": ""
                },
                "podAntiAffinityPreset": {
                    "type": "string",
                    "description": "Pod anti-affinity preset. Ignored if `streaming.affinity` is set. Allowed values: `soft` or `hard`",
                    "default": "soft"
                },
                "nodeAffinityPreset": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "Node affinity preset type. Ignored if `streaming.affinity` is set. Allowed values: `soft` or `hard`",
                            "default": ""
                        },
                        "key": {
                            "type": "string",
                            "description": "Node label key to match. Ignored if `streaming.affinity` is set",
                            "default": ""
                        },
                        "values": {
                            "type": "array",
                            "description": "Node label values to match. Ignored if `streaming.affinity` is set",
                            "default": [],
                            "items": {}
                        }
                    }
                },
                "affinity": {
                    "type": "object",
                    "description": "Affinity for Mastodon streaming pods assignment",
                    "default": {}
                },
                "nodeSelector": {
                    "type": "object",
                    "description": "Node labels for Mastodon streaming pods assignment",
                    "default": {}
                },
                "tolerations": {
                    "type": "array",
                    "description": "Tolerations for Mastodon streaming pods assignment",
                    "default": [],
                    "items": {}
                },
                "updateStrategy": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "Mastodon streaming statefulset strategy type",
                            "default": "RollingUpdate"
                        }
                    }
                },
                "priorityClassName": {
                    "type": "string",
                    "description": "Mastodon streaming pods' priorityClassName",
                    "default": ""
                },
                "topologySpreadConstraints": {
                    "type": "array",
                    "description": "Topology Spread Constraints for pod assignment spread across your cluster among failure-domains. Evaluated as a template",
                    "default": [],
                    "items": {}
                },
                "schedulerName": {
                    "type": "string",
                    "description": "Name of the k8s scheduler (other than default) for Mastodon streaming pods",
                    "default": ""
                },
                "terminationGracePeriodSeconds": {
                    "type": "string",
                    "description": "Seconds Redmine pod needs to terminate gracefully",
                    "default": ""
                },
                "lifecycleHooks": {
                    "type": "object",
                    "description": "for the Mastodon streaming container(s) to automate configuration before or after startup",
                    "default": {}
                },
                "extraEnvVars": {
                    "type": "array",
                    "description": "Array with extra environment variables to add to Mastodon streaming nodes",
                    "default": [],
                    "items": {}
                },
                "extraEnvVarsCM": {
                    "type": "string",
                    "description": "Name of existing ConfigMap containing extra env vars for Mastodon streaming nodes",
                    "default": ""
                },
                "extraEnvVarsSecret": {
                    "type": "string",
                    "description": "Name of existing Secret containing extra env vars for Mastodon streaming nodes",
                    "default": ""
                },
                "extraVolumes": {
                    "type": "array",
                    "description": "Optionally specify extra list of additional volumes for the Mastodon streaming pod(s)",
                    "default": [],
                    "items": {}
                },
                "extraVolumeMounts": {
                    "type": "array",
                    "description": "Optionally specify extra list of additional volumeMounts for the Mastodon streaming container(s)",
                    "default": [],
                    "items": {}
                },
                "sidecars": {
                    "type": "array",
                    "description": "Add additional sidecar containers to the Mastodon streaming pod(s)",
                    "default": [],
                    "items": {}
                },
                "initContainers": {
                    "type": "array",
                    "description": "Add additional init containers to the Mastodon streaming pod(s)",
                    "default": [],
                    "items": {}
                },
                "service": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "Mastodon streaming service type",
                            "default": "ClusterIP"
                        },
                        "ports": {
                            "type": "object",
                            "properties": {
                                "http": {
                                    "type": "number",
                                    "description": "Mastodon streaming service HTTP port",
                                    "default": 80
                                }
                            }
                        },
                        "nodePorts": {
                            "type": "object",
                            "properties": {
                                "http": {
                                    "type": "string",
                                    "description": "Node port for HTTP",
                                    "default": ""
                                }
                            }
                        },
                        "clusterIP": {
                            "type": "string",
                            "description": "Mastodon streaming service Cluster IP",
                            "default": ""
                        },
                        "loadBalancerIP": {
                            "type": "string",
                            "description": "Mastodon streaming service Load Balancer IP",
                            "default": ""
                        },
                        "loadBalancerSourceRanges": {
                            "type": "array",
                            "description": "Mastodon streaming service Load Balancer sources",
                            "default": [],
                            "items": {}
                        },
                        "externalTrafficPolicy": {
                            "type": "string",
                            "description": "Mastodon streaming service external traffic policy",
                            "default": "Cluster"
                        },
                        "annotations": {
                            "type": "object",
                            "description": "Additional custom annotations for Mastodon streaming service",
                            "default": {}
                        },
                        "extraPorts": {
                            "type": "array",
                            "description": "Extra ports to expose in Mastodon streaming service (normally used with the `sidecars` value)",
                            "default": [],
                            "items": {}
                        },
                        "sessionAffinity": {
                            "type": "string",
                            "description": "Control where streaming requests go, to the same pod or round-robin",
                            "default": "None"
                        },
                        "sessionAffinityConfig": {
                            "type": "object",
                            "description": "Additional settings for the sessionAffinity",
                            "default": {}
                        }
                    }
                }
            }
        },
        "tootctlMediaManagement": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable Cronjob to manage all media caches",
                    "default": false
                },
                "removeAttachments": {
                    "type": "boolean",
                    "description": "Enable removing attachements",
                    "default": true
                },
                "removeAttachmentsDays": {
                    "type": "number",
                    "description": "Number of days old media attachments must be for removal",
                    "default": 30
                },
                "removeCustomEmoji": {
                    "type": "boolean",
                    "description": "Enable removal of cached remote emoji files",
                    "default": false
                },
                "removePreviewCards": {
                    "type": "boolean",
                    "description": "Enable removal of cached preview cards",
                    "default": false
                },
                "removePreviewCardsDays": {
                    "type": "number",
                    "description": "Number of days old preview cards must be for removal",
                    "default": 30
                },
                "removeAvatars": {
                    "type": "boolean",
                    "description": "Enable removal of cached remote avatar images",
                    "default": false
                },
                "removeAvatarsDays": {
                    "type": "number",
                    "description": "Number of days old avatar images must be for removal",
                    "default": 30
                },
                "removeHeaders": {
                    "type": "boolean",
                    "description": "Enable removal of cached profile header images",
                    "default": false
                },
                "removeHeadersDays": {
                    "type": "number",
                    "description": "Number of days old header images must be for removal",
                    "default": 30
                },
                "removeOrphans": {
                    "type": "boolean",
                    "description": "Enable removal of cached orphan files",
                    "default": false
                },
                "includeFollows": {
                    "type": "boolean",
                    "description": "Enable removal of cached avatar and header when local users are following the accounts",
                    "default": false
                },
                "cronSchedule": {
                    "type": "string",
                    "description": "Cron job schedule to run tootctl media commands",
                    "default": "14 3 * * *"
                },
                "failedJobsHistoryLimit": {
                    "type": "number",
                    "description": "Number of failed jobs to keep",
                    "default": 3
                },
                "successfulJobsHistoryLimit": {
                    "type": "number",
                    "description": "Number of successful jobs to keep",
                    "default": 3
                },
                "concurrencyPolicy": {
                    "type": "string",
                    "description": "Concurrency Policy.  Should be Allow, Forbid or Replace",
                    "default": "Allow"
                }
            }
        },
        "initJob": {
            "type": "object",
            "properties": {
                "precompileAssets": {
                    "type": "boolean",
                    "description": "Execute rake assets:precompile as part of the job",
                    "default": true
                },
                "migrateDB": {
                    "type": "boolean",
                    "description": "Execute rake db:migrate as part of the job",
                    "default": true
                },
                "migrateElasticsearch": {
                    "type": "boolean",
                    "description": "Execute rake chewy:upgrade as part of the job",
                    "default": true
                },
                "createAdmin": {
                    "type": "boolean",
                    "description": "Create admin user as part of the job",
                    "default": true
                },
                "backoffLimit": {
                    "type": "number",
                    "description": "set backoff limit of the job",
                    "default": 10
                },
                "extraVolumes": {
                    "type": "array",
                    "description": "Optionally specify extra list of additional volumes for the Mastodon init job",
                    "default": [],
                    "items": {}
                },
                "containerSecurityContext": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enabled Mastodon init job containers' Security Context",
                            "default": true
                        },
                        "runAsUser": {
                            "type": "number",
                            "description": "Set Mastodon init job containers' Security Context runAsUser",
                            "default": 1001
                        },
                        "runAsNonRoot": {
                            "type": "boolean",
                            "description": "Set Mastodon init job containers' Security Context runAsNonRoot",
                            "default": true
                        },
                        "readOnlyRootFilesystem": {
                            "type": "boolean",
                            "description": "Set Mastodon init job containers' Security Context runAsNonRoot",
                            "default": false
                        },
                        "allowPrivilegeEscalation": {
                            "type": "boolean",
                            "description": "Set container's privilege escalation",
                            "default": false
                        },
                        "capabilities": {
                            "type": "object",
                            "properties": {
                                "drop": {
                                    "type": "array",
                                    "description": "Set container's Security Context runAsNonRoot",
                                    "default": [
                                        "ALL"
                                    ],
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "podSecurityContext": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enabled Mastodon init job pods' Security Context",
                            "default": true
                        },
                        "fsGroup": {
                            "type": "number",
                            "description": "Set Mastodon init job pod's Security Context fsGroup",
                            "default": 1001
                        },
                        "seccompProfile": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string",
                                    "description": "Set container's Security Context seccomp profile",
                                    "default": "RuntimeDefault"
                                }
                            }
                        }
                    }
                },
                "extraEnvVars": {
                    "type": "array",
                    "description": "Array containing extra env vars to configure the Mastodon init job",
                    "default": [],
                    "items": {}
                },
                "extraEnvVarsCM": {
                    "type": "string",
                    "description": "ConfigMap containing extra env vars to configure the Mastodon init job",
                    "default": ""
                },
                "extraEnvVarsSecret": {
                    "type": "string",
                    "description": "Secret containing extra env vars to configure the Mastodon init job (in case of sensitive data)",
                    "default": ""
                },
                "extraVolumeMounts": {
                    "type": "array",
                    "description": "Array of extra volume mounts to be added to the Mastodon Container (evaluated as template). Normally used with `extraVolumes`.",
                    "default": [],
                    "items": {}
                },
                "resources": {
                    "type": "object",
                    "properties": {
                        "limits": {
                            "type": "object",
                            "description": "The resources limits for the container",
                            "default": {}
                        },
                        "requests": {
                            "type": "object",
                            "description": "The requested resources for the container",
                            "default": {}
                        }
                    }
                },
                "hostAliases": {
                    "type": "array",
                    "description": "Add deployment host aliases",
                    "default": [],
                    "items": {}
                },
                "annotations": {
                    "type": "object",
                    "properties": {
                        "helm": {
                            "type": "object",
                            "properties": {
                                "sh/hook": {
                                    "type": "string",
                                    "description": "",
                                    "default": "post-install, pre-upgrade"
                                },
                                "sh/hook-delete-policy": {
                                    "type": "string",
                                    "description": "",
                                    "default": "before-hook-creation,hook-succeeded"
                                },
                                "sh/hook-weight": {
                                    "type": "string",
                                    "description": "",
                                    "default": "10"
                                }
                            }
                        }
                    }
                },
                "podLabels": {
                    "type": "object",
                    "description": "Additional pod labels",
                    "default": {}
                },
                "podAnnotations": {
                    "type": "object",
                    "description": "Additional pod annotations",
                    "default": {}
                }
            }
        },
        "persistence": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable persistence using Persistent Volume Claims",
                    "default": false
                },
                "mountPath": {
                    "type": "string",
                    "description": "Path to mount the volume at.",
                    "default": "/bitnami/mastodon"
                },
                "subPath": {
                    "type": "string",
                    "description": "The subdirectory of the volume to mount to, useful in dev environments and one PV for multiple services",
                    "default": ""
                },
                "storageClass": {
                    "type": "string",
                    "description": "Storage class of backing PVC",
                    "default": ""
                },
                "annotations": {
                    "type": "object",
                    "description": "Persistent Volume Claim annotations",
                    "default": {}
                },
                "accessModes": {
                    "type": "array",
                    "description": "Persistent Volume Access Modes",
                    "default": [
                        "ReadWriteOnce"
                    ],
                    "items": {
                        "type": "string"
                    }
                },
                "size": {
                    "type": "string",
                    "description": "Size of data volume",
                    "default": "8Gi"
                },
                "existingClaim": {
                    "type": "string",
                    "description": "The name of an existing PVC to use for persistence",
                    "default": ""
                },
                "selector": {
                    "type": "object",
                    "description": "Selector to match an existing Persistent Volume for WordPress data PVC",
                    "default": {}
                },
                "dataSource": {
                    "type": "object",
                    "description": "Custom PVC data source",
                    "default": {}
                }
            }
        },
        "volumePermissions": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable init container that changes the owner/group of the PV mount point to `runAsUser:fsGroup`",
                    "default": false
                },
                "image": {
                    "type": "object",
                    "properties": {
                        "registry": {
                            "type": "string",
                            "description": "OS Shell + Utility image registry",
                            "default": "docker.io"
                        },
                        "repository": {
                            "type": "string",
                            "description": "OS Shell + Utility image repository",
                            "default": "bitnami/os-shell"
                        },
                        "tag": {
                            "type": "string",
                            "description": "OS Shell + Utility image tag (immutable tags are recommended)",
                            "default": "11-debian-11-r57"
                        },
                        "pullPolicy": {
                            "type": "string",
                            "description": "OS Shell + Utility image pull policy",
                            "default": "IfNotPresent"
                        },
                        "pullSecrets": {
                            "type": "array",
                            "description": "OS Shell + Utility image pull secrets",
                            "default": [],
                            "items": {}
                        }
                    }
                },
                "resources": {
                    "type": "object",
                    "properties": {
                        "limits": {
                            "type": "object",
                            "description": "The resources limits for the init container",
                            "default": {}
                        },
                        "requests": {
                            "type": "object",
                            "description": "The requested resources for the init container",
                            "default": {}
                        }
                    }
                },
                "containerSecurityContext": {
                    "type": "object",
                    "properties": {
                        "runAsUser": {
                            "type": "number",
                            "description": "Set init container's Security Context runAsUser",
                            "default": 0
                        }
                    }
                }
            }
        },
        "serviceAccount": {
            "type": "object",
            "properties": {
                "create": {
                    "type": "boolean",
                    "description": "Specifies whether a ServiceAccount should be created",
                    "default": true
                },
                "name": {
                    "type": "string",
                    "description": "The name of the ServiceAccount to use.",
                    "default": ""
                },
                "annotations": {
                    "type": "object",
                    "description": "Additional Service Account annotations (evaluated as a template)",
                    "default": {}
                },
                "automountServiceAccountToken": {
                    "type": "boolean",
                    "description": "Automount service account token for the server service account",
                    "default": true
                }
            }
        },
        "externalDatabase": {
            "type": "object",
            "properties": {
                "host": {
                    "type": "string",
                    "description": "Database host",
                    "default": ""
                },
                "port": {
                    "type": "number",
                    "description": "Database port number",
                    "default": 5432
                },
                "user": {
                    "type": "string",
                    "description": "Non-root username for JupyterHub",
                    "default": "postgres"
                },
                "password": {
                    "type": "string",
                    "description": "Password for the non-root username for JupyterHub",
                    "default": ""
                },
                "database": {
                    "type": "string",
                    "description": "JupyterHub database name",
                    "default": "mastodon"
                },
                "existingSecret": {
                    "type": "string",
                    "description": "Name of an existing secret resource containing the database credentials",
                    "default": ""
                },
                "existingSecretPasswordKey": {
                    "type": "string",
                    "description": "Name of an existing secret key containing the database credentials",
                    "default": "db-password"
                }
            }
        },
        "externalRedis": {
            "type": "object",
            "properties": {
                "host": {
                    "type": "string",
                    "description": "Redis host",
                    "default": ""
                },
                "port": {
                    "type": "number",
                    "description": "Redis port number",
                    "default": 6379
                },
                "password": {
                    "type": "string",
                    "description": "Password for the Redis",
                    "default": ""
                },
                "existingSecret": {
                    "type": "string",
                    "description": "Name of an existing secret resource containing the Redis credentials",
                    "default": ""
                },
                "existingSecretPasswordKey": {
                    "type": "string",
                    "description": "Name of an existing secret key containing the Redis credentials",
                    "default": ""
                }
            }
        },
        "externalS3": {
            "type": "object",
            "properties": {
                "host": {
                    "type": "string",
                    "description": "External S3 host",
                    "default": ""
                },
                "port": {
                    "type": "number",
                    "description": "External S3 port number",
                    "default": 443
                },
                "accessKeyID": {
                    "type": "string",
                    "description": "External S3 access key ID",
                    "default": ""
                },
                "accessKeySecret": {
                    "type": "string",
                    "description": "External S3 access key secret",
                    "default": ""
                },
                "existingSecret": {
                    "type": "string",
                    "description": "Name of an existing secret resource containing the S3 credentials",
                    "default": ""
                },
                "existingSecretAccessKeyIDKey": {
                    "type": "string",
                    "description": "Name of an existing secret key containing the S3 access key ID",
                    "default": "root-user"
                },
                "existingSecretKeySecretKey": {
                    "type": "string",
                    "description": "Name of an existing secret key containing the S3 access key secret",
                    "default": "root-password"
                },
                "protocol": {
                    "type": "string",
                    "description": "External S3 protocol",
                    "default": "https"
                },
                "bucket": {
                    "type": "string",
                    "description": "External S3 bucket",
                    "default": "mastodon"
                },
                "region": {
                    "type": "string",
                    "description": "External S3 region",
                    "default": "us-east-1"
                }
            }
        },
        "externalElasticsearch": {
            "type": "object",
            "properties": {
                "host": {
                    "type": "string",
                    "description": "Host of the external elasticsearch server",
                    "default": ""
                },
                "port": {
                    "type": "string",
                    "description": "Port of the external elasticsearch server",
                    "default": ""
                },
                "password": {
                    "type": "string",
                    "description": "Password for the external elasticsearch server",
                    "default": ""
                },
                "existingSecret": {
                    "type": "string",
                    "description": "Name of an existing secret resource containing the elasticsearch credentials",
                    "default": ""
                },
                "existingSecretPasswordKey": {
                    "type": "string",
                    "description": "Name of an existing secret key containing the elasticsearch credentials",
                    "default": "elasticsearch-password"
                }
            }
        },
        "redis": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Deploy Redis subchart",
                    "default": true
                },
                "architecture": {
                    "type": "string",
                    "description": "Set Redis architecture",
                    "default": "standalone"
                },
                "existingSecret": {
                    "type": "string",
                    "description": "Name of a secret containing redis credentials",
                    "default": ""
                },
                "master": {
                    "type": "object",
                    "properties": {
                        "service": {
                            "type": "object",
                            "properties": {
                                "ports": {
                                    "type": "object",
                                    "properties": {
                                        "redis": {
                                            "type": "number",
                                            "description": "Redis port",
                                            "default": 6379
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "auth": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable Redis auth",
                            "default": true
                        },
                        "password": {
                            "type": "string",
                            "description": "Redis password",
                            "default": ""
                        },
                        "existingSecret": {
                            "type": "string",
                            "description": "Name of a secret containing the Redis password",
                            "default": ""
                        }
                    }
                }
            }
        },
        "postgresql": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Switch to enable or disable the PostgreSQL helm chart",
                    "default": true
                },
                "auth": {
                    "type": "object",
                    "properties": {
                        "username": {
                            "type": "string",
                            "description": "Name for a custom user to create",
                            "default": "bn_mastodon"
                        },
                        "password": {
                            "type": "string",
                            "description": "Password for the custom user to create",
                            "default": ""
                        },
                        "database": {
                            "type": "string",
                            "description": "Name for a custom database to create",
                            "default": "bitnami_mastodon"
                        },
                        "existingSecret": {
                            "type": "string",
                            "description": "Name of existing secret to use for PostgreSQL credentials",
                            "default": ""
                        }
                    }
                },
                "architecture": {
                    "type": "string",
                    "description": "PostgreSQL architecture (`standalone` or `replication`)",
                    "default": "standalone"
                },
                "primary": {
                    "type": "object",
                    "properties": {
                        "service": {
                            "type": "object",
                            "properties": {
                                "ports": {
                                    "type": "object",
                                    "properties": {
                                        "postgresql": {
                                            "type": "number",
                                            "description": "PostgreSQL service port",
                                            "default": 5432
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "minio": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable/disable MinIO&reg; chart installation",
                    "default": true
                },
                "auth": {
                    "type": "object",
                    "properties": {
                        "rootUser": {
                            "type": "string",
                            "description": "MinIO&reg; root username",
                            "default": "admin"
                        },
                        "rootPassword": {
                            "type": "string",
                            "description": "Password for MinIO&reg; root user",
                            "default": ""
                        },
                        "existingSecret": {
                            "type": "string",
                            "description": "Name of an existing secret containing the MinIO&reg; credentials",
                            "default": ""
                        }
                    }
                },
                "defaultBuckets": {
                    "type": "string",
                    "description": "Comma, semi-colon or space separated list of MinIO&reg; buckets to create",
                    "default": "s3storage"
                },
                "provisioning": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable/disable MinIO&reg; provisioning job",
                            "default": true
                        },
                        "extraCommands": {
                            "type": "array",
                            "description": "Extra commands to run on MinIO&reg; provisioning job",
                            "default": [
                                "mc anonymous set download provisioning/s3storage"
                            ],
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                },
                "tls": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable/disable MinIO&reg; TLS support",
                            "default": false
                        }
                    }
                },
                "service": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "MinIO&reg; service type",
                            "default": "ClusterIP"
                        },
                        "loadBalancerIP": {
                            "type": "string",
                            "description": "MinIO&reg; service LoadBalancer IP",
                            "default": ""
                        },
                        "ports": {
                            "type": "object",
                            "properties": {
                                "api": {
                                    "type": "number",
                                    "description": "MinIO&reg; service port",
                                    "default": 80
                                }
                            }
                        }
                    }
                }
            }
        },
        "elasticsearch": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Whether to deploy a elasticsearch server to use as Mastodon's search engine",
                    "default": true
                },
                "sysctlImage": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable kernel settings modifier image for Elasticsearch",
                            "default": true
                        }
                    }
                },
                "security": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable security settings for Elasticsearch",
                            "default": false
                        },
                        "existingSecret": {
                            "type": "string",
                            "description": "Name of an existing secret containing the elasticsearch credentials",
                            "default": ""
                        },
                        "tls": {
                            "type": "object",
                            "properties": {
                                "restEncryption": {
                                    "type": "boolean",
                                    "description": "Enable TLS encryption for REST API",
                                    "default": false
                                }
                            }
                        }
                    }
                },
                "master": {
                    "type": "object",
                    "properties": {
                        "replicaCount": {
                            "type": "number",
                            "description": "Desired number of Elasticsearch master-eligible nodes",
                            "default": 1
                        }
                    }
                },
                "coordinating": {
                    "type": "object",
                    "properties": {
                        "replicaCount": {
                            "type": "number",
                            "description": "Desired number of Elasticsearch coordinating-only nodes",
                            "default": 1
                        }
                    }
                },
                "data": {
                    "type": "object",
                    "properties": {
                        "replicaCount": {
                            "type": "number",
                            "description": "Desired number of Elasticsearch data nodes",
                            "default": 1
                        }
                    }
                },
                "ingest": {
                    "type": "object",
                    "properties": {
                        "replicaCount": {
                            "type": "number",
                            "description": "Desired number of Elasticsearch ingest nodes",
                            "default": 1
                        }
                    }
                },
                "service": {
                    "type": "object",
                    "properties": {
                        "ports": {
                            "type": "object",
                            "properties": {
                                "restAPI": {
                                    "type": "number",
                                    "description": "Elasticsearch REST API port",
                                    "default": 9200
                                }
                            }
                        }
                    }
                }
            }
        },
        "apache": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable Apache chart",
                    "default": true
                },
                "containerPorts": {
                    "type": "object",
                    "properties": {
                        "http": {
                            "type": "number",
                            "description": "Apache container port",
                            "default": 8080
                        }
                    }
                },
                "service": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "Apache service type",
                            "default": "LoadBalancer"
                        },
                        "loadBalancerIP": {
                            "type": "string",
                            "description": "Apache service LoadBalancer IP",
                            "default": ""
                        },
                        "ports": {
                            "type": "object",
                            "properties": {
                                "http": {
                                    "type": "number",
                                    "description": "Apache service port",
                                    "default": 80
                                }
                            }
                        }
                    }
                },
                "vhostsConfigMap": {
                    "type": "string",
                    "description": "Name of the ConfigMap containing the Apache vhost configuration",
                    "default": "{{ include \"mastodon.apache.vhostconfigmap\" . }}"
                },
                "livenessProbe": {
                    "type": "object",
                    "properties": {
                        "path": {
                            "type": "string",
                            "description": "Apache liveness probe path",
                            "default": "/api/v1/streaming/health"
                        }
                    }
                },
                "readinessProbe": {
                    "type": "object",
                    "properties": {
                        "path": {
                            "type": "string",
                            "description": "Apache readiness probe path",
                            "default": "/api/v1/streaming/health"
                        }
                    }
                },
                "startupProbe": {
                    "type": "object",
                    "properties": {
                        "path": {
                            "type": "string",
                            "description": "Apache startup probe path",
                            "default": "/api/v1/streaming/health"
                        }
                    }
                },
                "ingress": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable ingress",
                            "default": false
                        },
                        "hostname": {
                            "type": "string",
                            "description": "Ingress hostname",
                            "default": "mastodon.local"
                        }
                    }
                }
            }
        }
    }
}