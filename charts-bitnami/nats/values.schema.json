{
    "title": "Chart Values",
    "type": "object",
    "properties": {
        "global": {
            "type": "object",
            "properties": {
                "imageRegistry": {
                    "type": "string",
                    "description": "Global Docker image registry",
                    "default": ""
                },
                "imagePullSecrets": {
                    "type": "array",
                    "description": "Global Docker registry secret names as an array",
                    "default": [],
                    "items": {}
                }
            }
        },
        "kubeVersion": {
            "type": "string",
            "description": "Force target Kubernetes version (using Helm capabilities if not set)",
            "default": ""
        },
        "nameOverride": {
            "type": "string",
            "description": "String to partially override common.names.fullname template (will maintain the release name)",
            "default": ""
        },
        "fullnameOverride": {
            "type": "string",
            "description": "String to fully override common.names.fullname template",
            "default": ""
        },
        "commonLabels": {
            "type": "object",
            "description": "Add labels to all the deployed resources",
            "default": {}
        },
        "commonAnnotations": {
            "type": "object",
            "description": "Add annotations to all the deployed resources",
            "default": {}
        },
        "clusterDomain": {
            "type": "string",
            "description": "Kubernetes Cluster Domain",
            "default": "cluster.local"
        },
        "extraDeploy": {
            "type": "array",
            "description": "Array of extra objects to deploy with the release",
            "default": [],
            "items": {}
        },
        "diagnosticMode": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable diagnostic mode (all probes will be disabled and the command will be overridden)",
                    "default": false
                },
                "command": {
                    "type": "array",
                    "description": "Command to override all containers in the deployment",
                    "default": [
                        "sleep"
                    ],
                    "items": {
                        "type": "string"
                    }
                },
                "args": {
                    "type": "array",
                    "description": "Args to override all containers in the deployment",
                    "default": [
                        "infinity"
                    ],
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "image": {
            "type": "object",
            "properties": {
                "registry": {
                    "type": "string",
                    "description": "NATS image registry",
                    "default": "docker.io"
                },
                "repository": {
                    "type": "string",
                    "description": "NATS image repository",
                    "default": "bitnami/nats"
                },
                "tag": {
                    "type": "string",
                    "description": "NATS image tag (immutable tags are recommended)",
                    "default": "2.9.22-debian-11-r0"
                },
                "digest": {
                    "type": "string",
                    "description": "NATS image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag",
                    "default": ""
                },
                "pullPolicy": {
                    "type": "string",
                    "description": "NATS image pull policy",
                    "default": "IfNotPresent"
                },
                "pullSecrets": {
                    "type": "array",
                    "description": "NATS image pull secrets",
                    "default": [],
                    "items": {}
                },
                "debug": {
                    "type": "boolean",
                    "description": "Enable NATS image debug mode",
                    "default": false
                }
            }
        },
        "auth": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Switch to enable/disable client authentication",
                    "default": true
                },
                "user": {
                    "type": "string",
                    "description": "Client authentication user",
                    "default": "nats_client"
                },
                "password": {
                    "type": "string",
                    "description": "Client authentication password",
                    "default": ""
                },
                "token": {
                    "type": "string",
                    "description": "Client authentication token",
                    "default": ""
                },
                "timeout": {
                    "type": "number",
                    "description": "Client authentication timeout (seconds)",
                    "default": 1
                },
                "usersCredentials": {
                    "type": "array",
                    "description": "Client authentication users credentials collection",
                    "default": [],
                    "items": {}
                },
                "noAuthUser": {
                    "type": "string",
                    "description": "Client authentication username from auth.usersCredentials map to be used when no credentials provided",
                    "default": ""
                }
            }
        },
        "cluster": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Cluster name",
                    "default": "nats"
                },
                "connectRetries": {
                    "type": "string",
                    "description": "Configure number of connect retries for implicit routes, otherwise leave blank",
                    "default": ""
                },
                "auth": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Switch to enable/disable cluster authentication",
                            "default": true
                        },
                        "user": {
                            "type": "string",
                            "description": "Cluster authentication user",
                            "default": "nats_cluster"
                        },
                        "password": {
                            "type": "string",
                            "description": "Cluster authentication password",
                            "default": ""
                        }
                    }
                }
            }
        },
        "jetstream": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Switch to enable/disable JetStream",
                    "default": false
                },
                "maxMemory": {
                    "type": "string",
                    "description": "Max memory usage for JetStream",
                    "default": "1G"
                }
            }
        },
        "debug": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Switch to enable/disable debug on logging",
                    "default": false
                },
                "trace": {
                    "type": "boolean",
                    "description": "Switch to enable/disable trace debug level on logging",
                    "default": false
                },
                "logtime": {
                    "type": "boolean",
                    "description": "Switch to enable/disable logtime on logging",
                    "default": false
                }
            }
        },
        "maxConnections": {
            "type": "string",
            "description": "Max. number of client connections",
            "default": ""
        },
        "maxControlLine": {
            "type": "string",
            "description": "Max. protocol control line",
            "default": ""
        },
        "maxPayload": {
            "type": "string",
            "description": "Max. payload",
            "default": ""
        },
        "writeDeadline": {
            "type": "string",
            "description": "Duration the server can block on a socket write to a client",
            "default": ""
        },
        "natsFilename": {
            "type": "string",
            "description": "Filename used by several NATS files (binary, configuration file, and pid file)",
            "default": "nats-server"
        },
        "configuration": {
            "type": "string",
            "description": "Specify content for NATS configuration file (generated based on other parameters otherwise)",
            "default": "{{- $authPwd := default (include \"nats.randomPassword\" .) .Values.auth.password -}}\n{{- $clusterAuthPwd := default (include \"nats.randomPassword\" .) .Values.cluster.auth.password -}}\n{{- if eq .Values.resourceType \"statefulset\" }}\nserver_name: $NATS_SERVER_NAME\n{{- end }}\nlisten: 0.0.0.0:{{ .Values.containerPorts.client }}\nhttp: 0.0.0.0:{{ .Values.containerPorts.monitoring }}\n\n# Authorization for client connections\n{{- if .Values.auth.enabled }}\nauthorization {\n  {{- if .Values.auth.user }}\n  user: {{ .Values.auth.user | quote }}\n  password: {{ $authPwd | quote }}\n  {{- else if .Values.auth.token }}\n  token: {{ .Values.auth.token | quote }}\n  {{- else if .Values.auth.usersCredentials }}\n  users: [\n    {{- range $user := .Values.auth.usersCredentials }}\n      { user: {{ $user.username | quote }}, password: {{ $user.password | quote }} },\n    {{- end }}\n  ],\n  {{- end }}\n  timeout:  {{ int .Values.auth.timeout }}\n}\n{{- if .Values.auth.noAuthUser }}\nno_auth_user: {{ .Values.auth.noAuthUser | quote }}\n{{- end }}\n{{- end }}\n\n# Logging options\ndebug: {{ ternary \"true\" \"false\" (or .Values.debug.enabled .Values.diagnosticMode.enabled) }}\ntrace: {{ ternary \"true\" \"false\" (or .Values.debug.trace .Values.diagnosticMode.enabled) }}\nlogtime: {{ ternary \"true\" \"false\" (or .Values.debug.logtime .Values.diagnosticMode.enabled) }}\n# Pid file\npid_file: \"/opt/bitnami/nats/tmp/{{ .Values.natsFilename }}.pid\"\n\n# Some system overrides\n{{- if .Values.maxConnections }}\nmax_connections: {{ int .Values.maxConnections }}\n{{- end }}\n{{- if .Values.maxControlLine }}\nmax_control_line: {{ int .Values.maxControlLine }}\n{{- end }}\n{{- if .Values.maxPayload }}\nmax_payload: {{ int .Values.maxPayload }}\n{{- end }}\n{{- if .Values.writeDeadline }}\nwrite_deadline: {{ .Values.writeDeadline | quote }}\n{{- end }}\n\n# Clustering definition\ncluster {\n  name: {{ .Values.cluster.name | quote }}\n  listen: 0.0.0.0:{{ .Values.containerPorts.cluster }}\n  {{- if .Values.cluster.auth.enabled }}\n  # Authorization for cluster connections\n  authorization {\n    user: {{ .Values.cluster.auth.user | quote }}\n    password: {{ $clusterAuthPwd | quote }}\n    timeout:  1\n  }\n  {{- end }}\n  # Routes are actively solicited and connected to from this server.\n  # Other servers can connect to us if they supply the correct credentials\n  # in their routes definitions from above\n  routes = [\n    {{- if .Values.cluster.auth.enabled }}\n    nats://{{ .Values.cluster.auth.user }}:{{ $clusterAuthPwd }}@{{ include \"common.names.fullname\" . }}:{{ .Values.service.ports.cluster }}\n    {{- else }}\n    nats://{{ template \"common.names.fullname\" . }}:{{ .Values.service.ports.cluster }}\n    {{- end }}\n  ]\n  {{- if .Values.cluster.connectRetries }}\n  # Configure number of connect retries for implicit routes\n  connect_retries: {{ .Values.cluster.connectRetries }}\n  {{- end }}\n}\n\n{{- if .Values.jetstream.enabled }}\n# JetStream configuration\njetstream: enabled\njetstream {\n  store_dir: /data/jetstream\n  max_memory_store: {{ .Values.jetstream.maxMemory }}\n  max_file_store: {{ .Values.persistence.size }}\n}\n{{- end }}"
        },
        "existingSecret": {
            "type": "string",
            "description": "The name of an existing Secret with your custom configuration for NATS",
            "default": ""
        },
        "command": {
            "type": "array",
            "description": "Override default container command (useful when using custom images)",
            "default": [],
            "items": {}
        },
        "args": {
            "type": "array",
            "description": "Override default container args (useful when using custom images)",
            "default": [],
            "items": {}
        },
        "extraEnvVars": {
            "type": "array",
            "description": "Extra environment variables to be set on NATS container",
            "default": [],
            "items": {}
        },
        "extraEnvVarsCM": {
            "type": "string",
            "description": "ConfigMap with extra environment variables",
            "default": ""
        },
        "extraEnvVarsSecret": {
            "type": "string",
            "description": "Secret with extra environment variables",
            "default": ""
        },
        "resourceType": {
            "type": "string",
            "description": "NATS cluster resource type under Kubernetes. Allowed values: `statefulset` (default) or `deployment`",
            "default": "statefulset"
        },
        "replicaCount": {
            "type": "number",
            "description": "Number of NATS nodes",
            "default": 1
        },
        "schedulerName": {
            "type": "string",
            "description": "Use an alternate scheduler, e.g. \"stork\".",
            "default": ""
        },
        "priorityClassName": {
            "type": "string",
            "description": "Name of pod priority class",
            "default": ""
        },
        "updateStrategy": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string",
                    "description": "StrategyType. Can be set to RollingUpdate or OnDelete",
                    "default": "RollingUpdate"
                }
            }
        },
        "containerPorts": {
            "type": "object",
            "properties": {
                "client": {
                    "type": "number",
                    "description": "NATS client container port",
                    "default": 4222
                },
                "cluster": {
                    "type": "number",
                    "description": "NATS cluster container port",
                    "default": 6222
                },
                "monitoring": {
                    "type": "number",
                    "description": "NATS monitoring container port",
                    "default": 8222
                }
            }
        },
        "podSecurityContext": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enabled NATS pods' Security Context",
                    "default": false
                },
                "fsGroup": {
                    "type": "number",
                    "description": "Set NATS pod's Security Context fsGroup",
                    "default": 1001
                }
            }
        },
        "containerSecurityContext": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enabled NATS containers' Security Context",
                    "default": false
                },
                "runAsUser": {
                    "type": "number",
                    "description": "Set NATS containers' Security Context runAsUser",
                    "default": 1001
                },
                "runAsNonRoot": {
                    "type": "boolean",
                    "description": "Set NATS containers' Security Context runAsNonRoot",
                    "default": true
                }
            }
        },
        "resources": {
            "type": "object",
            "properties": {
                "limits": {
                    "type": "object",
                    "description": "The resources limits for the NATS containers",
                    "default": {}
                },
                "requests": {
                    "type": "object",
                    "description": "The requested resources for the NATS containers",
                    "default": {}
                }
            }
        },
        "livenessProbe": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable livenessProbe",
                    "default": true
                },
                "initialDelaySeconds": {
                    "type": "number",
                    "description": "Initial delay seconds for livenessProbe",
                    "default": 30
                },
                "periodSeconds": {
                    "type": "number",
                    "description": "Period seconds for livenessProbe",
                    "default": 10
                },
                "timeoutSeconds": {
                    "type": "number",
                    "description": "Timeout seconds for livenessProbe",
                    "default": 5
                },
                "failureThreshold": {
                    "type": "number",
                    "description": "Failure threshold for livenessProbe",
                    "default": 6
                },
                "successThreshold": {
                    "type": "number",
                    "description": "Success threshold for livenessProbe",
                    "default": 1
                }
            }
        },
        "readinessProbe": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable readinessProbe",
                    "default": true
                },
                "initialDelaySeconds": {
                    "type": "number",
                    "description": "Initial delay seconds for readinessProbe",
                    "default": 5
                },
                "periodSeconds": {
                    "type": "number",
                    "description": "Period seconds for readinessProbe",
                    "default": 10
                },
                "timeoutSeconds": {
                    "type": "number",
                    "description": "Timeout seconds for readinessProbe",
                    "default": 5
                },
                "failureThreshold": {
                    "type": "number",
                    "description": "Failure threshold for readinessProbe",
                    "default": 6
                },
                "successThreshold": {
                    "type": "number",
                    "description": "Success threshold for readinessProbe",
                    "default": 1
                }
            }
        },
        "startupProbe": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable startupProbe on NATS containers",
                    "default": false
                },
                "initialDelaySeconds": {
                    "type": "number",
                    "description": "Initial delay seconds for startupProbe",
                    "default": 5
                },
                "periodSeconds": {
                    "type": "number",
                    "description": "Period seconds for startupProbe",
                    "default": 10
                },
                "timeoutSeconds": {
                    "type": "number",
                    "description": "Timeout seconds for startupProbe",
                    "default": 5
                },
                "failureThreshold": {
                    "type": "number",
                    "description": "Failure threshold for startupProbe",
                    "default": 6
                },
                "successThreshold": {
                    "type": "number",
                    "description": "Success threshold for startupProbe",
                    "default": 1
                }
            }
        },
        "customLivenessProbe": {
            "type": "object",
            "description": "Override default liveness probe",
            "default": {}
        },
        "customReadinessProbe": {
            "type": "object",
            "description": "Override default readiness probe",
            "default": {}
        },
        "customStartupProbe": {
            "type": "object",
            "description": "Custom startupProbe that overrides the default one",
            "default": {}
        },
        "hostAliases": {
            "type": "array",
            "description": "Deployment pod host aliases",
            "default": [],
            "items": {}
        },
        "podLabels": {
            "type": "object",
            "description": "Extra labels for NATS pods",
            "default": {}
        },
        "podAnnotations": {
            "type": "object",
            "description": "Annotations for NATS pods",
            "default": {}
        },
        "podAffinityPreset": {
            "type": "string",
            "description": "Pod affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`",
            "default": ""
        },
        "podAntiAffinityPreset": {
            "type": "string",
            "description": "Pod anti-affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`",
            "default": "soft"
        },
        "nodeAffinityPreset": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string",
                    "description": "Node affinity preset type. Ignored if `affinity` is set. Allowed values: `soft` or `hard`",
                    "default": ""
                },
                "key": {
                    "type": "string",
                    "description": "Node label key to match. Ignored if `affinity` is set.",
                    "default": ""
                },
                "values": {
                    "type": "array",
                    "description": "Node label values to match. Ignored if `affinity` is set.",
                    "default": [],
                    "items": {}
                }
            }
        },
        "affinity": {
            "type": "object",
            "description": "Affinity for pod assignment. Evaluated as a template.",
            "default": {}
        },
        "nodeSelector": {
            "type": "object",
            "description": "Node labels for pod assignment. Evaluated as a template.",
            "default": {}
        },
        "tolerations": {
            "type": "array",
            "description": "Tolerations for pod assignment. Evaluated as a template.",
            "default": [],
            "items": {}
        },
        "topologySpreadConstraints": {
            "type": "array",
            "description": "Topology Spread Constraints for NATS pods assignment spread across your cluster among failure-domains",
            "default": [],
            "items": {}
        },
        "lifecycleHooks": {
            "type": "object",
            "description": "for the NATS container(s) to automate configuration before or after startup",
            "default": {}
        },
        "extraVolumes": {
            "type": "array",
            "description": "Optionally specify extra list of additional volumes for NATS pods",
            "default": [],
            "items": {}
        },
        "extraVolumeMounts": {
            "type": "array",
            "description": "Optionally specify extra list of additional volumeMounts for NATS container(s)",
            "default": [],
            "items": {}
        },
        "initContainers": {
            "type": "array",
            "description": "Add additional init containers to the NATS pods",
            "default": [],
            "items": {}
        },
        "sidecars": {
            "type": "array",
            "description": "Add additional sidecar containers to the NATS pods",
            "default": [],
            "items": {}
        },
        "service": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string",
                    "description": "NATS service type",
                    "default": "ClusterIP"
                },
                "ports": {
                    "type": "object",
                    "properties": {
                        "client": {
                            "type": "number",
                            "description": "NATS client service port",
                            "default": 4222
                        },
                        "cluster": {
                            "type": "number",
                            "description": "NATS cluster service port",
                            "default": 6222
                        },
                        "monitoring": {
                            "type": "number",
                            "description": "NATS monitoring service port",
                            "default": 8222
                        }
                    }
                },
                "nodePorts": {
                    "type": "object",
                    "properties": {
                        "client": {
                            "type": "string",
                            "description": "Node port for clients",
                            "default": ""
                        },
                        "cluster": {
                            "type": "string",
                            "description": "Node port for clustering",
                            "default": ""
                        },
                        "monitoring": {
                            "type": "string",
                            "description": "Node port for monitoring",
                            "default": ""
                        }
                    }
                },
                "sessionAffinity": {
                    "type": "string",
                    "description": "Control where client requests go, to the same pod or round-robin",
                    "default": "None"
                },
                "sessionAffinityConfig": {
                    "type": "object",
                    "description": "Additional settings for the sessionAffinity",
                    "default": {}
                },
                "clusterIP": {
                    "type": "string",
                    "description": "NATS service Cluster IP",
                    "default": ""
                },
                "loadBalancerIP": {
                    "type": "string",
                    "description": "NATS service Load Balancer IP",
                    "default": ""
                },
                "loadBalancerSourceRanges": {
                    "type": "array",
                    "description": "NATS service Load Balancer sources",
                    "default": [],
                    "items": {}
                },
                "externalTrafficPolicy": {
                    "type": "string",
                    "description": "NATS service external traffic policy",
                    "default": "Cluster"
                },
                "annotations": {
                    "type": "object",
                    "description": "Additional custom annotations for NATS service",
                    "default": {}
                },
                "extraPorts": {
                    "type": "array",
                    "description": "Extra ports to expose in the NATS service (normally used with the `sidecar` value)",
                    "default": [],
                    "items": {}
                },
                "headless": {
                    "type": "object",
                    "properties": {
                        "annotations": {
                            "type": "object",
                            "description": "Annotations for the headless service.",
                            "default": {}
                        }
                    }
                }
            }
        },
        "ingress": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Set to true to enable ingress record generation",
                    "default": false
                },
                "pathType": {
                    "type": "string",
                    "description": "Ingress Path type",
                    "default": "ImplementationSpecific"
                },
                "apiVersion": {
                    "type": "string",
                    "description": "Override API Version (automatically detected if not set)",
                    "default": ""
                },
                "hostname": {
                    "type": "string",
                    "description": "When the ingress is enabled, a host pointing to this will be created",
                    "default": "nats.local"
                },
                "path": {
                    "type": "string",
                    "description": "The Path to NATS. You may need to set this to '/*' in order to use this with ALB ingress controllers.",
                    "default": "/"
                },
                "ingressClassName": {
                    "type": "string",
                    "description": "IngressClass that will be be used to implement the Ingress (Kubernetes 1.18+)",
                    "default": ""
                },
                "annotations": {
                    "type": "object",
                    "description": "Additional annotations for the Ingress resource. To enable certificate autogeneration, place here your cert-manager annotations.",
                    "default": {}
                },
                "tls": {
                    "type": "boolean",
                    "description": "Enable TLS configuration for the host defined at `ingress.hostname` parameter",
                    "default": false
                },
                "selfSigned": {
                    "type": "boolean",
                    "description": "Create a TLS secret for this ingress record using self-signed certificates generated by Helm",
                    "default": false
                },
                "extraHosts": {
                    "type": "array",
                    "description": "The list of additional hostnames to be covered with this ingress record.",
                    "default": [],
                    "items": {}
                },
                "extraPaths": {
                    "type": "array",
                    "description": "Any additional arbitrary paths that may need to be added to the ingress under the main host.",
                    "default": [],
                    "items": {}
                },
                "extraTls": {
                    "type": "array",
                    "description": "The tls configuration for additional hostnames to be covered with this ingress record.",
                    "default": [],
                    "items": {}
                },
                "secrets": {
                    "type": "array",
                    "description": "If you're providing your own certificates, please use this to add the certificates as secrets",
                    "default": [],
                    "items": {}
                },
                "extraRules": {
                    "type": "array",
                    "description": "Additional rules to be covered with this ingress record",
                    "default": [],
                    "items": {}
                }
            }
        },
        "networkPolicy": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable creation of NetworkPolicy resources",
                    "default": false
                },
                "allowExternal": {
                    "type": "boolean",
                    "description": "The Policy model to apply",
                    "default": true
                },
                "additionalRules": {
                    "type": "object",
                    "description": "Additional NetworkPolicy Ingress \"from\" rules to set. Note that all rules are OR-ed.",
                    "default": {}
                }
            }
        },
        "metrics": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable Prometheus metrics via exporter side-car",
                    "default": false
                },
                "image": {
                    "type": "object",
                    "properties": {
                        "registry": {
                            "type": "string",
                            "description": "Prometheus metrics exporter image registry",
                            "default": "docker.io"
                        },
                        "repository": {
                            "type": "string",
                            "description": "Prometheus metrics exporter image repository",
                            "default": "bitnami/nats-exporter"
                        },
                        "tag": {
                            "type": "string",
                            "description": "Prometheus metrics exporter image tag (immutable tags are recommended)",
                            "default": "0.12.0-debian-11-r66"
                        },
                        "digest": {
                            "type": "string",
                            "description": "NATS Exporter image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag",
                            "default": ""
                        },
                        "pullPolicy": {
                            "type": "string",
                            "description": "Prometheus metrics image pull policy",
                            "default": "IfNotPresent"
                        },
                        "pullSecrets": {
                            "type": "array",
                            "description": "Prometheus metrics image pull secrets",
                            "default": [],
                            "items": {}
                        }
                    }
                },
                "resources": {
                    "type": "object",
                    "description": "Metrics exporter resource requests and limits",
                    "default": {}
                },
                "containerPort": {
                    "type": "number",
                    "description": "Prometheus metrics exporter port",
                    "default": 7777
                },
                "flags": {
                    "type": "array",
                    "description": "Flags to be passed to Prometheus metrics",
                    "default": [
                        "-connz",
                        "-routez",
                        "-subz",
                        "-varz"
                    ],
                    "items": {
                        "type": "string"
                    }
                },
                "service": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "Kubernetes service type (`ClusterIP`, `NodePort` or `LoadBalancer`)",
                            "default": "ClusterIP"
                        },
                        "port": {
                            "type": "number",
                            "description": "Prometheus metrics service port",
                            "default": 7777
                        },
                        "loadBalancerIP": {
                            "type": "string",
                            "description": "Use serviceLoadBalancerIP to request a specific static IP, otherwise leave blank",
                            "default": ""
                        },
                        "annotations": {
                            "type": "object",
                            "properties": {
                                "prometheus": {
                                    "type": "object",
                                    "properties": {
                                        "io/scrape": {
                                            "type": "string",
                                            "description": "",
                                            "default": "true"
                                        },
                                        "io/port": {
                                            "type": "string",
                                            "description": "",
                                            "default": "{{ .Values.metrics.service.port }}"
                                        }
                                    }
                                }
                            }
                        },
                        "labels": {
                            "type": "object",
                            "description": "Labels for Prometheus metrics service",
                            "default": {}
                        }
                    }
                },
                "serviceMonitor": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Specify if a ServiceMonitor will be deployed for Prometheus Operator",
                            "default": false
                        },
                        "namespace": {
                            "type": "string",
                            "description": "Namespace in which Prometheus is running",
                            "default": "monitoring"
                        },
                        "labels": {
                            "type": "object",
                            "description": "Extra labels for the ServiceMonitor",
                            "default": {}
                        },
                        "jobLabel": {
                            "type": "string",
                            "description": "The name of the label on the target service to use as the job name in Prometheus",
                            "default": ""
                        },
                        "interval": {
                            "type": "string",
                            "description": "How frequently to scrape metrics",
                            "default": ""
                        },
                        "scrapeTimeout": {
                            "type": "string",
                            "description": "Timeout after which the scrape is ended",
                            "default": ""
                        },
                        "metricRelabelings": {
                            "type": "array",
                            "description": "Specify additional relabeling of metrics",
                            "default": [],
                            "items": {}
                        },
                        "relabelings": {
                            "type": "array",
                            "description": "Specify general relabeling",
                            "default": [],
                            "items": {}
                        },
                        "selector": {
                            "type": "object",
                            "description": "Prometheus instance selector labels",
                            "default": {}
                        }
                    }
                }
            }
        },
        "persistence": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable NATS data persistence using PVC(s)",
                    "default": false
                },
                "storageClass": {
                    "type": "string",
                    "description": "PVC Storage Class for NATS data volume",
                    "default": ""
                },
                "accessModes": {
                    "type": "array",
                    "description": "PVC Access modes",
                    "default": [
                        "ReadWriteOnce"
                    ],
                    "items": {
                        "type": "string"
                    }
                },
                "size": {
                    "type": "string",
                    "description": "PVC Storage Request for NATS data volume",
                    "default": "8Gi"
                },
                "annotations": {
                    "type": "object",
                    "description": "Annotations for the PVC",
                    "default": {}
                },
                "selector": {
                    "type": "object",
                    "description": "Selector to match an existing Persistent Volume for NATS's data PVC",
                    "default": {}
                }
            }
        },
        "pdb": {
            "type": "object",
            "properties": {
                "create": {
                    "type": "boolean",
                    "description": "Enable/disable a Pod Disruption Budget creation",
                    "default": false
                },
                "minAvailable": {
                    "type": "number",
                    "description": "Minimum number/percentage of pods that should remain scheduled",
                    "default": 1
                },
                "maxUnavailable": {
                    "type": "string",
                    "description": "Maximum number/percentage of pods that may be made unavailable",
                    "default": ""
                }
            }
        }
    }
}