{
    "title": "Chart Values",
    "type": "object",
    "properties": {
        "global": {
            "type": "object",
            "properties": {
                "imageRegistry": {
                    "type": "string",
                    "description": "Global Docker image registry",
                    "default": ""
                },
                "imagePullSecrets": {
                    "type": "array",
                    "description": "Global Docker registry secret names as an array",
                    "default": [],
                    "items": {}
                },
                "storageClass": {
                    "type": "string",
                    "description": "Global StorageClass for Persistent Volume(s)",
                    "default": ""
                }
            }
        },
        "kubeVersion": {
            "type": "string",
            "description": "Override Kubernetes version",
            "default": ""
        },
        "nameOverride": {
            "type": "string",
            "description": "String to partially override common.names.fullname",
            "default": ""
        },
        "fullnameOverride": {
            "type": "string",
            "description": "String to fully override common.names.fullname",
            "default": ""
        },
        "commonLabels": {
            "type": "object",
            "description": "Labels to add to all deployed objects",
            "default": {}
        },
        "commonAnnotations": {
            "type": "object",
            "description": "Annotations to add to all deployed objects",
            "default": {}
        },
        "clusterDomain": {
            "type": "string",
            "description": "Kubernetes cluster domain name",
            "default": "cluster.local"
        },
        "extraDeploy": {
            "type": "array",
            "description": "Array of extra objects to deploy with the release",
            "default": [],
            "items": {}
        },
        "diagnosticMode": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable diagnostic mode (all probes will be disabled and the command will be overridden)",
                    "default": false
                },
                "command": {
                    "type": "array",
                    "description": "Command to override all containers in the deployment",
                    "default": [
                        "sleep"
                    ],
                    "items": {
                        "type": "string"
                    }
                },
                "args": {
                    "type": "array",
                    "description": "Args to override all containers in the deployment",
                    "default": [
                        "infinity"
                    ],
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "service": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string",
                    "description": "OAuth2 Proxy service type",
                    "default": "ClusterIP"
                },
                "port": {
                    "type": "number",
                    "description": "OAuth2 Proxy service HTTP port",
                    "default": 80
                },
                "nodePorts": {
                    "type": "object",
                    "properties": {
                        "http": {
                            "type": "string",
                            "description": "Node port for HTTP",
                            "default": ""
                        }
                    }
                },
                "clusterIP": {
                    "type": "string",
                    "description": "OAuth2 Proxy service Cluster IP",
                    "default": ""
                },
                "loadBalancerIP": {
                    "type": "string",
                    "description": "OAuth2 Proxy service Load Balancer IP",
                    "default": ""
                },
                "loadBalancerSourceRanges": {
                    "type": "array",
                    "description": "OAuth2 Proxy service Load Balancer sources",
                    "default": [],
                    "items": {}
                },
                "externalTrafficPolicy": {
                    "type": "string",
                    "description": "OAuth2 Proxy service external traffic policy",
                    "default": "Cluster"
                },
                "extraPorts": {
                    "type": "array",
                    "description": "Extra ports to expose (normally used with the `sidecar` value)",
                    "default": [],
                    "items": {}
                },
                "annotations": {
                    "type": "object",
                    "description": "Additional custom annotations for OAuth2 Proxy service",
                    "default": {}
                },
                "sessionAffinity": {
                    "type": "string",
                    "description": "Session Affinity for Kubernetes service, can be \"None\" or \"ClientIP\"",
                    "default": "None"
                },
                "sessionAffinityConfig": {
                    "type": "object",
                    "description": "Additional settings for the sessionAffinity",
                    "default": {}
                }
            }
        },
        "ingress": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable ingress record generation for OAuth2 Proxy",
                    "default": false
                },
                "pathType": {
                    "type": "string",
                    "description": "Ingress path type",
                    "default": "ImplementationSpecific"
                },
                "apiVersion": {
                    "type": "string",
                    "description": "Force Ingress API version (automatically detected if not set)",
                    "default": ""
                },
                "ingressClassName": {
                    "type": "string",
                    "description": "IngressClass that will be be used to implement the Ingress (Kubernetes 1.18+)",
                    "default": ""
                },
                "hostname": {
                    "type": "string",
                    "description": "Default host for the ingress record",
                    "default": "oaut2-proxy.local"
                },
                "path": {
                    "type": "string",
                    "description": "Default path for the ingress record",
                    "default": "/"
                },
                "annotations": {
                    "type": "object",
                    "description": "Additional annotations for the Ingress resource. To enable certificate autogeneration, place here your cert-manager annotations.",
                    "default": {}
                },
                "tls": {
                    "type": "boolean",
                    "description": "Enable TLS configuration for the host defined at `ingress.hostname` parameter",
                    "default": false
                },
                "extraHosts": {
                    "type": "array",
                    "description": "An array with additional hostname(s) to be covered with the ingress record",
                    "default": [],
                    "items": {}
                },
                "extraPaths": {
                    "type": "array",
                    "description": "An array with additional arbitrary paths that may need to be added to the ingress under the main host",
                    "default": [],
                    "items": {}
                },
                "extraTls": {
                    "type": "array",
                    "description": "TLS configuration for additional hostname(s) to be covered with this ingress record",
                    "default": [],
                    "items": {}
                },
                "certManager": {
                    "type": "boolean",
                    "description": "Add the corresponding annotations for cert-manager integration",
                    "default": false
                },
                "selfSigned": {
                    "type": "boolean",
                    "description": "Create a TLS secret for this ingress record using self-signed certificates generated by Helm",
                    "default": false
                },
                "secrets": {
                    "type": "array",
                    "description": "Custom TLS certificates as secrets",
                    "default": [],
                    "items": {}
                },
                "existingSecretName": {
                    "type": "string",
                    "description": "If you're providing your own certificate and want to manage the secret yourself",
                    "default": ""
                },
                "extraRules": {
                    "type": "array",
                    "description": "Additional rules to be covered with this ingress record",
                    "default": [],
                    "items": {}
                }
            }
        },
        "image": {
            "type": "object",
            "properties": {
                "registry": {
                    "type": "string",
                    "description": "OAuth2 Proxy image registry",
                    "default": "docker.io"
                },
                "repository": {
                    "type": "string",
                    "description": "OAuth2 Proxy image repository",
                    "default": "bitnami/oauth2-proxy"
                },
                "tag": {
                    "type": "string",
                    "description": "OAuth2 Proxy image tag (immutable tags are recommended)",
                    "default": "7.5.0-debian-11-r3"
                },
                "digest": {
                    "type": "string",
                    "description": "OAuth2 Proxy image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag",
                    "default": ""
                },
                "pullPolicy": {
                    "type": "string",
                    "description": "OAuth2 Proxy image pull policy",
                    "default": "IfNotPresent"
                },
                "pullSecrets": {
                    "type": "array",
                    "description": "OAuth2 Proxy image pull secrets",
                    "default": [],
                    "items": {}
                }
            }
        },
        "configuration": {
            "type": "object",
            "properties": {
                "clientID": {
                    "type": "string",
                    "description": "OAuth client ID",
                    "default": "XXXXXXX"
                },
                "clientSecret": {
                    "type": "string",
                    "description": "OAuth client secret",
                    "default": "XXXXXXXX"
                },
                "cookieSecret": {
                    "type": "string",
                    "description": "OAuth cookie secret",
                    "default": "XXXXXXXXXXXXXXXX"
                },
                "existingSecret": {
                    "type": "string",
                    "description": "Secret with the client ID, secret and cookie secret",
                    "default": ""
                },
                "google": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable Google service account",
                            "default": false
                        },
                        "adminEmail": {
                            "type": "string",
                            "description": "Google admin email",
                            "default": ""
                        },
                        "groups": {
                            "type": "array",
                            "description": "Restrict logins to members of these google groups",
                            "default": [],
                            "items": {}
                        },
                        "serviceAccountJson": {
                            "type": "string",
                            "description": "Google Service account JSON",
                            "default": ""
                        },
                        "existingSecret": {
                            "type": "string",
                            "description": "Existing secret containing Google Service Account",
                            "default": ""
                        }
                    }
                },
                "content": {
                    "type": "string",
                    "description": "Default configuration",
                    "default": "email_domains = [ \"*\" ]\nupstreams = [ \"file:///dev/null\" ]\n"
                },
                "existingConfigmap": {
                    "type": "string",
                    "description": "Configmap with the OAuth2 Proxy configuration",
                    "default": ""
                },
                "authenticatedEmailsFile": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable authenticated emails file",
                            "default": false
                        },
                        "content": {
                            "type": "string",
                            "description": "Restricted access list (one email per line)",
                            "default": ""
                        },
                        "existingSecret": {
                            "type": "string",
                            "description": "Secret with the authenticated emails file",
                            "default": ""
                        }
                    }
                },
                "htpasswdFile": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable htpasswd file",
                            "default": false
                        },
                        "existingSecret": {
                            "type": "string",
                            "description": "Existing secret for htpasswd file",
                            "default": ""
                        },
                        "content": {
                            "type": "string",
                            "description": "htpasswd file entries (one row per user)",
                            "default": ""
                        }
                    }
                },
                "oidcIssuerUrl": {
                    "type": "string",
                    "description": "OpenID Connect issuer URL",
                    "default": ""
                },
                "redirectUrl": {
                    "type": "string",
                    "description": "OAuth Redirect URL",
                    "default": ""
                },
                "whiteList": {
                    "type": "string",
                    "description": "Allowed domains for redirection after authentication. Prefix domain with a . or a *. to allow subdomains",
                    "default": ""
                }
            }
        },
        "containerPort": {
            "type": "number",
            "description": "OAuth2 Proxy port number",
            "default": 4180
        },
        "extraContainerPorts": {
            "type": "array",
            "description": "Array of additional container ports for the OAuth2 Proxy container",
            "default": [],
            "items": {}
        },
        "replicaCount": {
            "type": "number",
            "description": "Number of OAuth2 Proxy replicas to deploy",
            "default": 1
        },
        "extraArgs": {
            "type": "array",
            "description": "add extra args to the default command",
            "default": [],
            "items": {}
        },
        "startupProbe": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable startupProbe on OAuth2 Proxy nodes",
                    "default": false
                },
                "initialDelaySeconds": {
                    "type": "number",
                    "description": "Initial delay seconds for startupProbe",
                    "default": 0
                },
                "periodSeconds": {
                    "type": "number",
                    "description": "Period seconds for startupProbe",
                    "default": 10
                },
                "timeoutSeconds": {
                    "type": "number",
                    "description": "Timeout seconds for startupProbe",
                    "default": 1
                },
                "failureThreshold": {
                    "type": "number",
                    "description": "Failure threshold for startupProbe",
                    "default": 5
                },
                "successThreshold": {
                    "type": "number",
                    "description": "Success threshold for startupProbe",
                    "default": 1
                }
            }
        },
        "livenessProbe": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable livenessProbe on OAuth2 Proxy nodes",
                    "default": true
                },
                "initialDelaySeconds": {
                    "type": "number",
                    "description": "Initial delay seconds for livenessProbe",
                    "default": 0
                },
                "periodSeconds": {
                    "type": "number",
                    "description": "Period seconds for livenessProbe",
                    "default": 10
                },
                "timeoutSeconds": {
                    "type": "number",
                    "description": "Timeout seconds for livenessProbe",
                    "default": 1
                },
                "failureThreshold": {
                    "type": "number",
                    "description": "Failure threshold for livenessProbe",
                    "default": 5
                },
                "successThreshold": {
                    "type": "number",
                    "description": "Success threshold for livenessProbe",
                    "default": 1
                }
            }
        },
        "readinessProbe": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable readinessProbe on OAuth2 Proxy nodes",
                    "default": true
                },
                "initialDelaySeconds": {
                    "type": "number",
                    "description": "Initial delay seconds for readinessProbe",
                    "default": 0
                },
                "periodSeconds": {
                    "type": "number",
                    "description": "Period seconds for readinessProbe",
                    "default": 10
                },
                "timeoutSeconds": {
                    "type": "number",
                    "description": "Timeout seconds for readinessProbe",
                    "default": 1
                },
                "failureThreshold": {
                    "type": "number",
                    "description": "Failure threshold for readinessProbe",
                    "default": 5
                },
                "successThreshold": {
                    "type": "number",
                    "description": "Success threshold for readinessProbe",
                    "default": 1
                }
            }
        },
        "customStartupProbe": {
            "type": "object",
            "description": "Custom startupProbe that overrides the default one",
            "default": {}
        },
        "customLivenessProbe": {
            "type": "object",
            "description": "Custom livenessProbe that overrides the default one",
            "default": {}
        },
        "customReadinessProbe": {
            "type": "object",
            "description": "Custom readinessProbe that overrides the default one",
            "default": {}
        },
        "resources": {
            "type": "object",
            "properties": {
                "limits": {
                    "type": "object",
                    "description": "The resources limits for the OAuth2 Proxy containers",
                    "default": {}
                },
                "requests": {
                    "type": "object",
                    "description": "The requested resources for the OAuth2 Proxy containers",
                    "default": {}
                }
            }
        },
        "pdb": {
            "type": "object",
            "properties": {
                "create": {
                    "type": "boolean",
                    "description": "Enable a Pod Disruption Budget creation",
                    "default": false
                },
                "minAvailable": {
                    "type": "number",
                    "description": "Minimum number/percentage of pods that should remain scheduled",
                    "default": 1
                },
                "maxUnavailable": {
                    "type": "string",
                    "description": "Maximum number/percentage of pods that may be made unavailable",
                    "default": ""
                }
            }
        },
        "podSecurityContext": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enabled OAuth2 Proxy pods' Security Context",
                    "default": true
                },
                "fsGroup": {
                    "type": "number",
                    "description": "Set OAuth2 Proxy pod's Security Context fsGroup",
                    "default": 1001
                }
            }
        },
        "containerSecurityContext": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enabled OAuth2 Proxy containers' Security Context",
                    "default": true
                },
                "runAsUser": {
                    "type": "number",
                    "description": "Set OAuth2 Proxy containers' Security Context runAsUser",
                    "default": 1001
                }
            }
        },
        "command": {
            "type": "array",
            "description": "Override default container command (useful when using custom images)",
            "default": [],
            "items": {}
        },
        "args": {
            "type": "array",
            "description": "Override default container args (useful when using custom images)",
            "default": [],
            "items": {}
        },
        "hostAliases": {
            "type": "array",
            "description": "OAuth2 Proxy pods host aliases",
            "default": [],
            "items": {}
        },
        "podLabels": {
            "type": "object",
            "description": "Extra labels for OAuth2 Proxy pods",
            "default": {}
        },
        "podAnnotations": {
            "type": "object",
            "description": "Annotations for OAuth2 Proxy pods",
            "default": {}
        },
        "podAffinityPreset": {
            "type": "string",
            "description": "Pod affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`",
            "default": ""
        },
        "podAntiAffinityPreset": {
            "type": "string",
            "description": "Pod anti-affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`",
            "default": "soft"
        },
        "nodeAffinityPreset": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string",
                    "description": "Node affinity preset type. Ignored if `affinity` is set. Allowed values: `soft` or `hard`",
                    "default": ""
                },
                "key": {
                    "type": "string",
                    "description": "Node label key to match. Ignored if `affinity` is set",
                    "default": ""
                },
                "values": {
                    "type": "array",
                    "description": "Node label values to match. Ignored if `affinity` is set",
                    "default": [],
                    "items": {}
                }
            }
        },
        "affinity": {
            "type": "object",
            "description": "Affinity for OAuth2 Proxy pods assignment",
            "default": {}
        },
        "nodeSelector": {
            "type": "object",
            "description": "Node labels for OAuth2 Proxy pods assignment",
            "default": {}
        },
        "tolerations": {
            "type": "array",
            "description": "Tolerations for OAuth2 Proxy pods assignment",
            "default": [],
            "items": {}
        },
        "updateStrategy": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string",
                    "description": "OAuth2 Proxy statefulset strategy type",
                    "default": "RollingUpdate"
                }
            }
        },
        "priorityClassName": {
            "type": "string",
            "description": "OAuth2 Proxy pods' priorityClassName",
            "default": ""
        },
        "schedulerName": {
            "type": "string",
            "description": "Name of the k8s scheduler (other than default)",
            "default": ""
        },
        "topologySpreadConstraints": {
            "type": "array",
            "description": "Topology Spread Constraints for pod assignment",
            "default": [],
            "items": {}
        },
        "lifecycleHooks": {
            "type": "object",
            "description": "for the OAuth2 Proxy container(s) to automate configuration before or after startup",
            "default": {}
        },
        "extraEnvVars": {
            "type": "array",
            "description": "Array with extra environment variables to add to OAuth2 Proxy nodes",
            "default": [],
            "items": {}
        },
        "extraEnvVarsCM": {
            "type": "string",
            "description": "Name of existing ConfigMap containing extra env vars for OAuth2 Proxy nodes",
            "default": ""
        },
        "extraEnvVarsSecret": {
            "type": "string",
            "description": "Name of existing Secret containing extra env vars for OAuth2 Proxy nodes",
            "default": ""
        },
        "extraVolumes": {
            "type": "array",
            "description": "Optionally specify extra list of additional volumes for the OAuth2 Proxy pod(s)",
            "default": [],
            "items": {}
        },
        "extraVolumeMounts": {
            "type": "array",
            "description": "Optionally specify extra list of additional volumeMounts for the OAuth2 Proxy container(s)",
            "default": [],
            "items": {}
        },
        "sidecars": {
            "type": "array",
            "description": "Add additional sidecar containers to the OAuth2 Proxy pod(s)",
            "default": [],
            "items": {}
        },
        "initContainers": {
            "type": "array",
            "description": "Add additional init containers to the OAuth2 Proxy pod(s)",
            "default": [],
            "items": {}
        },
        "dnsPolicy": {
            "type": "string",
            "description": "Pod DNS policy. Valid values are 'ClusterFirstWithHostNet', 'ClusterFirst', 'Default' or 'None'.",
            "default": ""
        },
        "dnsConfig": {
            "type": "object",
            "description": "Pod DNS configuration.",
            "default": {}
        },
        "serviceAccount": {
            "type": "object",
            "properties": {
                "create": {
                    "type": "boolean",
                    "description": "Specifies whether a ServiceAccount should be created",
                    "default": true
                },
                "name": {
                    "type": "string",
                    "description": "The name of the ServiceAccount to use",
                    "default": ""
                },
                "automountServiceAccountToken": {
                    "type": "boolean",
                    "description": "Automount service account token for the server service account",
                    "default": true
                },
                "annotations": {
                    "type": "object",
                    "description": "Annotations for service account. Evaluated as a template. Only used if `create` is `true`.",
                    "default": {}
                }
            }
        },
        "externalRedis": {
            "type": "object",
            "properties": {
                "host": {
                    "type": "string",
                    "description": "External Redis&reg; server host",
                    "default": ""
                },
                "password": {
                    "type": "string",
                    "description": "External Redis&reg; user password",
                    "default": ""
                },
                "port": {
                    "type": "number",
                    "description": "External Redis&reg; server port",
                    "default": 6379
                },
                "existingSecret": {
                    "type": "string",
                    "description": "The name of an existing secret with Redis&reg; credentials",
                    "default": ""
                }
            }
        },
        "redis": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Deploy Redis&reg; sub-chart",
                    "default": true
                },
                "architecture": {
                    "type": "string",
                    "description": "Redis&reg; architecture",
                    "default": "standalone"
                },
                "master": {
                    "type": "object",
                    "properties": {
                        "service": {
                            "type": "object",
                            "properties": {
                                "port": {
                                    "type": "number",
                                    "description": "Redis&reg; (without Sentinel) service port",
                                    "default": 6379
                                }
                            }
                        }
                    }
                },
                "replica": {
                    "type": "object",
                    "properties": {
                        "replicaCount": {
                            "type": "number",
                            "description": "Number of Redis&reg; replicas",
                            "default": 3
                        }
                    }
                },
                "auth": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable Redis&reg; authentication",
                            "default": true
                        },
                        "existingSecret": {
                            "type": "string",
                            "description": "Secret with Redis&reg; credentials",
                            "default": ""
                        },
                        "existingSecretPasswordKey": {
                            "type": "string",
                            "description": "Key inside the existing secret with Redis&reg; credentials",
                            "default": ""
                        },
                        "sentinel": {
                            "type": "boolean",
                            "description": "Enable authentication in the Sentinel nodes",
                            "default": true
                        }
                    }
                },
                "sentinel": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable Redis&reg; sentinel in the deployment",
                            "default": false
                        },
                        "masterSet": {
                            "type": "string",
                            "description": "Name of the Redis&reg; Sentinel master set",
                            "default": "mymaster"
                        },
                        "service": {
                            "type": "object",
                            "properties": {
                                "port": {
                                    "type": "number",
                                    "description": "Redis&reg; (with Sentinel) service port",
                                    "default": 6379
                                },
                                "sentinelPort": {
                                    "type": "number",
                                    "description": "Redis&reg; (with Sentinel) sentinel service port",
                                    "default": 26379
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}