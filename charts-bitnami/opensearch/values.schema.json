{
    "title": "Chart Values",
    "type": "object",
    "properties": {
        "global": {
            "type": "object",
            "properties": {
                "imageRegistry": {
                    "type": "string",
                    "description": "Global Docker image registry",
                    "default": ""
                },
                "imagePullSecrets": {
                    "type": "array",
                    "description": "Global Docker registry secret names as an array",
                    "default": [],
                    "items": {}
                },
                "storageClass": {
                    "type": "string",
                    "description": "Global StorageClass for Persistent Volume(s)",
                    "default": ""
                }
            }
        },
        "kubeVersion": {
            "type": "string",
            "description": "Override Kubernetes version",
            "default": ""
        },
        "nameOverride": {
            "type": "string",
            "description": "String to partially override common.names.fullname",
            "default": ""
        },
        "fullnameOverride": {
            "type": "string",
            "description": "String to fully override common.names.fullname",
            "default": ""
        },
        "commonLabels": {
            "type": "object",
            "description": "Labels to add to all deployed objects",
            "default": {}
        },
        "commonAnnotations": {
            "type": "object",
            "description": "Annotations to add to all deployed objects",
            "default": {}
        },
        "clusterDomain": {
            "type": "string",
            "description": "Kubernetes cluster domain name",
            "default": "cluster.local"
        },
        "extraDeploy": {
            "type": "array",
            "description": "Array of extra objects to deploy with the release",
            "default": [],
            "items": {}
        },
        "namespaceOverride": {
            "type": "string",
            "description": "String to fully override common.names.namespace",
            "default": ""
        },
        "diagnosticMode": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable diagnostic mode (all probes will be disabled and the command will be overridden)",
                    "default": false
                },
                "command": {
                    "type": "array",
                    "description": "Command to override all containers in the deployment",
                    "default": [
                        "sleep"
                    ],
                    "items": {
                        "type": "string"
                    }
                },
                "args": {
                    "type": "array",
                    "description": "Args to override all containers in the deployment",
                    "default": [
                        "infinity"
                    ],
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "clusterName": {
            "type": "string",
            "description": "OpenSearch cluster name",
            "default": "open"
        },
        "containerPorts": {
            "type": "object",
            "properties": {
                "restAPI": {
                    "type": "number",
                    "description": "OpenSearch REST API port",
                    "default": 9200
                },
                "transport": {
                    "type": "number",
                    "description": "OpenSearch Transport port",
                    "default": 9300
                }
            }
        },
        "plugins": {
            "type": "string",
            "description": "Comma, semi-colon or space separated list of plugins to install at initialization",
            "default": ""
        },
        "snapshotRepoPath": {
            "type": "string",
            "description": "File System snapshot repository path",
            "default": ""
        },
        "config": {
            "type": "object",
            "description": "Override opensearch configuration",
            "default": {}
        },
        "extraConfig": {
            "type": "object",
            "description": "Append extra configuration to the opensearch node configuration",
            "default": {}
        },
        "extraHosts": {
            "type": "array",
            "description": "A list of external hosts which are part of this cluster",
            "default": [],
            "items": {}
        },
        "extraVolumes": {
            "type": "array",
            "description": "A list of volumes to be added to the pod",
            "default": [],
            "items": {}
        },
        "extraVolumeMounts": {
            "type": "array",
            "description": "A list of volume mounts to be added to the pod",
            "default": [],
            "items": {}
        },
        "initScripts": {
            "type": "object",
            "description": "Dictionary of init scripts. Evaluated as a template.",
            "default": {}
        },
        "initScriptsCM": {
            "type": "string",
            "description": "ConfigMap with the init scripts. Evaluated as a template.",
            "default": ""
        },
        "initScriptsSecret": {
            "type": "string",
            "description": "Secret containing `/docker-entrypoint-initdb.d` scripts to be executed at initialization time that contain sensitive data. Evaluated as a template.",
            "default": ""
        },
        "extraEnvVars": {
            "type": "array",
            "description": "Array containing extra env vars to be added to all pods (evaluated as a template)",
            "default": [],
            "items": {}
        },
        "extraEnvVarsCM": {
            "type": "string",
            "description": "ConfigMap containing extra env vars to be added to all pods (evaluated as a template)",
            "default": ""
        },
        "extraEnvVarsSecret": {
            "type": "string",
            "description": "Secret containing extra env vars to be added to all pods (evaluated as a template)",
            "default": ""
        },
        "sidecars": {
            "type": "array",
            "description": "Add additional sidecar containers to the all opensearch node pod(s)",
            "default": [],
            "items": {}
        },
        "initContainers": {
            "type": "array",
            "description": "Add additional init containers to the all opensearch node pod(s)",
            "default": [],
            "items": {}
        },
        "useIstioLabels": {
            "type": "boolean",
            "description": "Use this variable to add Istio labels to all pods",
            "default": true
        },
        "image": {
            "type": "object",
            "properties": {
                "registry": {
                    "type": "string",
                    "description": "OpenSearch image registry",
                    "default": "docker.io"
                },
                "repository": {
                    "type": "string",
                    "description": "OpenSearch image repository",
                    "default": "bitnami/opensearch"
                },
                "tag": {
                    "type": "string",
                    "description": "OpenSearch image tag (immutable tags are recommended)",
                    "default": "2.9.0-debian-11-r23"
                },
                "digest": {
                    "type": "string",
                    "description": "OpenSearch image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag",
                    "default": ""
                },
                "pullPolicy": {
                    "type": "string",
                    "description": "OpenSearch image pull policy",
                    "default": "IfNotPresent"
                },
                "pullSecrets": {
                    "type": "array",
                    "description": "OpenSearch image pull secrets",
                    "default": [],
                    "items": {}
                },
                "debug": {
                    "type": "boolean",
                    "description": "Enable OpenSearch image debug mode",
                    "default": false
                }
            }
        },
        "security": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable X-Pack Security settings",
                    "default": false
                },
                "adminPassword": {
                    "type": "string",
                    "description": "Password for 'admin' user",
                    "default": ""
                },
                "logstashPassword": {
                    "type": "string",
                    "description": "Password for Logstash",
                    "default": ""
                },
                "existingSecret": {
                    "type": "string",
                    "description": "Name of the existing secret containing the OpenSearch password and",
                    "default": ""
                },
                "fipsMode": {
                    "type": "boolean",
                    "description": "Configure opensearch with FIPS 140 compliant mode",
                    "default": false
                },
                "tls": {
                    "type": "object",
                    "properties": {
                        "admin": {
                            "type": "object",
                            "properties": {
                                "existingSecret": {
                                    "type": "string",
                                    "description": "Existing secret containing the certificates for admin",
                                    "default": ""
                                }
                            }
                        },
                        "restEncryption": {
                            "type": "boolean",
                            "description": "Enable SSL/TLS encryption for OpenSearch REST API.",
                            "default": false
                        },
                        "autoGenerated": {
                            "type": "boolean",
                            "description": "Create self-signed TLS certificates.",
                            "default": true
                        },
                        "verificationMode": {
                            "type": "string",
                            "description": "Verification mode for SSL communications.",
                            "default": "full"
                        },
                        "master": {
                            "type": "object",
                            "properties": {
                                "existingSecret": {
                                    "type": "string",
                                    "description": "Existing secret containing the certificates for the master nodes",
                                    "default": ""
                                }
                            }
                        },
                        "data": {
                            "type": "object",
                            "properties": {
                                "existingSecret": {
                                    "type": "string",
                                    "description": "Existing secret containing the certificates for the data nodes",
                                    "default": ""
                                }
                            }
                        },
                        "ingest": {
                            "type": "object",
                            "properties": {
                                "existingSecret": {
                                    "type": "string",
                                    "description": "Existing secret containing the certificates for the ingest nodes",
                                    "default": ""
                                }
                            }
                        },
                        "coordinating": {
                            "type": "object",
                            "properties": {
                                "existingSecret": {
                                    "type": "string",
                                    "description": "Existing secret containing the certificates for the coordinating nodes",
                                    "default": ""
                                }
                            }
                        },
                        "keystoreFilename": {
                            "type": "string",
                            "description": "Name of the keystore file",
                            "default": "opensearch.keystore.jks"
                        },
                        "truststoreFilename": {
                            "type": "string",
                            "description": "Name of the truststore",
                            "default": "opensearch.truststore.jks"
                        },
                        "usePemCerts": {
                            "type": "boolean",
                            "description": "Use this variable if your secrets contain PEM certificates instead of JKS/PKCS12",
                            "default": false
                        },
                        "passwordsSecret": {
                            "type": "string",
                            "description": "Existing secret containing the Keystore and Truststore passwords, or key password if PEM certs are used",
                            "default": ""
                        },
                        "keystorePassword": {
                            "type": "string",
                            "description": "Password to access the JKS/PKCS12 keystore or PEM key when they are password-protected.",
                            "default": ""
                        },
                        "truststorePassword": {
                            "type": "string",
                            "description": "Password to access the JKS/PKCS12 truststore when they are password-protected.",
                            "default": ""
                        },
                        "keyPassword": {
                            "type": "string",
                            "description": "Password to access the PEM key when they are password-protected.",
                            "default": ""
                        },
                        "secretKeystoreKey": {
                            "type": "string",
                            "description": "Name of the secret key containing the Keystore password",
                            "default": ""
                        },
                        "secretTruststoreKey": {
                            "type": "string",
                            "description": "Name of the secret key containing the Truststore password",
                            "default": ""
                        },
                        "secretKey": {
                            "type": "string",
                            "description": "Name of the secret key containing the PEM key password",
                            "default": ""
                        },
                        "nodesDN": {
                            "type": "string",
                            "description": "A comma separated list of DN for nodes",
                            "default": ""
                        },
                        "adminDN": {
                            "type": "string",
                            "description": "A comma separated list of DN for admins",
                            "default": ""
                        }
                    }
                }
            }
        },
        "service": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string",
                    "description": "OpenSearch service type",
                    "default": "ClusterIP"
                },
                "ports": {
                    "type": "object",
                    "properties": {
                        "restAPI": {
                            "type": "number",
                            "description": "OpenSearch service REST API port",
                            "default": 9200
                        },
                        "transport": {
                            "type": "number",
                            "description": "OpenSearch service transport port",
                            "default": 9300
                        }
                    }
                },
                "nodePorts": {
                    "type": "object",
                    "properties": {
                        "restAPI": {
                            "type": "string",
                            "description": "Node port for REST API",
                            "default": ""
                        },
                        "transport": {
                            "type": "string",
                            "description": "Node port for REST API",
                            "default": ""
                        }
                    }
                },
                "clusterIP": {
                    "type": "string",
                    "description": "OpenSearch service Cluster IP",
                    "default": ""
                },
                "loadBalancerIP": {
                    "type": "string",
                    "description": "OpenSearch service Load Balancer IP",
                    "default": ""
                },
                "loadBalancerSourceRanges": {
                    "type": "array",
                    "description": "OpenSearch service Load Balancer sources",
                    "default": [],
                    "items": {}
                },
                "externalTrafficPolicy": {
                    "type": "string",
                    "description": "OpenSearch service external traffic policy",
                    "default": "Cluster"
                },
                "annotations": {
                    "type": "object",
                    "description": "Additional custom annotations for OpenSearch service",
                    "default": {}
                },
                "extraPorts": {
                    "type": "array",
                    "description": "Extra ports to expose in OpenSearch service (normally used with the `sidecars` value)",
                    "default": [],
                    "items": {}
                },
                "sessionAffinity": {
                    "type": "string",
                    "description": "Session Affinity for Kubernetes service, can be \"None\" or \"ClientIP\"",
                    "default": "None"
                },
                "sessionAffinityConfig": {
                    "type": "object",
                    "description": "Additional settings for the sessionAffinity",
                    "default": {}
                }
            }
        },
        "ingress": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable ingress record generation for OpenSearch",
                    "default": false
                },
                "pathType": {
                    "type": "string",
                    "description": "Ingress path type",
                    "default": "ImplementationSpecific"
                },
                "apiVersion": {
                    "type": "string",
                    "description": "Force Ingress API version (automatically detected if not set)",
                    "default": ""
                },
                "hostname": {
                    "type": "string",
                    "description": "Default host for the ingress record",
                    "default": "opensearch.local"
                },
                "path": {
                    "type": "string",
                    "description": "Default path for the ingress record",
                    "default": "/"
                },
                "annotations": {
                    "type": "object",
                    "description": "Additional annotations for the Ingress resource. To enable certificate autogeneration, place here your cert-manager annotations.",
                    "default": {}
                },
                "tls": {
                    "type": "boolean",
                    "description": "Enable TLS configuration for the host defined at `ingress.hostname` parameter",
                    "default": false
                },
                "selfSigned": {
                    "type": "boolean",
                    "description": "Create a TLS secret for this ingress record using self-signed certificates generated by Helm",
                    "default": false
                },
                "ingressClassName": {
                    "type": "string",
                    "description": "IngressClass that will be be used to implement the Ingress (Kubernetes 1.18+)",
                    "default": ""
                },
                "extraHosts": {
                    "type": "array",
                    "description": "An array with additional hostname(s) to be covered with the ingress record",
                    "default": [],
                    "items": {}
                },
                "extraPaths": {
                    "type": "array",
                    "description": "An array with additional arbitrary paths that may need to be added to the ingress under the main host",
                    "default": [],
                    "items": {}
                },
                "extraTls": {
                    "type": "array",
                    "description": "TLS configuration for additional hostname(s) to be covered with this ingress record",
                    "default": [],
                    "items": {}
                },
                "secrets": {
                    "type": "array",
                    "description": "Custom TLS certificates as secrets",
                    "default": [],
                    "items": {}
                },
                "extraRules": {
                    "type": "array",
                    "description": "Additional rules to be covered with this ingress record",
                    "default": [],
                    "items": {}
                }
            }
        },
        "master": {
            "type": "object",
            "properties": {
                "masterOnly": {
                    "type": "boolean",
                    "description": "Deploy the OpenSearch master-elegible nodes as master-only nodes. Recommended for high-demand deployments.",
                    "default": true
                },
                "replicaCount": {
                    "type": "number",
                    "description": "Number of master-elegible replicas to deploy",
                    "default": 2
                },
                "extraRoles": {
                    "type": "array",
                    "description": "Append extra roles to the node role",
                    "default": [],
                    "items": {}
                },
                "pdb": {
                    "type": "object",
                    "properties": {
                        "create": {
                            "type": "boolean",
                            "description": "Enable/disable a Pod Disruption Budget creation",
                            "default": false
                        },
                        "minAvailable": {
                            "type": "number",
                            "description": "Minimum number/percentage of pods that should remain scheduled",
                            "default": 1
                        },
                        "maxUnavailable": {
                            "type": "string",
                            "description": "Maximum number/percentage of pods that may be made unavailable",
                            "default": ""
                        }
                    }
                },
                "nameOverride": {
                    "type": "string",
                    "description": "String to partially override opensearch.master.fullname",
                    "default": ""
                },
                "fullnameOverride": {
                    "type": "string",
                    "description": "String to fully override opensearch.master.fullname",
                    "default": ""
                },
                "servicenameOverride": {
                    "type": "string",
                    "description": "String to fully override opensearch.master.servicename",
                    "default": ""
                },
                "updateStrategy": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "Master-elegible nodes statefulset stategy type",
                            "default": "RollingUpdate"
                        }
                    }
                },
                "resources": {
                    "type": "object",
                    "properties": {
                        "limits": {
                            "type": "object",
                            "description": "The resources limits for opensearch containers",
                            "default": {}
                        },
                        "requests": {
                            "type": "object",
                            "description": "The requested resources for opensearch containers",
                            "default": {}
                        }
                    }
                },
                "heapSize": {
                    "type": "string",
                    "description": "OpenSearch master-eligible node heap size.",
                    "default": "128m"
                },
                "podSecurityContext": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enabled master-elegible pods' Security Context",
                            "default": true
                        },
                        "fsGroup": {
                            "type": "number",
                            "description": "Set master-elegible pod's Security Context fsGroup",
                            "default": 1001
                        },
                        "seccompProfile": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string",
                                    "description": "Set Proxy container's Security Context seccomp profile",
                                    "default": "RuntimeDefault"
                                }
                            }
                        }
                    }
                },
                "containerSecurityContext": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enabled master-elegible containers' Security Context",
                            "default": true
                        },
                        "runAsUser": {
                            "type": "number",
                            "description": "Set master-elegible containers' Security Context runAsUser",
                            "default": 1001
                        },
                        "runAsNonRoot": {
                            "type": "boolean",
                            "description": "Set master-elegible containers' Security Context runAsNonRoot",
                            "default": true
                        },
                        "capabilities": {
                            "type": "object",
                            "properties": {
                                "drop": {
                                    "type": "array",
                                    "description": "Set APISIX container's Security Context runAsNonRoot",
                                    "default": [
                                        "ALL"
                                    ],
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "hostAliases": {
                    "type": "array",
                    "description": "master-elegible pods host aliases",
                    "default": [],
                    "items": {}
                },
                "podLabels": {
                    "type": "object",
                    "description": "Extra labels for master-elegible pods",
                    "default": {}
                },
                "podAnnotations": {
                    "type": "object",
                    "description": "Annotations for master-elegible pods",
                    "default": {}
                },
                "podAffinityPreset": {
                    "type": "string",
                    "description": "Pod affinity preset. Ignored if `master.affinity` is set. Allowed values: `soft` or `hard`",
                    "default": ""
                },
                "podAntiAffinityPreset": {
                    "type": "string",
                    "description": "Pod anti-affinity preset. Ignored if `master.affinity` is set. Allowed values: `soft` or `hard`",
                    "default": ""
                },
                "nodeAffinityPreset": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "Node affinity preset type. Ignored if `master.affinity` is set. Allowed values: `soft` or `hard`",
                            "default": ""
                        },
                        "key": {
                            "type": "string",
                            "description": "Node label key to match. Ignored if `master.affinity` is set",
                            "default": ""
                        },
                        "values": {
                            "type": "array",
                            "description": "Node label values to match. Ignored if `master.affinity` is set",
                            "default": [],
                            "items": {}
                        }
                    }
                },
                "affinity": {
                    "type": "object",
                    "description": "Affinity for master-elegible pods assignment",
                    "default": {}
                },
                "nodeSelector": {
                    "type": "object",
                    "description": "Node labels for master-elegible pods assignment",
                    "default": {}
                },
                "tolerations": {
                    "type": "array",
                    "description": "Tolerations for master-elegible pods assignment",
                    "default": [],
                    "items": {}
                },
                "priorityClassName": {
                    "type": "string",
                    "description": "master-elegible pods' priorityClassName",
                    "default": ""
                },
                "schedulerName": {
                    "type": "string",
                    "description": "Name of the k8s scheduler (other than default) for master-elegible pods",
                    "default": ""
                },
                "terminationGracePeriodSeconds": {
                    "type": "string",
                    "description": "In seconds, time the given to the OpenSearch Master pod needs to terminate gracefully",
                    "default": ""
                },
                "topologySpreadConstraints": {
                    "type": "array",
                    "description": "Topology Spread Constraints for pod assignment spread across your cluster among failure-domains. Evaluated as a template",
                    "default": [],
                    "items": {}
                },
                "podManagementPolicy": {
                    "type": "string",
                    "description": "podManagementPolicy to manage scaling operation of OpenSearch master pods",
                    "default": "Parallel"
                },
                "startupProbe": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable/disable the startup probe (master nodes pod)",
                            "default": false
                        },
                        "initialDelaySeconds": {
                            "type": "number",
                            "description": "Delay before startup probe is initiated (master nodes pod)",
                            "default": 90
                        },
                        "periodSeconds": {
                            "type": "number",
                            "description": "How often to perform the probe (master nodes pod)",
                            "default": 10
                        },
                        "timeoutSeconds": {
                            "type": "number",
                            "description": "When the probe times out (master nodes pod)",
                            "default": 5
                        },
                        "successThreshold": {
                            "type": "number",
                            "description": "Minimum consecutive successes for the probe to be considered successful after having failed (master nodes pod)",
                            "default": 1
                        },
                        "failureThreshold": {
                            "type": "number",
                            "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded",
                            "default": 5
                        }
                    }
                },
                "livenessProbe": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable/disable the liveness probe (master-eligible nodes pod)",
                            "default": true
                        },
                        "initialDelaySeconds": {
                            "type": "number",
                            "description": "Delay before liveness probe is initiated (master-eligible nodes pod)",
                            "default": 90
                        },
                        "periodSeconds": {
                            "type": "number",
                            "description": "How often to perform the probe (master-eligible nodes pod)",
                            "default": 10
                        },
                        "timeoutSeconds": {
                            "type": "number",
                            "description": "When the probe times out (master-eligible nodes pod)",
                            "default": 5
                        },
                        "successThreshold": {
                            "type": "number",
                            "description": "Minimum consecutive successes for the probe to be considered successful after having failed (master-eligible nodes pod)",
                            "default": 1
                        },
                        "failureThreshold": {
                            "type": "number",
                            "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded",
                            "default": 5
                        }
                    }
                },
                "readinessProbe": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable/disable the readiness probe (master-eligible nodes pod)",
                            "default": true
                        },
                        "initialDelaySeconds": {
                            "type": "number",
                            "description": "Delay before readiness probe is initiated (master-eligible nodes pod)",
                            "default": 90
                        },
                        "periodSeconds": {
                            "type": "number",
                            "description": "How often to perform the probe (master-eligible nodes pod)",
                            "default": 10
                        },
                        "timeoutSeconds": {
                            "type": "number",
                            "description": "When the probe times out (master-eligible nodes pod)",
                            "default": 5
                        },
                        "successThreshold": {
                            "type": "number",
                            "description": "Minimum consecutive successes for the probe to be considered successful after having failed (master-eligible nodes pod)",
                            "default": 1
                        },
                        "failureThreshold": {
                            "type": "number",
                            "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded",
                            "default": 5
                        }
                    }
                },
                "customStartupProbe": {
                    "type": "object",
                    "description": "Override default startup probe",
                    "default": {}
                },
                "customLivenessProbe": {
                    "type": "object",
                    "description": "Override default liveness probe",
                    "default": {}
                },
                "customReadinessProbe": {
                    "type": "object",
                    "description": "Override default readiness probe",
                    "default": {}
                },
                "command": {
                    "type": "array",
                    "description": "Override default container command (useful when using custom images)",
                    "default": [],
                    "items": {}
                },
                "args": {
                    "type": "array",
                    "description": "Override default container args (useful when using custom images)",
                    "default": [],
                    "items": {}
                },
                "lifecycleHooks": {
                    "type": "object",
                    "description": "for the master-elegible container(s) to automate configuration before or after startup",
                    "default": {}
                },
                "extraEnvVars": {
                    "type": "array",
                    "description": "Array with extra environment variables to add to master-elegible nodes",
                    "default": [],
                    "items": {}
                },
                "extraEnvVarsCM": {
                    "type": "string",
                    "description": "Name of existing ConfigMap containing extra env vars for master-elegible nodes",
                    "default": ""
                },
                "extraEnvVarsSecret": {
                    "type": "string",
                    "description": "Name of existing Secret containing extra env vars for master-elegible nodes",
                    "default": ""
                },
                "extraVolumes": {
                    "type": "array",
                    "description": "Optionally specify extra list of additional volumes for the master-elegible pod(s)",
                    "default": [],
                    "items": {}
                },
                "extraVolumeMounts": {
                    "type": "array",
                    "description": "Optionally specify extra list of additional volumeMounts for the master-elegible container(s)",
                    "default": [],
                    "items": {}
                },
                "sidecars": {
                    "type": "array",
                    "description": "Add additional sidecar containers to the master-elegible pod(s)",
                    "default": [],
                    "items": {}
                },
                "initContainers": {
                    "type": "array",
                    "description": "Add additional init containers to the master-elegible pod(s)",
                    "default": [],
                    "items": {}
                },
                "persistence": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable persistence using a `PersistentVolumeClaim`",
                            "default": true
                        },
                        "storageClass": {
                            "type": "string",
                            "description": "Persistent Volume Storage Class",
                            "default": ""
                        },
                        "existingClaim": {
                            "type": "string",
                            "description": "Existing Persistent Volume Claim",
                            "default": ""
                        },
                        "existingVolume": {
                            "type": "string",
                            "description": "Existing Persistent Volume for use as volume match label selector to the `volumeClaimTemplate`. Ignored when `master.persistence.selector` is set.",
                            "default": ""
                        },
                        "selector": {
                            "type": "object",
                            "description": "Configure custom selector for existing Persistent Volume. Overwrites `master.persistence.existingVolume`",
                            "default": {}
                        },
                        "annotations": {
                            "type": "object",
                            "description": "Persistent Volume Claim annotations",
                            "default": {}
                        },
                        "accessModes": {
                            "type": "array",
                            "description": "Persistent Volume Access Modes",
                            "default": [
                                "ReadWriteOnce"
                            ],
                            "items": {
                                "type": "string"
                            }
                        },
                        "size": {
                            "type": "string",
                            "description": "Persistent Volume Size",
                            "default": "8Gi"
                        }
                    }
                },
                "serviceAccount": {
                    "type": "object",
                    "properties": {
                        "create": {
                            "type": "boolean",
                            "description": "Specifies whether a ServiceAccount should be created",
                            "default": false
                        },
                        "name": {
                            "type": "string",
                            "description": "Name of the service account to use. If not set and create is true, a name is generated using the fullname template.",
                            "default": ""
                        },
                        "automountServiceAccountToken": {
                            "type": "boolean",
                            "description": "Automount service account token for the server service account",
                            "default": false
                        },
                        "annotations": {
                            "type": "object",
                            "description": "Annotations for service account. Evaluated as a template. Only used if `create` is `true`.",
                            "default": {}
                        }
                    }
                },
                "networkPolicy": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable creation of NetworkPolicy resources",
                            "default": false
                        },
                        "allowExternal": {
                            "type": "boolean",
                            "description": "The Policy model to apply",
                            "default": true
                        },
                        "extraIngress": {
                            "type": "array",
                            "description": "Add extra ingress rules to the NetworkPolicy",
                            "default": [],
                            "items": {}
                        },
                        "extraEgress": {
                            "type": "array",
                            "description": "Add extra ingress rules to the NetworkPolicy",
                            "default": [],
                            "items": {}
                        }
                    }
                },
                "autoscaling": {
                    "type": "object",
                    "properties": {
                        "vpa": {
                            "type": "object",
                            "properties": {
                                "enabled": {
                                    "type": "boolean",
                                    "description": "Enable VPA",
                                    "default": false
                                },
                                "annotations": {
                                    "type": "object",
                                    "description": "Annotations for VPA resource",
                                    "default": {}
                                },
                                "controlledResources": {
                                    "type": "array",
                                    "description": "VPA List of resources that the vertical pod autoscaler can control. Defaults to cpu and memory",
                                    "default": [],
                                    "items": {}
                                },
                                "maxAllowed": {
                                    "type": "object",
                                    "description": "VPA Max allowed resources for the pod",
                                    "default": {}
                                },
                                "minAllowed": {
                                    "type": "object",
                                    "description": "VPA Min allowed resources for the pod",
                                    "default": {}
                                },
                                "updatePolicy": {
                                    "type": "object",
                                    "properties": {
                                        "updateMode": {
                                            "type": "string",
                                            "description": "Autoscaling update policy Specifies whether recommended updates are applied when a Pod is started and whether recommended updates are applied during the life of a Pod",
                                            "default": "Auto"
                                        }
                                    }
                                }
                            }
                        },
                        "hpa": {
                            "type": "object",
                            "properties": {
                                "enabled": {
                                    "type": "boolean",
                                    "description": "Enable HPA for APISIX Data Plane",
                                    "default": false
                                },
                                "minReplicas": {
                                    "type": "number",
                                    "description": "Minimum number of APISIX Data Plane replicas",
                                    "default": 3
                                },
                                "maxReplicas": {
                                    "type": "number",
                                    "description": "Maximum number of APISIX Data Plane replicas",
                                    "default": 11
                                },
                                "targetCPU": {
                                    "type": "string",
                                    "description": "Target CPU utilization percentage",
                                    "default": ""
                                },
                                "targetMemory": {
                                    "type": "string",
                                    "description": "Target Memory utilization percentage",
                                    "default": ""
                                }
                            }
                        }
                    }
                }
            }
        },
        "data": {
            "type": "object",
            "properties": {
                "replicaCount": {
                    "type": "number",
                    "description": "Number of data-only replicas to deploy",
                    "default": 2
                },
                "extraRoles": {
                    "type": "array",
                    "description": "Append extra roles to the node role",
                    "default": [],
                    "items": {}
                },
                "pdb": {
                    "type": "object",
                    "properties": {
                        "create": {
                            "type": "boolean",
                            "description": "Enable/disable a Pod Disruption Budget creation",
                            "default": false
                        },
                        "minAvailable": {
                            "type": "number",
                            "description": "Minimum number/percentage of pods that should remain scheduled",
                            "default": 1
                        },
                        "maxUnavailable": {
                            "type": "string",
                            "description": "Maximum number/percentage of pods that may be made unavailable",
                            "default": ""
                        }
                    }
                },
                "nameOverride": {
                    "type": "string",
                    "description": "String to partially override opensearch.data.fullname",
                    "default": ""
                },
                "fullnameOverride": {
                    "type": "string",
                    "description": "String to fully override opensearch.data.fullname",
                    "default": ""
                },
                "servicenameOverride": {
                    "type": "string",
                    "description": "String to fully override opensearch.data.servicename",
                    "default": ""
                },
                "updateStrategy": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "Data-only nodes statefulset stategy type",
                            "default": "RollingUpdate"
                        }
                    }
                },
                "resources": {
                    "type": "object",
                    "properties": {
                        "limits": {
                            "type": "object",
                            "description": "The resources limits for the data containers",
                            "default": {}
                        },
                        "requests": {
                            "type": "object",
                            "properties": {
                                "cpu": {
                                    "type": "string",
                                    "description": "",
                                    "default": "25m"
                                },
                                "memory": {
                                    "type": "string",
                                    "description": "",
                                    "default": "2048Mi"
                                }
                            }
                        }
                    }
                },
                "heapSize": {
                    "type": "string",
                    "description": "OpenSearch data node heap size.",
                    "default": "1024m"
                },
                "podSecurityContext": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enabled data pods' Security Context",
                            "default": true
                        },
                        "fsGroup": {
                            "type": "number",
                            "description": "Set data pod's Security Context fsGroup",
                            "default": 1001
                        },
                        "seccompProfile": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string",
                                    "description": "Set Proxy container's Security Context seccomp profile",
                                    "default": "RuntimeDefault"
                                }
                            }
                        }
                    }
                },
                "containerSecurityContext": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enabled data containers' Security Context",
                            "default": true
                        },
                        "runAsUser": {
                            "type": "number",
                            "description": "Set data containers' Security Context runAsUser",
                            "default": 1001
                        },
                        "runAsNonRoot": {
                            "type": "boolean",
                            "description": "Set data containers' Security Context runAsNonRoot",
                            "default": true
                        },
                        "capabilities": {
                            "type": "object",
                            "properties": {
                                "drop": {
                                    "type": "array",
                                    "description": "Set APISIX container's Security Context runAsNonRoot",
                                    "default": [
                                        "ALL"
                                    ],
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "hostAliases": {
                    "type": "array",
                    "description": "data pods host aliases",
                    "default": [],
                    "items": {}
                },
                "podLabels": {
                    "type": "object",
                    "description": "Extra labels for data pods",
                    "default": {}
                },
                "podAnnotations": {
                    "type": "object",
                    "description": "Annotations for data pods",
                    "default": {}
                },
                "podAffinityPreset": {
                    "type": "string",
                    "description": "Pod affinity preset. Ignored if `data.affinity` is set. Allowed values: `soft` or `hard`",
                    "default": ""
                },
                "podAntiAffinityPreset": {
                    "type": "string",
                    "description": "Pod anti-affinity preset. Ignored if `data.affinity` is set. Allowed values: `soft` or `hard`",
                    "default": ""
                },
                "nodeAffinityPreset": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "Node affinity preset type. Ignored if `data.affinity` is set. Allowed values: `soft` or `hard`",
                            "default": ""
                        },
                        "key": {
                            "type": "string",
                            "description": "Node label key to match. Ignored if `data.affinity` is set",
                            "default": ""
                        },
                        "values": {
                            "type": "array",
                            "description": "Node label values to match. Ignored if `data.affinity` is set",
                            "default": [],
                            "items": {}
                        }
                    }
                },
                "affinity": {
                    "type": "object",
                    "description": "Affinity for data pods assignment",
                    "default": {}
                },
                "nodeSelector": {
                    "type": "object",
                    "description": "Node labels for data pods assignment",
                    "default": {}
                },
                "tolerations": {
                    "type": "array",
                    "description": "Tolerations for data pods assignment",
                    "default": [],
                    "items": {}
                },
                "priorityClassName": {
                    "type": "string",
                    "description": "data pods' priorityClassName",
                    "default": ""
                },
                "schedulerName": {
                    "type": "string",
                    "description": "Name of the k8s scheduler (other than default) for data pods",
                    "default": ""
                },
                "terminationGracePeriodSeconds": {
                    "type": "string",
                    "description": "In seconds, time the given to the OpenSearch data pod needs to terminate gracefully",
                    "default": ""
                },
                "topologySpreadConstraints": {
                    "type": "array",
                    "description": "Topology Spread Constraints for pod assignment spread across your cluster among failure-domains. Evaluated as a template",
                    "default": [],
                    "items": {}
                },
                "podManagementPolicy": {
                    "type": "string",
                    "description": "podManagementPolicy to manage scaling operation of OpenSearch data pods",
                    "default": "Parallel"
                },
                "startupProbe": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable/disable the startup probe (data nodes pod)",
                            "default": false
                        },
                        "initialDelaySeconds": {
                            "type": "number",
                            "description": "Delay before startup probe is initiated (data nodes pod)",
                            "default": 90
                        },
                        "periodSeconds": {
                            "type": "number",
                            "description": "How often to perform the probe (data nodes pod)",
                            "default": 10
                        },
                        "timeoutSeconds": {
                            "type": "number",
                            "description": "When the probe times out (data nodes pod)",
                            "default": 5
                        },
                        "successThreshold": {
                            "type": "number",
                            "description": "Minimum consecutive successes for the probe to be considered successful after having failed (data nodes pod)",
                            "default": 1
                        },
                        "failureThreshold": {
                            "type": "number",
                            "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded",
                            "default": 5
                        }
                    }
                },
                "livenessProbe": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable/disable the liveness probe (data nodes pod)",
                            "default": true
                        },
                        "initialDelaySeconds": {
                            "type": "number",
                            "description": "Delay before liveness probe is initiated (data nodes pod)",
                            "default": 90
                        },
                        "periodSeconds": {
                            "type": "number",
                            "description": "How often to perform the probe (data nodes pod)",
                            "default": 10
                        },
                        "timeoutSeconds": {
                            "type": "number",
                            "description": "When the probe times out (data nodes pod)",
                            "default": 5
                        },
                        "successThreshold": {
                            "type": "number",
                            "description": "Minimum consecutive successes for the probe to be considered successful after having failed (data nodes pod)",
                            "default": 1
                        },
                        "failureThreshold": {
                            "type": "number",
                            "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded",
                            "default": 5
                        }
                    }
                },
                "readinessProbe": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable/disable the readiness probe (data nodes pod)",
                            "default": true
                        },
                        "initialDelaySeconds": {
                            "type": "number",
                            "description": "Delay before readiness probe is initiated (data nodes pod)",
                            "default": 90
                        },
                        "periodSeconds": {
                            "type": "number",
                            "description": "How often to perform the probe (data nodes pod)",
                            "default": 10
                        },
                        "timeoutSeconds": {
                            "type": "number",
                            "description": "When the probe times out (data nodes pod)",
                            "default": 5
                        },
                        "successThreshold": {
                            "type": "number",
                            "description": "Minimum consecutive successes for the probe to be considered successful after having failed (data nodes pod)",
                            "default": 1
                        },
                        "failureThreshold": {
                            "type": "number",
                            "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded",
                            "default": 5
                        }
                    }
                },
                "customStartupProbe": {
                    "type": "object",
                    "description": "Override default startup probe",
                    "default": {}
                },
                "customLivenessProbe": {
                    "type": "object",
                    "description": "Override default liveness probe",
                    "default": {}
                },
                "customReadinessProbe": {
                    "type": "object",
                    "description": "Override default readiness probe",
                    "default": {}
                },
                "command": {
                    "type": "array",
                    "description": "Override default container command (useful when using custom images)",
                    "default": [],
                    "items": {}
                },
                "args": {
                    "type": "array",
                    "description": "Override default container args (useful when using custom images)",
                    "default": [],
                    "items": {}
                },
                "lifecycleHooks": {
                    "type": "object",
                    "description": "for the data container(s) to automate configuration before or after startup",
                    "default": {}
                },
                "extraEnvVars": {
                    "type": "array",
                    "description": "Array with extra environment variables to add to data nodes",
                    "default": [],
                    "items": {}
                },
                "extraEnvVarsCM": {
                    "type": "string",
                    "description": "Name of existing ConfigMap containing extra env vars for data nodes",
                    "default": ""
                },
                "extraEnvVarsSecret": {
                    "type": "string",
                    "description": "Name of existing Secret containing extra env vars for data nodes",
                    "default": ""
                },
                "extraVolumes": {
                    "type": "array",
                    "description": "Optionally specify extra list of additional volumes for the data pod(s)",
                    "default": [],
                    "items": {}
                },
                "extraVolumeMounts": {
                    "type": "array",
                    "description": "Optionally specify extra list of additional volumeMounts for the data container(s)",
                    "default": [],
                    "items": {}
                },
                "sidecars": {
                    "type": "array",
                    "description": "Add additional sidecar containers to the data pod(s)",
                    "default": [],
                    "items": {}
                },
                "initContainers": {
                    "type": "array",
                    "description": "Add additional init containers to the data pod(s)",
                    "default": [],
                    "items": {}
                },
                "persistence": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable persistence using a `PersistentVolumeClaim`",
                            "default": true
                        },
                        "storageClass": {
                            "type": "string",
                            "description": "Persistent Volume Storage Class",
                            "default": ""
                        },
                        "existingClaim": {
                            "type": "string",
                            "description": "Existing Persistent Volume Claim",
                            "default": ""
                        },
                        "existingVolume": {
                            "type": "string",
                            "description": "Existing Persistent Volume for use as volume match label selector to the `volumeClaimTemplate`. Ignored when `data.persistence.selector` is set.",
                            "default": ""
                        },
                        "selector": {
                            "type": "object",
                            "description": "Configure custom selector for existing Persistent Volume. Overwrites `data.persistence.existingVolume`",
                            "default": {}
                        },
                        "annotations": {
                            "type": "object",
                            "description": "Persistent Volume Claim annotations",
                            "default": {}
                        },
                        "accessModes": {
                            "type": "array",
                            "description": "Persistent Volume Access Modes",
                            "default": [
                                "ReadWriteOnce"
                            ],
                            "items": {
                                "type": "string"
                            }
                        },
                        "size": {
                            "type": "string",
                            "description": "Persistent Volume Size",
                            "default": "8Gi"
                        }
                    }
                },
                "serviceAccount": {
                    "type": "object",
                    "properties": {
                        "create": {
                            "type": "boolean",
                            "description": "Specifies whether a ServiceAccount should be created",
                            "default": false
                        },
                        "name": {
                            "type": "string",
                            "description": "Name of the service account to use. If not set and create is true, a name is generated using the fullname template.",
                            "default": ""
                        },
                        "automountServiceAccountToken": {
                            "type": "boolean",
                            "description": "Automount service account token for the server service account",
                            "default": false
                        },
                        "annotations": {
                            "type": "object",
                            "description": "Annotations for service account. Evaluated as a template. Only used if `create` is `true`.",
                            "default": {}
                        }
                    }
                },
                "networkPolicy": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable creation of NetworkPolicy resources",
                            "default": false
                        },
                        "allowExternal": {
                            "type": "boolean",
                            "description": "The Policy model to apply",
                            "default": true
                        },
                        "extraIngress": {
                            "type": "array",
                            "description": "Add extra ingress rules to the NetworkPolicy",
                            "default": [],
                            "items": {}
                        },
                        "extraEgress": {
                            "type": "array",
                            "description": "Add extra ingress rules to the NetworkPolicy",
                            "default": [],
                            "items": {}
                        }
                    }
                },
                "autoscaling": {
                    "type": "object",
                    "properties": {
                        "vpa": {
                            "type": "object",
                            "properties": {
                                "enabled": {
                                    "type": "boolean",
                                    "description": "Enable VPA",
                                    "default": false
                                },
                                "annotations": {
                                    "type": "object",
                                    "description": "Annotations for VPA resource",
                                    "default": {}
                                },
                                "controlledResources": {
                                    "type": "array",
                                    "description": "VPA List of resources that the vertical pod autoscaler can control. Defaults to cpu and memory",
                                    "default": [],
                                    "items": {}
                                },
                                "maxAllowed": {
                                    "type": "object",
                                    "description": "VPA Max allowed resources for the pod",
                                    "default": {}
                                },
                                "minAllowed": {
                                    "type": "object",
                                    "description": "VPA Min allowed resources for the pod",
                                    "default": {}
                                },
                                "updatePolicy": {
                                    "type": "object",
                                    "properties": {
                                        "updateMode": {
                                            "type": "string",
                                            "description": "Autoscaling update policy Specifies whether recommended updates are applied when a Pod is started and whether recommended updates are applied during the life of a Pod",
                                            "default": "Auto"
                                        }
                                    }
                                }
                            }
                        },
                        "hpa": {
                            "type": "object",
                            "properties": {
                                "enabled": {
                                    "type": "boolean",
                                    "description": "Enable HPA for APISIX Data Plane",
                                    "default": false
                                },
                                "minReplicas": {
                                    "type": "number",
                                    "description": "Minimum number of APISIX Data Plane replicas",
                                    "default": 3
                                },
                                "maxReplicas": {
                                    "type": "number",
                                    "description": "Maximum number of APISIX Data Plane replicas",
                                    "default": 11
                                },
                                "targetCPU": {
                                    "type": "string",
                                    "description": "Target CPU utilization percentage",
                                    "default": ""
                                },
                                "targetMemory": {
                                    "type": "string",
                                    "description": "Target Memory utilization percentage",
                                    "default": ""
                                }
                            }
                        }
                    }
                }
            }
        },
        "coordinating": {
            "type": "object",
            "properties": {
                "replicaCount": {
                    "type": "number",
                    "description": "Number of coordinating-only replicas to deploy",
                    "default": 2
                },
                "extraRoles": {
                    "type": "array",
                    "description": "Append extra roles to the node role",
                    "default": [],
                    "items": {}
                },
                "pdb": {
                    "type": "object",
                    "properties": {
                        "create": {
                            "type": "boolean",
                            "description": "Enable/disable a Pod Disruption Budget creation",
                            "default": false
                        },
                        "minAvailable": {
                            "type": "number",
                            "description": "Minimum number/percentage of pods that should remain scheduled",
                            "default": 1
                        },
                        "maxUnavailable": {
                            "type": "string",
                            "description": "Maximum number/percentage of pods that may be made unavailable",
                            "default": ""
                        }
                    }
                },
                "nameOverride": {
                    "type": "string",
                    "description": "String to partially override opensearch.coordinating.fullname",
                    "default": ""
                },
                "fullnameOverride": {
                    "type": "string",
                    "description": "String to fully override opensearch.coordinating.fullname",
                    "default": ""
                },
                "servicenameOverride": {
                    "type": "string",
                    "description": "String to fully override opensearch.coordinating.servicename",
                    "default": ""
                },
                "updateStrategy": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "Coordinating-only nodes statefulset stategy type",
                            "default": "RollingUpdate"
                        }
                    }
                },
                "resources": {
                    "type": "object",
                    "properties": {
                        "limits": {
                            "type": "object",
                            "description": "The resources limits for the coordinating-only containers",
                            "default": {}
                        },
                        "requests": {
                            "type": "object",
                            "properties": {
                                "cpu": {
                                    "type": "string",
                                    "description": "",
                                    "default": "25m"
                                },
                                "memory": {
                                    "type": "string",
                                    "description": "",
                                    "default": "256Mi"
                                }
                            }
                        }
                    }
                },
                "heapSize": {
                    "type": "string",
                    "description": "OpenSearch coordinating node heap size.",
                    "default": "128m"
                },
                "podSecurityContext": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enabled coordinating-only pods' Security Context",
                            "default": true
                        },
                        "fsGroup": {
                            "type": "number",
                            "description": "Set coordinating-only pod's Security Context fsGroup",
                            "default": 1001
                        },
                        "seccompProfile": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string",
                                    "description": "Set Proxy container's Security Context seccomp profile",
                                    "default": "RuntimeDefault"
                                }
                            }
                        }
                    }
                },
                "containerSecurityContext": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enabled coordinating-only containers' Security Context",
                            "default": true
                        },
                        "runAsUser": {
                            "type": "number",
                            "description": "Set coordinating-only containers' Security Context runAsUser",
                            "default": 1001
                        },
                        "runAsNonRoot": {
                            "type": "boolean",
                            "description": "Set coordinating-only containers' Security Context runAsNonRoot",
                            "default": true
                        },
                        "capabilities": {
                            "type": "object",
                            "properties": {
                                "drop": {
                                    "type": "array",
                                    "description": "Set APISIX container's Security Context runAsNonRoot",
                                    "default": [
                                        "ALL"
                                    ],
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "hostAliases": {
                    "type": "array",
                    "description": "coordinating-only pods host aliases",
                    "default": [],
                    "items": {}
                },
                "podLabels": {
                    "type": "object",
                    "description": "Extra labels for coordinating-only pods",
                    "default": {}
                },
                "podAnnotations": {
                    "type": "object",
                    "description": "Annotations for coordinating-only pods",
                    "default": {}
                },
                "podAffinityPreset": {
                    "type": "string",
                    "description": "Pod affinity preset. Ignored if `coordinating.affinity` is set. Allowed values: `soft` or `hard`",
                    "default": ""
                },
                "podAntiAffinityPreset": {
                    "type": "string",
                    "description": "Pod anti-affinity preset. Ignored if `coordinating.affinity` is set. Allowed values: `soft` or `hard`",
                    "default": ""
                },
                "nodeAffinityPreset": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "Node affinity preset type. Ignored if `coordinating.affinity` is set. Allowed values: `soft` or `hard`",
                            "default": ""
                        },
                        "key": {
                            "type": "string",
                            "description": "Node label key to match. Ignored if `coordinating.affinity` is set",
                            "default": ""
                        },
                        "values": {
                            "type": "array",
                            "description": "Node label values to match. Ignored if `coordinating.affinity` is set",
                            "default": [],
                            "items": {}
                        }
                    }
                },
                "affinity": {
                    "type": "object",
                    "description": "Affinity for coordinating-only pods assignment",
                    "default": {}
                },
                "nodeSelector": {
                    "type": "object",
                    "description": "Node labels for coordinating-only pods assignment",
                    "default": {}
                },
                "tolerations": {
                    "type": "array",
                    "description": "Tolerations for coordinating-only pods assignment",
                    "default": [],
                    "items": {}
                },
                "priorityClassName": {
                    "type": "string",
                    "description": "coordinating-only pods' priorityClassName",
                    "default": ""
                },
                "schedulerName": {
                    "type": "string",
                    "description": "Name of the k8s scheduler (other than default) for coordinating-only pods",
                    "default": ""
                },
                "terminationGracePeriodSeconds": {
                    "type": "string",
                    "description": "In seconds, time the given to the OpenSearch coordinating pod needs to terminate gracefully",
                    "default": ""
                },
                "topologySpreadConstraints": {
                    "type": "array",
                    "description": "Topology Spread Constraints for pod assignment spread across your cluster among failure-domains. Evaluated as a template",
                    "default": [],
                    "items": {}
                },
                "podManagementPolicy": {
                    "type": "string",
                    "description": "podManagementPolicy to manage scaling operation of OpenSearch coordinating pods",
                    "default": "Parallel"
                },
                "startupProbe": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable/disable the startup probe (coordinating-only nodes pod)",
                            "default": false
                        },
                        "initialDelaySeconds": {
                            "type": "number",
                            "description": "Delay before startup probe is initiated (coordinating-only nodes pod)",
                            "default": 90
                        },
                        "periodSeconds": {
                            "type": "number",
                            "description": "How often to perform the probe (coordinating-only nodes pod)",
                            "default": 10
                        },
                        "timeoutSeconds": {
                            "type": "number",
                            "description": "When the probe times out (coordinating-only nodes pod)",
                            "default": 5
                        },
                        "successThreshold": {
                            "type": "number",
                            "description": "Minimum consecutive successes for the probe to be considered successful after having failed (coordinating-only nodes pod)",
                            "default": 1
                        },
                        "failureThreshold": {
                            "type": "number",
                            "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded",
                            "default": 5
                        }
                    }
                },
                "livenessProbe": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable/disable the liveness probe (coordinating-only nodes pod)",
                            "default": true
                        },
                        "initialDelaySeconds": {
                            "type": "number",
                            "description": "Delay before liveness probe is initiated (coordinating-only nodes pod)",
                            "default": 90
                        },
                        "periodSeconds": {
                            "type": "number",
                            "description": "How often to perform the probe (coordinating-only nodes pod)",
                            "default": 10
                        },
                        "timeoutSeconds": {
                            "type": "number",
                            "description": "When the probe times out (coordinating-only nodes pod)",
                            "default": 5
                        },
                        "successThreshold": {
                            "type": "number",
                            "description": "Minimum consecutive successes for the probe to be considered successful after having failed (coordinating-only nodes pod)",
                            "default": 1
                        },
                        "failureThreshold": {
                            "type": "number",
                            "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded",
                            "default": 5
                        }
                    }
                },
                "readinessProbe": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable/disable the readiness probe (coordinating-only nodes pod)",
                            "default": true
                        },
                        "initialDelaySeconds": {
                            "type": "number",
                            "description": "Delay before readiness probe is initiated (coordinating-only nodes pod)",
                            "default": 90
                        },
                        "periodSeconds": {
                            "type": "number",
                            "description": "How often to perform the probe (coordinating-only nodes pod)",
                            "default": 10
                        },
                        "timeoutSeconds": {
                            "type": "number",
                            "description": "When the probe times out (coordinating-only nodes pod)",
                            "default": 5
                        },
                        "successThreshold": {
                            "type": "number",
                            "description": "Minimum consecutive successes for the probe to be considered successful after having failed (coordinating-only nodes pod)",
                            "default": 1
                        },
                        "failureThreshold": {
                            "type": "number",
                            "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded",
                            "default": 5
                        }
                    }
                },
                "customStartupProbe": {
                    "type": "object",
                    "description": "Override default startup probe",
                    "default": {}
                },
                "customLivenessProbe": {
                    "type": "object",
                    "description": "Override default liveness probe",
                    "default": {}
                },
                "customReadinessProbe": {
                    "type": "object",
                    "description": "Override default readiness probe",
                    "default": {}
                },
                "command": {
                    "type": "array",
                    "description": "Override default container command (useful when using custom images)",
                    "default": [],
                    "items": {}
                },
                "args": {
                    "type": "array",
                    "description": "Override default container args (useful when using custom images)",
                    "default": [],
                    "items": {}
                },
                "lifecycleHooks": {
                    "type": "object",
                    "description": "for the coordinating-only container(s) to automate configuration before or after startup",
                    "default": {}
                },
                "extraEnvVars": {
                    "type": "array",
                    "description": "Array with extra environment variables to add to coordinating-only nodes",
                    "default": [],
                    "items": {}
                },
                "extraEnvVarsCM": {
                    "type": "string",
                    "description": "Name of existing ConfigMap containing extra env vars for coordinating-only nodes",
                    "default": ""
                },
                "extraEnvVarsSecret": {
                    "type": "string",
                    "description": "Name of existing Secret containing extra env vars for coordinating-only nodes",
                    "default": ""
                },
                "extraVolumes": {
                    "type": "array",
                    "description": "Optionally specify extra list of additional volumes for the coordinating-only pod(s)",
                    "default": [],
                    "items": {}
                },
                "extraVolumeMounts": {
                    "type": "array",
                    "description": "Optionally specify extra list of additional volumeMounts for the coordinating-only container(s)",
                    "default": [],
                    "items": {}
                },
                "sidecars": {
                    "type": "array",
                    "description": "Add additional sidecar containers to the coordinating-only pod(s)",
                    "default": [],
                    "items": {}
                },
                "initContainers": {
                    "type": "array",
                    "description": "Add additional init containers to the coordinating-only pod(s)",
                    "default": [],
                    "items": {}
                },
                "serviceAccount": {
                    "type": "object",
                    "properties": {
                        "create": {
                            "type": "boolean",
                            "description": "Specifies whether a ServiceAccount should be created",
                            "default": false
                        },
                        "name": {
                            "type": "string",
                            "description": "Name of the service account to use. If not set and create is true, a name is generated using the fullname template.",
                            "default": ""
                        },
                        "automountServiceAccountToken": {
                            "type": "boolean",
                            "description": "Automount service account token for the server service account",
                            "default": false
                        },
                        "annotations": {
                            "type": "object",
                            "description": "Annotations for service account. Evaluated as a template. Only used if `create` is `true`.",
                            "default": {}
                        }
                    }
                },
                "networkPolicy": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable creation of NetworkPolicy resources",
                            "default": false
                        },
                        "allowExternal": {
                            "type": "boolean",
                            "description": "The Policy model to apply",
                            "default": true
                        },
                        "extraIngress": {
                            "type": "array",
                            "description": "Add extra ingress rules to the NetworkPolicy",
                            "default": [],
                            "items": {}
                        },
                        "extraEgress": {
                            "type": "array",
                            "description": "Add extra ingress rules to the NetworkPolicy",
                            "default": [],
                            "items": {}
                        }
                    }
                },
                "autoscaling": {
                    "type": "object",
                    "properties": {
                        "vpa": {
                            "type": "object",
                            "properties": {
                                "enabled": {
                                    "type": "boolean",
                                    "description": "Enable VPA",
                                    "default": false
                                },
                                "annotations": {
                                    "type": "object",
                                    "description": "Annotations for VPA resource",
                                    "default": {}
                                },
                                "controlledResources": {
                                    "type": "array",
                                    "description": "VPA List of resources that the vertical pod autoscaler can control. Defaults to cpu and memory",
                                    "default": [],
                                    "items": {}
                                },
                                "maxAllowed": {
                                    "type": "object",
                                    "description": "VPA Max allowed resources for the pod",
                                    "default": {}
                                },
                                "minAllowed": {
                                    "type": "object",
                                    "description": "VPA Min allowed resources for the pod",
                                    "default": {}
                                },
                                "updatePolicy": {
                                    "type": "object",
                                    "properties": {
                                        "updateMode": {
                                            "type": "string",
                                            "description": "Autoscaling update policy Specifies whether recommended updates are applied when a Pod is started and whether recommended updates are applied during the life of a Pod",
                                            "default": "Auto"
                                        }
                                    }
                                }
                            }
                        },
                        "hpa": {
                            "type": "object",
                            "properties": {
                                "enabled": {
                                    "type": "boolean",
                                    "description": "Enable HPA for APISIX Data Plane",
                                    "default": false
                                },
                                "minReplicas": {
                                    "type": "number",
                                    "description": "Minimum number of APISIX Data Plane replicas",
                                    "default": 3
                                },
                                "maxReplicas": {
                                    "type": "number",
                                    "description": "Maximum number of APISIX Data Plane replicas",
                                    "default": 11
                                },
                                "targetCPU": {
                                    "type": "string",
                                    "description": "Target CPU utilization percentage",
                                    "default": ""
                                },
                                "targetMemory": {
                                    "type": "string",
                                    "description": "Target Memory utilization percentage",
                                    "default": ""
                                }
                            }
                        }
                    }
                }
            }
        },
        "ingest": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable ingest nodes",
                    "default": true
                },
                "replicaCount": {
                    "type": "number",
                    "description": "Number of ingest-only replicas to deploy",
                    "default": 2
                },
                "extraRoles": {
                    "type": "array",
                    "description": "Append extra roles to the node role",
                    "default": [],
                    "items": {}
                },
                "pdb": {
                    "type": "object",
                    "properties": {
                        "create": {
                            "type": "boolean",
                            "description": "Enable/disable a Pod Disruption Budget creation",
                            "default": false
                        },
                        "minAvailable": {
                            "type": "number",
                            "description": "Minimum number/percentage of pods that should remain scheduled",
                            "default": 1
                        },
                        "maxUnavailable": {
                            "type": "string",
                            "description": "Maximum number/percentage of pods that may be made unavailable",
                            "default": ""
                        }
                    }
                },
                "nameOverride": {
                    "type": "string",
                    "description": "String to partially override opensearch.ingest.fullname",
                    "default": ""
                },
                "fullnameOverride": {
                    "type": "string",
                    "description": "String to fully override opensearch.ingest.fullname",
                    "default": ""
                },
                "servicenameOverride": {
                    "type": "string",
                    "description": "String to fully override ingest.master.servicename",
                    "default": ""
                },
                "updateStrategy": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "Ingest-only nodes statefulset stategy type",
                            "default": "RollingUpdate"
                        }
                    }
                },
                "resources": {
                    "type": "object",
                    "properties": {
                        "requests": {
                            "type": "object",
                            "properties": {
                                "cpu": {
                                    "type": "string",
                                    "description": "",
                                    "default": "25m"
                                },
                                "memory": {
                                    "type": "string",
                                    "description": "",
                                    "default": "256Mi"
                                }
                            }
                        },
                        "limits": {
                            "type": "object",
                            "description": "The resources limits for the ingest-only containers",
                            "default": {}
                        }
                    }
                },
                "heapSize": {
                    "type": "string",
                    "description": "OpenSearch ingest-only node heap size.",
                    "default": "128m"
                },
                "podSecurityContext": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enabled ingest-only pods' Security Context",
                            "default": true
                        },
                        "fsGroup": {
                            "type": "number",
                            "description": "Set ingest-only pod's Security Context fsGroup",
                            "default": 1001
                        },
                        "seccompProfile": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string",
                                    "description": "Set Proxy container's Security Context seccomp profile",
                                    "default": "RuntimeDefault"
                                }
                            }
                        }
                    }
                },
                "containerSecurityContext": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enabled ingest-only containers' Security Context",
                            "default": true
                        },
                        "runAsUser": {
                            "type": "number",
                            "description": "Set ingest-only containers' Security Context runAsUser",
                            "default": 1001
                        },
                        "runAsNonRoot": {
                            "type": "boolean",
                            "description": "Set ingest-only containers' Security Context runAsNonRoot",
                            "default": true
                        },
                        "capabilities": {
                            "type": "object",
                            "properties": {
                                "drop": {
                                    "type": "array",
                                    "description": "Set APISIX container's Security Context runAsNonRoot",
                                    "default": [
                                        "ALL"
                                    ],
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "hostAliases": {
                    "type": "array",
                    "description": "ingest-only pods host aliases",
                    "default": [],
                    "items": {}
                },
                "podLabels": {
                    "type": "object",
                    "description": "Extra labels for ingest-only pods",
                    "default": {}
                },
                "podAnnotations": {
                    "type": "object",
                    "description": "Annotations for ingest-only pods",
                    "default": {}
                },
                "podAffinityPreset": {
                    "type": "string",
                    "description": "Pod affinity preset. Ignored if `ingest.affinity` is set. Allowed values: `soft` or `hard`",
                    "default": ""
                },
                "podAntiAffinityPreset": {
                    "type": "string",
                    "description": "Pod anti-affinity preset. Ignored if `ingest.affinity` is set. Allowed values: `soft` or `hard`",
                    "default": ""
                },
                "nodeAffinityPreset": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "Node affinity preset type. Ignored if `ingest.affinity` is set. Allowed values: `soft` or `hard`",
                            "default": ""
                        },
                        "key": {
                            "type": "string",
                            "description": "Node label key to match. Ignored if `ingest.affinity` is set",
                            "default": ""
                        },
                        "values": {
                            "type": "array",
                            "description": "Node label values to match. Ignored if `ingest.affinity` is set",
                            "default": [],
                            "items": {}
                        }
                    }
                },
                "affinity": {
                    "type": "object",
                    "description": "Affinity for ingest-only pods assignment",
                    "default": {}
                },
                "nodeSelector": {
                    "type": "object",
                    "description": "Node labels for ingest-only pods assignment",
                    "default": {}
                },
                "tolerations": {
                    "type": "array",
                    "description": "Tolerations for ingest-only pods assignment",
                    "default": [],
                    "items": {}
                },
                "priorityClassName": {
                    "type": "string",
                    "description": "ingest-only pods' priorityClassName",
                    "default": ""
                },
                "schedulerName": {
                    "type": "string",
                    "description": "Name of the k8s scheduler (other than default) for ingest-only pods",
                    "default": ""
                },
                "terminationGracePeriodSeconds": {
                    "type": "string",
                    "description": "In seconds, time the given to the OpenSearch ingest pod needs to terminate gracefully",
                    "default": ""
                },
                "topologySpreadConstraints": {
                    "type": "array",
                    "description": "Topology Spread Constraints for pod assignment spread across your cluster among failure-domains. Evaluated as a template",
                    "default": [],
                    "items": {}
                },
                "podManagementPolicy": {
                    "type": "string",
                    "description": "podManagementPolicy to manage scaling operation of OpenSearch ingest pods",
                    "default": "Parallel"
                },
                "startupProbe": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable/disable the startup probe (ingest-only nodes pod)",
                            "default": false
                        },
                        "initialDelaySeconds": {
                            "type": "number",
                            "description": "Delay before startup probe is initiated (ingest-only nodes pod)",
                            "default": 90
                        },
                        "periodSeconds": {
                            "type": "number",
                            "description": "How often to perform the probe (ingest-only nodes pod)",
                            "default": 10
                        },
                        "timeoutSeconds": {
                            "type": "number",
                            "description": "When the probe times out (ingest-only nodes pod)",
                            "default": 5
                        },
                        "successThreshold": {
                            "type": "number",
                            "description": "Minimum consecutive successes for the probe to be considered successful after having failed (ingest-only nodes pod)",
                            "default": 1
                        },
                        "failureThreshold": {
                            "type": "number",
                            "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded",
                            "default": 5
                        }
                    }
                },
                "livenessProbe": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable/disable the liveness probe (ingest-only nodes pod)",
                            "default": true
                        },
                        "initialDelaySeconds": {
                            "type": "number",
                            "description": "Delay before liveness probe is initiated (ingest-only nodes pod)",
                            "default": 90
                        },
                        "periodSeconds": {
                            "type": "number",
                            "description": "How often to perform the probe (ingest-only nodes pod)",
                            "default": 10
                        },
                        "timeoutSeconds": {
                            "type": "number",
                            "description": "When the probe times out (ingest-only nodes pod)",
                            "default": 5
                        },
                        "successThreshold": {
                            "type": "number",
                            "description": "Minimum consecutive successes for the probe to be considered successful after having failed (ingest-only nodes pod)",
                            "default": 1
                        },
                        "failureThreshold": {
                            "type": "number",
                            "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded",
                            "default": 5
                        }
                    }
                },
                "readinessProbe": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable/disable the readiness probe (ingest-only nodes pod)",
                            "default": true
                        },
                        "initialDelaySeconds": {
                            "type": "number",
                            "description": "Delay before readiness probe is initiated (ingest-only nodes pod)",
                            "default": 90
                        },
                        "periodSeconds": {
                            "type": "number",
                            "description": "How often to perform the probe (ingest-only nodes pod)",
                            "default": 10
                        },
                        "timeoutSeconds": {
                            "type": "number",
                            "description": "When the probe times out (ingest-only nodes pod)",
                            "default": 5
                        },
                        "successThreshold": {
                            "type": "number",
                            "description": "Minimum consecutive successes for the probe to be considered successful after having failed (ingest-only nodes pod)",
                            "default": 1
                        },
                        "failureThreshold": {
                            "type": "number",
                            "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded",
                            "default": 5
                        }
                    }
                },
                "customStartupProbe": {
                    "type": "object",
                    "description": "Override default startup probe",
                    "default": {}
                },
                "customLivenessProbe": {
                    "type": "object",
                    "description": "Override default liveness probe",
                    "default": {}
                },
                "customReadinessProbe": {
                    "type": "object",
                    "description": "Override default readiness probe",
                    "default": {}
                },
                "command": {
                    "type": "array",
                    "description": "Override default container command (useful when using custom images)",
                    "default": [],
                    "items": {}
                },
                "args": {
                    "type": "array",
                    "description": "Override default container args (useful when using custom images)",
                    "default": [],
                    "items": {}
                },
                "lifecycleHooks": {
                    "type": "object",
                    "description": "for the ingest-only container(s) to automate configuration before or after startup",
                    "default": {}
                },
                "extraEnvVars": {
                    "type": "array",
                    "description": "Array with extra environment variables to add to ingest-only nodes",
                    "default": [],
                    "items": {}
                },
                "extraEnvVarsCM": {
                    "type": "string",
                    "description": "Name of existing ConfigMap containing extra env vars for ingest-only nodes",
                    "default": ""
                },
                "extraEnvVarsSecret": {
                    "type": "string",
                    "description": "Name of existing Secret containing extra env vars for ingest-only nodes",
                    "default": ""
                },
                "extraVolumes": {
                    "type": "array",
                    "description": "Optionally specify extra list of additional volumes for the ingest-only pod(s)",
                    "default": [],
                    "items": {}
                },
                "extraVolumeMounts": {
                    "type": "array",
                    "description": "Optionally specify extra list of additional volumeMounts for the ingest-only container(s)",
                    "default": [],
                    "items": {}
                },
                "sidecars": {
                    "type": "array",
                    "description": "Add additional sidecar containers to the ingest-only pod(s)",
                    "default": [],
                    "items": {}
                },
                "initContainers": {
                    "type": "array",
                    "description": "Add additional init containers to the ingest-only pod(s)",
                    "default": [],
                    "items": {}
                },
                "serviceAccount": {
                    "type": "object",
                    "properties": {
                        "create": {
                            "type": "boolean",
                            "description": "Specifies whether a ServiceAccount should be created",
                            "default": false
                        },
                        "name": {
                            "type": "string",
                            "description": "Name of the service account to use. If not set and create is true, a name is generated using the fullname template.",
                            "default": ""
                        },
                        "automountServiceAccountToken": {
                            "type": "boolean",
                            "description": "Automount service account token for the server service account",
                            "default": false
                        },
                        "annotations": {
                            "type": "object",
                            "description": "Annotations for service account. Evaluated as a template. Only used if `create` is `true`.",
                            "default": {}
                        }
                    }
                },
                "networkPolicy": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable creation of NetworkPolicy resources",
                            "default": false
                        },
                        "allowExternal": {
                            "type": "boolean",
                            "description": "The Policy model to apply",
                            "default": true
                        },
                        "extraIngress": {
                            "type": "array",
                            "description": "Add extra ingress rules to the NetworkPolicy",
                            "default": [],
                            "items": {}
                        },
                        "extraEgress": {
                            "type": "array",
                            "description": "Add extra ingress rules to the NetworkPolicy",
                            "default": [],
                            "items": {}
                        }
                    }
                },
                "autoscaling": {
                    "type": "object",
                    "properties": {
                        "vpa": {
                            "type": "object",
                            "properties": {
                                "enabled": {
                                    "type": "boolean",
                                    "description": "Enable VPA",
                                    "default": false
                                },
                                "annotations": {
                                    "type": "object",
                                    "description": "Annotations for VPA resource",
                                    "default": {}
                                },
                                "controlledResources": {
                                    "type": "array",
                                    "description": "VPA List of resources that the vertical pod autoscaler can control. Defaults to cpu and memory",
                                    "default": [],
                                    "items": {}
                                },
                                "maxAllowed": {
                                    "type": "object",
                                    "description": "VPA Max allowed resources for the pod",
                                    "default": {}
                                },
                                "minAllowed": {
                                    "type": "object",
                                    "description": "VPA Min allowed resources for the pod",
                                    "default": {}
                                },
                                "updatePolicy": {
                                    "type": "object",
                                    "properties": {
                                        "updateMode": {
                                            "type": "string",
                                            "description": "Autoscaling update policy Specifies whether recommended updates are applied when a Pod is started and whether recommended updates are applied during the life of a Pod",
                                            "default": "Auto"
                                        }
                                    }
                                }
                            }
                        },
                        "hpa": {
                            "type": "object",
                            "properties": {
                                "enabled": {
                                    "type": "boolean",
                                    "description": "Enable HPA for APISIX Data Plane",
                                    "default": false
                                },
                                "minReplicas": {
                                    "type": "number",
                                    "description": "Minimum number of APISIX Data Plane replicas",
                                    "default": 3
                                },
                                "maxReplicas": {
                                    "type": "number",
                                    "description": "Maximum number of APISIX Data Plane replicas",
                                    "default": 11
                                },
                                "targetCPU": {
                                    "type": "string",
                                    "description": "Target CPU utilization percentage",
                                    "default": ""
                                },
                                "targetMemory": {
                                    "type": "string",
                                    "description": "Target Memory utilization percentage",
                                    "default": ""
                                }
                            }
                        }
                    }
                },
                "service": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable Ingest-only service",
                            "default": false
                        },
                        "type": {
                            "type": "string",
                            "description": "OpenSearch ingest-only service type",
                            "default": "ClusterIP"
                        },
                        "ports": {
                            "type": "object",
                            "properties": {
                                "restAPI": {
                                    "type": "number",
                                    "description": "OpenSearch service REST API port",
                                    "default": 9200
                                },
                                "transport": {
                                    "type": "number",
                                    "description": "OpenSearch service transport port",
                                    "default": 9300
                                }
                            }
                        },
                        "nodePorts": {
                            "type": "object",
                            "properties": {
                                "restAPI": {
                                    "type": "string",
                                    "description": "Node port for REST API",
                                    "default": ""
                                },
                                "transport": {
                                    "type": "string",
                                    "description": "Node port for REST API",
                                    "default": ""
                                }
                            }
                        },
                        "clusterIP": {
                            "type": "string",
                            "description": "OpenSearch ingest-only service Cluster IP",
                            "default": ""
                        },
                        "loadBalancerIP": {
                            "type": "string",
                            "description": "OpenSearch ingest-only service Load Balancer IP",
                            "default": ""
                        },
                        "loadBalancerSourceRanges": {
                            "type": "array",
                            "description": "OpenSearch ingest-only service Load Balancer sources",
                            "default": [],
                            "items": {}
                        },
                        "externalTrafficPolicy": {
                            "type": "string",
                            "description": "OpenSearch ingest-only service external traffic policy",
                            "default": "Cluster"
                        },
                        "extraPorts": {
                            "type": "array",
                            "description": "Extra ports to expose (normally used with the `sidecar` value)",
                            "default": [],
                            "items": {}
                        },
                        "annotations": {
                            "type": "object",
                            "description": "Additional custom annotations for OpenSearch ingest-only service",
                            "default": {}
                        },
                        "sessionAffinity": {
                            "type": "string",
                            "description": "Session Affinity for Kubernetes service, can be \"None\" or \"ClientIP\"",
                            "default": "None"
                        },
                        "sessionAffinityConfig": {
                            "type": "object",
                            "description": "Additional settings for the sessionAffinity",
                            "default": {}
                        }
                    }
                },
                "ingress": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable ingress record generation for OpenSearch",
                            "default": false
                        },
                        "pathType": {
                            "type": "string",
                            "description": "Ingress path type",
                            "default": "ImplementationSpecific"
                        },
                        "apiVersion": {
                            "type": "string",
                            "description": "Force Ingress API version (automatically detected if not set)",
                            "default": ""
                        },
                        "hostname": {
                            "type": "string",
                            "description": "Default host for the ingress record",
                            "default": "opensearch-ingest.local"
                        },
                        "path": {
                            "type": "string",
                            "description": "Default path for the ingress record",
                            "default": "/"
                        },
                        "annotations": {
                            "type": "object",
                            "description": "Additional annotations for the Ingress resource. To enable certificate autogeneration, place here your cert-manager annotations.",
                            "default": {}
                        },
                        "tls": {
                            "type": "boolean",
                            "description": "Enable TLS configuration for the host defined at `ingress.hostname` parameter",
                            "default": false
                        },
                        "selfSigned": {
                            "type": "boolean",
                            "description": "Create a TLS secret for this ingress record using self-signed certificates generated by Helm",
                            "default": false
                        },
                        "ingressClassName": {
                            "type": "string",
                            "description": "IngressClass that will be be used to implement the Ingress (Kubernetes 1.18+)",
                            "default": ""
                        },
                        "extraHosts": {
                            "type": "array",
                            "description": "An array with additional hostname(s) to be covered with the ingress record",
                            "default": [],
                            "items": {}
                        },
                        "extraPaths": {
                            "type": "array",
                            "description": "An array with additional arbitrary paths that may need to be added to the ingress under the main host",
                            "default": [],
                            "items": {}
                        },
                        "extraTls": {
                            "type": "array",
                            "description": "TLS configuration for additional hostname(s) to be covered with this ingress record",
                            "default": [],
                            "items": {}
                        },
                        "secrets": {
                            "type": "array",
                            "description": "Custom TLS certificates as secrets",
                            "default": [],
                            "items": {}
                        },
                        "extraRules": {
                            "type": "array",
                            "description": "Additional rules to be covered with this ingress record",
                            "default": [],
                            "items": {}
                        }
                    }
                }
            }
        },
        "volumePermissions": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable init container that changes volume permissions in the data directory (for cases where the default k8s `runAsUser` and `fsUser` values do not work)",
                    "default": false
                },
                "image": {
                    "type": "object",
                    "properties": {
                        "registry": {
                            "type": "string",
                            "description": "Init container volume-permissions image registry",
                            "default": "docker.io"
                        },
                        "repository": {
                            "type": "string",
                            "description": "Init container volume-permissions image name",
                            "default": "bitnami/os-shell"
                        },
                        "tag": {
                            "type": "string",
                            "description": "Init container volume-permissions image tag",
                            "default": "11-debian-11-r43"
                        },
                        "digest": {
                            "type": "string",
                            "description": "Init container volume-permissions image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag",
                            "default": ""
                        },
                        "pullPolicy": {
                            "type": "string",
                            "description": "Init container volume-permissions image pull policy",
                            "default": "IfNotPresent"
                        },
                        "pullSecrets": {
                            "type": "array",
                            "description": "Init container volume-permissions image pull secrets",
                            "default": [],
                            "items": {}
                        }
                    }
                },
                "resources": {
                    "type": "object",
                    "properties": {
                        "limits": {
                            "type": "object",
                            "description": "The resources limits for the container",
                            "default": {}
                        },
                        "requests": {
                            "type": "object",
                            "description": "The requested resources for the container",
                            "default": {}
                        }
                    }
                }
            }
        },
        "sysctlImage": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable kernel settings modifier image",
                    "default": true
                },
                "registry": {
                    "type": "string",
                    "description": "Kernel settings modifier image registry",
                    "default": "docker.io"
                },
                "repository": {
                    "type": "string",
                    "description": "Kernel settings modifier image repository",
                    "default": "bitnami/os-shell"
                },
                "tag": {
                    "type": "string",
                    "description": "Kernel settings modifier image tag",
                    "default": "11-debian-11-r43"
                },
                "digest": {
                    "type": "string",
                    "description": "Kernel settings modifier image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag",
                    "default": ""
                },
                "pullPolicy": {
                    "type": "string",
                    "description": "Kernel settings modifier image pull policy",
                    "default": "IfNotPresent"
                },
                "pullSecrets": {
                    "type": "array",
                    "description": "Kernel settings modifier image pull secrets",
                    "default": [],
                    "items": {}
                },
                "resources": {
                    "type": "object",
                    "properties": {
                        "limits": {
                            "type": "object",
                            "description": "The resources limits for the container",
                            "default": {}
                        },
                        "requests": {
                            "type": "object",
                            "description": "The requested resources for the container",
                            "default": {}
                        }
                    }
                }
            }
        },
        "dashboards": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enables OpenSearch Dashboards deployment",
                    "default": false
                },
                "image": {
                    "type": "object",
                    "properties": {
                        "registry": {
                            "type": "string",
                            "description": "OpenSearch Dashboards image registry",
                            "default": "docker.io"
                        },
                        "repository": {
                            "type": "string",
                            "description": "OpenSearch Dashboards image repository",
                            "default": "bitnami/opensearch-dashboards"
                        },
                        "tag": {
                            "type": "string",
                            "description": "OpenSearch Dashboards image tag (immutable tags are recommended)",
                            "default": "2.9.0-debian-11-r23"
                        },
                        "digest": {
                            "type": "string",
                            "description": "OpenSearch Dashboards image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag",
                            "default": ""
                        },
                        "pullPolicy": {
                            "type": "string",
                            "description": "OpenSearch Dashboards image pull policy",
                            "default": "IfNotPresent"
                        },
                        "pullSecrets": {
                            "type": "array",
                            "description": "OpenSearch Dashboards image pull secrets",
                            "default": [],
                            "items": {}
                        },
                        "debug": {
                            "type": "boolean",
                            "description": "Enable OpenSearch Dashboards image debug mode",
                            "default": false
                        }
                    }
                },
                "service": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "OpenSearch Dashboards service type",
                            "default": "ClusterIP"
                        },
                        "ports": {
                            "type": "object",
                            "properties": {
                                "http": {
                                    "type": "number",
                                    "description": "OpenSearch Dashboards service web UI port",
                                    "default": 5601
                                }
                            }
                        },
                        "nodePorts": {
                            "type": "object",
                            "properties": {
                                "http": {
                                    "type": "string",
                                    "description": "Node port for web UI",
                                    "default": ""
                                }
                            }
                        },
                        "clusterIP": {
                            "type": "string",
                            "description": "OpenSearch Dashboards service Cluster IP",
                            "default": ""
                        },
                        "loadBalancerIP": {
                            "type": "string",
                            "description": "OpenSearch Dashboards service Load Balancer IP",
                            "default": ""
                        },
                        "loadBalancerSourceRanges": {
                            "type": "array",
                            "description": "OpenSearch Dashboards service Load Balancer sources",
                            "default": [],
                            "items": {}
                        },
                        "externalTrafficPolicy": {
                            "type": "string",
                            "description": "OpenSearch Dashboards service external traffic policy",
                            "default": "Cluster"
                        },
                        "annotations": {
                            "type": "object",
                            "description": "Additional custom annotations for OpenSearch Dashboards service",
                            "default": {}
                        },
                        "extraPorts": {
                            "type": "array",
                            "description": "Extra ports to expose in OpenSearch Dashboards service (normally used with the `sidecars` value)",
                            "default": [],
                            "items": {}
                        },
                        "sessionAffinity": {
                            "type": "string",
                            "description": "Session Affinity for Kubernetes service, can be \"None\" or \"ClientIP\"",
                            "default": "None"
                        },
                        "sessionAffinityConfig": {
                            "type": "object",
                            "description": "Additional settings for the sessionAffinity",
                            "default": {}
                        }
                    }
                },
                "containerPorts": {
                    "type": "object",
                    "properties": {
                        "http": {
                            "type": "number",
                            "description": "OpenSearch Dashboards HTTP port",
                            "default": 5601
                        }
                    }
                },
                "password": {
                    "type": "string",
                    "description": "Password for OpenSearch Dashboards",
                    "default": ""
                },
                "replicaCount": {
                    "type": "number",
                    "description": "Number of data-only replicas to deploy",
                    "default": 1
                },
                "pdb": {
                    "type": "object",
                    "properties": {
                        "create": {
                            "type": "boolean",
                            "description": "Enable/disable a Pod Disruption Budget creation",
                            "default": false
                        },
                        "minAvailable": {
                            "type": "number",
                            "description": "Minimum number/percentage of pods that should remain scheduled",
                            "default": 1
                        },
                        "maxUnavailable": {
                            "type": "string",
                            "description": "Maximum number/percentage of pods that may be made unavailable",
                            "default": ""
                        }
                    }
                },
                "nameOverride": {
                    "type": "string",
                    "description": "String to partially override opensearch.dashboards.fullname",
                    "default": ""
                },
                "fullnameOverride": {
                    "type": "string",
                    "description": "String to fully override opensearch.dashboards.fullname",
                    "default": ""
                },
                "servicenameOverride": {
                    "type": "string",
                    "description": "String to fully override opensearch.dashboards.servicename",
                    "default": ""
                },
                "resources": {
                    "type": "object",
                    "properties": {
                        "requests": {
                            "type": "object",
                            "properties": {
                                "cpu": {
                                    "type": "string",
                                    "description": "",
                                    "default": "25m"
                                },
                                "memory": {
                                    "type": "string",
                                    "description": "",
                                    "default": "2048Mi"
                                }
                            }
                        },
                        "limits": {
                            "type": "object",
                            "description": "The resources limits for the data containers",
                            "default": {}
                        }
                    }
                },
                "updateStrategy": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "Data-only nodes statefulset stategy type",
                            "default": "RollingUpdate"
                        }
                    }
                },
                "heapSize": {
                    "type": "string",
                    "description": "OpenSearch data node heap size.",
                    "default": "1024m"
                },
                "podSecurityContext": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enabled data pods' Security Context",
                            "default": true
                        },
                        "fsGroup": {
                            "type": "number",
                            "description": "Set dashboards pod's Security Context fsGroup",
                            "default": 1001
                        },
                        "seccompProfile": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string",
                                    "description": "Set Proxy container's Security Context seccomp profile",
                                    "default": "RuntimeDefault"
                                }
                            }
                        }
                    }
                },
                "containerSecurityContext": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enabled data containers' Security Context",
                            "default": true
                        },
                        "runAsUser": {
                            "type": "number",
                            "description": "Set data containers' Security Context runAsUser",
                            "default": 1001
                        },
                        "runAsNonRoot": {
                            "type": "boolean",
                            "description": "Set data containers' Security Context runAsNonRoot",
                            "default": true
                        },
                        "capabilities": {
                            "type": "object",
                            "properties": {
                                "drop": {
                                    "type": "array",
                                    "description": "Set APISIX container's Security Context runAsNonRoot",
                                    "default": [
                                        "ALL"
                                    ],
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "hostAliases": {
                    "type": "array",
                    "description": "data pods host aliases",
                    "default": [],
                    "items": {}
                },
                "podLabels": {
                    "type": "object",
                    "description": "Extra labels for data pods",
                    "default": {}
                },
                "podAnnotations": {
                    "type": "object",
                    "description": "Annotations for data pods",
                    "default": {}
                },
                "podAffinityPreset": {
                    "type": "string",
                    "description": "Pod affinity preset. Ignored if `dashboards.affinity` is set. Allowed values: `soft` or `hard`",
                    "default": ""
                },
                "podAntiAffinityPreset": {
                    "type": "string",
                    "description": "Pod anti-affinity preset. Ignored if `dashboards.affinity` is set. Allowed values: `soft` or `hard`",
                    "default": ""
                },
                "nodeAffinityPreset": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "Node affinity preset type. Ignored if `dashboards.affinity` is set. Allowed values: `soft` or `hard`",
                            "default": ""
                        },
                        "key": {
                            "type": "string",
                            "description": "Node label key to match. Ignored if `dashboards.affinity` is set",
                            "default": ""
                        },
                        "values": {
                            "type": "array",
                            "description": "Node label values to match. Ignored if `dashboards.affinity` is set",
                            "default": [],
                            "items": {}
                        }
                    }
                },
                "affinity": {
                    "type": "object",
                    "description": "Affinity for data pods assignment",
                    "default": {}
                },
                "nodeSelector": {
                    "type": "object",
                    "description": "Node labels for data pods assignment",
                    "default": {}
                },
                "tolerations": {
                    "type": "array",
                    "description": "Tolerations for data pods assignment",
                    "default": [],
                    "items": {}
                },
                "priorityClassName": {
                    "type": "string",
                    "description": "data pods' priorityClassName",
                    "default": ""
                },
                "schedulerName": {
                    "type": "string",
                    "description": "Name of the k8s scheduler (other than default) for data pods",
                    "default": ""
                },
                "terminationGracePeriodSeconds": {
                    "type": "string",
                    "description": "In seconds, time the given to the OpenSearch data pod needs to terminate gracefully",
                    "default": ""
                },
                "topologySpreadConstraints": {
                    "type": "array",
                    "description": "Topology Spread Constraints for pod assignment spread across your cluster among failure-domains. Evaluated as a template",
                    "default": [],
                    "items": {}
                },
                "startupProbe": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable/disable the startup probe (data nodes pod)",
                            "default": false
                        },
                        "initialDelaySeconds": {
                            "type": "number",
                            "description": "Delay before startup probe is initiated (data nodes pod)",
                            "default": 120
                        },
                        "periodSeconds": {
                            "type": "number",
                            "description": "How often to perform the probe (data nodes pod)",
                            "default": 10
                        },
                        "timeoutSeconds": {
                            "type": "number",
                            "description": "When the probe times out (data nodes pod)",
                            "default": 5
                        },
                        "successThreshold": {
                            "type": "number",
                            "description": "Minimum consecutive successes for the probe to be considered successful after having failed (data nodes pod)",
                            "default": 1
                        },
                        "failureThreshold": {
                            "type": "number",
                            "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded",
                            "default": 5
                        }
                    }
                },
                "livenessProbe": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable/disable the liveness probe (data nodes pod)",
                            "default": true
                        },
                        "initialDelaySeconds": {
                            "type": "number",
                            "description": "Delay before liveness probe is initiated (data nodes pod)",
                            "default": 180
                        },
                        "periodSeconds": {
                            "type": "number",
                            "description": "How often to perform the probe (data nodes pod)",
                            "default": 20
                        },
                        "timeoutSeconds": {
                            "type": "number",
                            "description": "When the probe times out (data nodes pod)",
                            "default": 5
                        },
                        "successThreshold": {
                            "type": "number",
                            "description": "Minimum consecutive successes for the probe to be considered successful after having failed (data nodes pod)",
                            "default": 1
                        },
                        "failureThreshold": {
                            "type": "number",
                            "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded",
                            "default": 8
                        }
                    }
                },
                "readinessProbe": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable/disable the readiness probe (data nodes pod)",
                            "default": true
                        },
                        "initialDelaySeconds": {
                            "type": "number",
                            "description": "Delay before readiness probe is initiated (data nodes pod)",
                            "default": 120
                        },
                        "periodSeconds": {
                            "type": "number",
                            "description": "How often to perform the probe (data nodes pod)",
                            "default": 10
                        },
                        "timeoutSeconds": {
                            "type": "number",
                            "description": "When the probe times out (data nodes pod)",
                            "default": 5
                        },
                        "successThreshold": {
                            "type": "number",
                            "description": "Minimum consecutive successes for the probe to be considered successful after having failed (data nodes pod)",
                            "default": 1
                        },
                        "failureThreshold": {
                            "type": "number",
                            "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded",
                            "default": 5
                        }
                    }
                },
                "customStartupProbe": {
                    "type": "object",
                    "description": "Override default startup probe",
                    "default": {}
                },
                "customLivenessProbe": {
                    "type": "object",
                    "description": "Override default liveness probe",
                    "default": {}
                },
                "customReadinessProbe": {
                    "type": "object",
                    "description": "Override default readiness probe",
                    "default": {}
                },
                "command": {
                    "type": "array",
                    "description": "Override default container command (useful when using custom images)",
                    "default": [],
                    "items": {}
                },
                "args": {
                    "type": "array",
                    "description": "Override default container args (useful when using custom images)",
                    "default": [],
                    "items": {}
                },
                "lifecycleHooks": {
                    "type": "object",
                    "description": "for the data container(s) to automate configuration before or after startup",
                    "default": {}
                },
                "extraEnvVars": {
                    "type": "array",
                    "description": "Array with extra environment variables to add to data nodes",
                    "default": [],
                    "items": {}
                },
                "extraEnvVarsCM": {
                    "type": "string",
                    "description": "Name of existing ConfigMap containing extra env vars for data nodes",
                    "default": ""
                },
                "extraEnvVarsSecret": {
                    "type": "string",
                    "description": "Name of existing Secret containing extra env vars for data nodes",
                    "default": ""
                },
                "extraVolumes": {
                    "type": "array",
                    "description": "Optionally specify extra list of additional volumes for the data pod(s)",
                    "default": [],
                    "items": {}
                },
                "extraVolumeMounts": {
                    "type": "array",
                    "description": "Optionally specify extra list of additional volumeMounts for the data container(s)",
                    "default": [],
                    "items": {}
                },
                "sidecars": {
                    "type": "array",
                    "description": "Add additional sidecar containers to the data pod(s)",
                    "default": [],
                    "items": {}
                },
                "initContainers": {
                    "type": "array",
                    "description": "Add additional init containers to the data pod(s)",
                    "default": [],
                    "items": {}
                },
                "serviceAccount": {
                    "type": "object",
                    "properties": {
                        "create": {
                            "type": "boolean",
                            "description": "Specifies whether a ServiceAccount should be created",
                            "default": false
                        },
                        "name": {
                            "type": "string",
                            "description": "Name of the service account to use. If not set and create is true, a name is generated using the fullname template.",
                            "default": ""
                        },
                        "automountServiceAccountToken": {
                            "type": "boolean",
                            "description": "Automount service account token for the server service account",
                            "default": false
                        },
                        "annotations": {
                            "type": "object",
                            "description": "Annotations for service account. Evaluated as a template. Only used if `create` is `true`.",
                            "default": {}
                        }
                    }
                },
                "networkPolicy": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable creation of NetworkPolicy resources",
                            "default": false
                        },
                        "allowExternal": {
                            "type": "boolean",
                            "description": "The Policy model to apply",
                            "default": true
                        },
                        "extraIngress": {
                            "type": "array",
                            "description": "Add extra ingress rules to the NetworkPolicy",
                            "default": [],
                            "items": {}
                        },
                        "extraEgress": {
                            "type": "array",
                            "description": "Add extra ingress rules to the NetworkPolicy",
                            "default": [],
                            "items": {}
                        }
                    }
                },
                "autoscaling": {
                    "type": "object",
                    "properties": {
                        "vpa": {
                            "type": "object",
                            "properties": {
                                "enabled": {
                                    "type": "boolean",
                                    "description": "Enable VPA",
                                    "default": false
                                },
                                "annotations": {
                                    "type": "object",
                                    "description": "Annotations for VPA resource",
                                    "default": {}
                                },
                                "controlledResources": {
                                    "type": "array",
                                    "description": "VPA List of resources that the vertical pod autoscaler can control. Defaults to cpu and memory",
                                    "default": [],
                                    "items": {}
                                },
                                "maxAllowed": {
                                    "type": "object",
                                    "description": "VPA Max allowed resources for the pod",
                                    "default": {}
                                },
                                "minAllowed": {
                                    "type": "object",
                                    "description": "VPA Min allowed resources for the pod",
                                    "default": {}
                                },
                                "updatePolicy": {
                                    "type": "object",
                                    "properties": {
                                        "updateMode": {
                                            "type": "string",
                                            "description": "Autoscaling update policy Specifies whether recommended updates are applied when a Pod is started and whether recommended updates are applied during the life of a Pod",
                                            "default": "Auto"
                                        }
                                    }
                                }
                            }
                        },
                        "hpa": {
                            "type": "object",
                            "properties": {
                                "enabled": {
                                    "type": "boolean",
                                    "description": "Enable HPA for APISIX Data Plane",
                                    "default": false
                                },
                                "minReplicas": {
                                    "type": "number",
                                    "description": "Minimum number of APISIX Data Plane replicas",
                                    "default": 3
                                },
                                "maxReplicas": {
                                    "type": "number",
                                    "description": "Maximum number of APISIX Data Plane replicas",
                                    "default": 11
                                },
                                "targetCPU": {
                                    "type": "string",
                                    "description": "Target CPU utilization percentage",
                                    "default": ""
                                },
                                "targetMemory": {
                                    "type": "string",
                                    "description": "Target Memory utilization percentage",
                                    "default": ""
                                }
                            }
                        }
                    }
                },
                "tls": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable TLS for OpenSearch Dashboards webserver",
                            "default": false
                        },
                        "existingSecret": {
                            "type": "string",
                            "description": "Existing secret containing the certificates for OpenSearch Dashboards webserver",
                            "default": ""
                        },
                        "autoGenerated": {
                            "type": "boolean",
                            "description": "Create self-signed TLS certificates.",
                            "default": true
                        }
                    }
                }
            }
        }
    }
}