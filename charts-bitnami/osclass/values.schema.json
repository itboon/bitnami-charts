{
    "title": "Chart Values",
    "type": "object",
    "properties": {
        "global": {
            "type": "object",
            "properties": {
                "imageRegistry": {
                    "type": "string",
                    "description": "Global Docker image registry",
                    "default": ""
                },
                "imagePullSecrets": {
                    "type": "array",
                    "description": "Global Docker registry secret names as an array",
                    "default": [],
                    "items": {}
                },
                "storageClass": {
                    "type": "string",
                    "description": "Global StorageClass for Persistent Volume(s)",
                    "default": ""
                }
            }
        },
        "kubeVersion": {
            "type": "string",
            "description": "Override Kubernetes version",
            "default": ""
        },
        "nameOverride": {
            "type": "string",
            "description": "String to partially override common.names.fullname",
            "default": ""
        },
        "fullnameOverride": {
            "type": "string",
            "description": "String to fully override common.names.fullname",
            "default": ""
        },
        "commonAnnotations": {
            "type": "object",
            "description": "Annotations to add to all deployed objects",
            "default": {}
        },
        "commonLabels": {
            "type": "object",
            "description": "Labels to add to all deployed objects",
            "default": {}
        },
        "extraDeploy": {
            "type": "array",
            "description": "Array of extra objects to deploy with the release",
            "default": [],
            "items": {}
        },
        "image": {
            "type": "object",
            "properties": {
                "registry": {
                    "type": "string",
                    "description": "Osclass image registry",
                    "default": "docker.io"
                },
                "repository": {
                    "type": "string",
                    "description": "Osclass image repository",
                    "default": "bitnami/osclass"
                },
                "tag": {
                    "type": "string",
                    "description": "Osclass image tag (immutable tags are recommended)",
                    "default": "8.1.2-debian-11-r54"
                },
                "digest": {
                    "type": "string",
                    "description": "Osclass image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag",
                    "default": ""
                },
                "pullPolicy": {
                    "type": "string",
                    "description": "Osclass image pull policy",
                    "default": "IfNotPresent"
                },
                "pullSecrets": {
                    "type": "array",
                    "description": "Osclass image pull secrets",
                    "default": [],
                    "items": {}
                },
                "debug": {
                    "type": "boolean",
                    "description": "Enable Bitnami debug mode in Osclass image",
                    "default": false
                }
            }
        },
        "osclassSkipInstall": {
            "type": "boolean",
            "description": "Skip wizard installation",
            "default": false
        },
        "osclassUsername": {
            "type": "string",
            "description": "Osclass username",
            "default": "user"
        },
        "osclassSiteTitle": {
            "type": "string",
            "description": "Osclass site title",
            "default": "user"
        },
        "osclassPassword": {
            "type": "string",
            "description": "Osclass user password",
            "default": ""
        },
        "osclassEmail": {
            "type": "string",
            "description": "Osclass user email",
            "default": "user@example.com"
        },
        "existingSecret": {
            "type": "string",
            "description": "Name of existing secret containing Osclass credentials",
            "default": ""
        },
        "allowEmptyPassword": {
            "type": "boolean",
            "description": "Allow the container to be started with blank passwords",
            "default": true
        },
        "smtpHost": {
            "type": "string",
            "description": "SMTP server host",
            "default": ""
        },
        "smtpPort": {
            "type": "string",
            "description": "SMTP server port",
            "default": ""
        },
        "smtpUser": {
            "type": "string",
            "description": "SMTP username",
            "default": ""
        },
        "smtpPassword": {
            "type": "string",
            "description": "SMTP user password",
            "default": ""
        },
        "smtpProtocol": {
            "type": "string",
            "description": "SMTP protocol",
            "default": ""
        },
        "hostAliases": {
            "type": "array",
            "description": "",
            "items": {
                "type": "object",
                "properties": {
                    "ip": {
                        "type": "string",
                        "description": ""
                    },
                    "hostnames": {
                        "type": "array",
                        "description": "",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "podSecurityContext": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enabled Osclass pods' Security Context",
                    "default": true
                },
                "fsGroup": {
                    "type": "number",
                    "description": "Set Osclass pod's Security Context fsGroup",
                    "default": 1001
                }
            }
        },
        "containerSecurityContext": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enabled Osclass containers' Security Context",
                    "default": true
                },
                "runAsUser": {
                    "type": "number",
                    "description": "Set Osclass container's Security Context runAsUser",
                    "default": 1001
                },
                "runAsNonRoot": {
                    "type": "boolean",
                    "description": "Set Osclass container's Security Context runAsNonRoot",
                    "default": true
                }
            }
        },
        "startupProbe": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable startupProbe",
                    "default": false
                },
                "path": {
                    "type": "string",
                    "description": "Path for the HTTP probe",
                    "default": "/oc-admin"
                },
                "initialDelaySeconds": {
                    "type": "number",
                    "description": "Initial delay seconds for startupProbe",
                    "default": 600
                },
                "periodSeconds": {
                    "type": "number",
                    "description": "Period seconds for startupProbe",
                    "default": 10
                },
                "timeoutSeconds": {
                    "type": "number",
                    "description": "Timeout seconds for startupProbe",
                    "default": 5
                },
                "failureThreshold": {
                    "type": "number",
                    "description": "Failure threshold for startupProbe",
                    "default": 5
                },
                "successThreshold": {
                    "type": "number",
                    "description": "Success threshold for startupProbe",
                    "default": 1
                }
            }
        },
        "livenessProbe": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable livenessProbe",
                    "default": true
                },
                "path": {
                    "type": "string",
                    "description": "Path for the HTTP probe",
                    "default": "/oc-admin"
                },
                "initialDelaySeconds": {
                    "type": "number",
                    "description": "Initial delay seconds for livenessProbe",
                    "default": 600
                },
                "periodSeconds": {
                    "type": "number",
                    "description": "Period seconds for livenessProbe",
                    "default": 10
                },
                "timeoutSeconds": {
                    "type": "number",
                    "description": "Timeout seconds for livenessProbe",
                    "default": 5
                },
                "failureThreshold": {
                    "type": "number",
                    "description": "Failure threshold for livenessProbe",
                    "default": 5
                },
                "successThreshold": {
                    "type": "number",
                    "description": "Success threshold for livenessProbe",
                    "default": 1
                }
            }
        },
        "readinessProbe": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable readinessProbe",
                    "default": true
                },
                "path": {
                    "type": "string",
                    "description": "Path for the HTTP probe",
                    "default": "/oc-admin"
                },
                "initialDelaySeconds": {
                    "type": "number",
                    "description": "Initial delay seconds for readinessProbe",
                    "default": 30
                },
                "periodSeconds": {
                    "type": "number",
                    "description": "Period seconds for readinessProbe",
                    "default": 5
                },
                "timeoutSeconds": {
                    "type": "number",
                    "description": "Timeout seconds for readinessProbe",
                    "default": 1
                },
                "failureThreshold": {
                    "type": "number",
                    "description": "Failure threshold for readinessProbe",
                    "default": 5
                },
                "successThreshold": {
                    "type": "number",
                    "description": "Success threshold for readinessProbe",
                    "default": 1
                }
            }
        },
        "customStartupProbe": {
            "type": "object",
            "description": "Custom livenessProbe that overrides the default one",
            "default": {}
        },
        "customLivenessProbe": {
            "type": "object",
            "description": "Custom livenessProbe that overrides the default one",
            "default": {}
        },
        "customReadinessProbe": {
            "type": "object",
            "description": "Custom readinessProbe that overrides the default one",
            "default": {}
        },
        "certificates": {
            "type": "object",
            "properties": {
                "customCertificate": {
                    "type": "object",
                    "properties": {
                        "certificateSecret": {
                            "type": "string",
                            "description": "name of the secret with custom certificates",
                            "default": ""
                        },
                        "chainSecret": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "name of the secret with the chain",
                                    "default": ""
                                },
                                "key": {
                                    "type": "string",
                                    "description": "key of the secret with the chain",
                                    "default": ""
                                }
                            }
                        },
                        "certificateLocation": {
                            "type": "string",
                            "description": "Location of the certificate inside the container",
                            "default": "/etc/ssl/certs/ssl-cert-snakeoil.pem"
                        },
                        "keyLocation": {
                            "type": "string",
                            "description": "Location of the certificate key inside the container",
                            "default": "/etc/ssl/private/ssl-cert-snakeoil.key"
                        },
                        "chainLocation": {
                            "type": "string",
                            "description": "Location of the certificate chain inside the container",
                            "default": "/etc/ssl/certs/mychain.pem"
                        }
                    }
                },
                "customCAs": {
                    "type": "array",
                    "description": "Array with custom CAs",
                    "default": [],
                    "items": {}
                },
                "command": {
                    "type": "array",
                    "description": "Override certificate container command",
                    "default": [],
                    "items": {}
                },
                "args": {
                    "type": "array",
                    "description": "Override certificate container args",
                    "default": [],
                    "items": {}
                },
                "extraEnvVars": {
                    "type": "array",
                    "description": "An array to add extra env vars",
                    "default": [],
                    "items": {}
                },
                "extraEnvVarsCM": {
                    "type": "string",
                    "description": "ConfigMap with extra environment variables",
                    "default": ""
                },
                "extraEnvVarsSecret": {
                    "type": "string",
                    "description": "Secret with extra environment variables",
                    "default": ""
                },
                "image": {
                    "type": "object",
                    "properties": {
                        "registry": {
                            "type": "string",
                            "description": "Apache Exporter image registry",
                            "default": "docker.io"
                        },
                        "repository": {
                            "type": "string",
                            "description": "Apache Exporter image repository",
                            "default": "bitnami/os-shell"
                        },
                        "tag": {
                            "type": "string",
                            "description": "Apache Exporter image tag (immutable tags are recommended)",
                            "default": "11-debian-11-r43"
                        },
                        "digest": {
                            "type": "string",
                            "description": "Apache Exporter image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag",
                            "default": ""
                        },
                        "pullPolicy": {
                            "type": "string",
                            "description": "Apache Exporter image pull policy",
                            "default": "IfNotPresent"
                        },
                        "pullSecrets": {
                            "type": "array",
                            "description": "Apache Exporter image pull secrets",
                            "default": [],
                            "items": {}
                        }
                    }
                }
            }
        },
        "lifecycleHooks": {
            "type": "object",
            "description": "lifecycleHooks for the container to automate configuration before or after startup.",
            "default": {}
        },
        "podAnnotations": {
            "type": "object",
            "description": "Annotations for Osclass pods",
            "default": {}
        },
        "podLabels": {
            "type": "object",
            "description": "Extra labels for Osclass pods",
            "default": {}
        },
        "replicaCount": {
            "type": "number",
            "description": "Number of Osclass replicas to deploy",
            "default": 1
        },
        "containerPorts": {
            "type": "object",
            "properties": {
                "http": {
                    "type": "number",
                    "description": "Osclass HTTP container port",
                    "default": 8080
                },
                "https": {
                    "type": "number",
                    "description": "Osclass HTTPS container port",
                    "default": 8443
                }
            }
        },
        "command": {
            "type": "array",
            "description": "Override default container command (useful when using custom images)",
            "default": [],
            "items": {}
        },
        "args": {
            "type": "array",
            "description": "Override default container args (useful when using custom images)",
            "default": [],
            "items": {}
        },
        "updateStrategy": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string",
                    "description": "Osclass deployment strategy type",
                    "default": "RollingUpdate"
                },
                "rollingUpdate": {
                    "type": "object",
                    "description": "Osclass deployment rolling update configuration parameters",
                    "default": {}
                }
            }
        },
        "extraEnvVars": {
            "type": "array",
            "description": "Array with extra environment variables to add to the Osclass container",
            "default": [],
            "items": {}
        },
        "extraEnvVarsCM": {
            "type": "string",
            "description": "Name of existing ConfigMap containing extra env vars",
            "default": ""
        },
        "extraEnvVarsSecret": {
            "type": "string",
            "description": "Name of existing Secret containing extra env vars",
            "default": ""
        },
        "extraVolumes": {
            "type": "array",
            "description": "Optionally specify extra list of additional volumes for Osclass pods",
            "default": [],
            "items": {}
        },
        "extraVolumeMounts": {
            "type": "array",
            "description": "Optionally specify extra list of additional volumeMounts for Osclass container(s)",
            "default": [],
            "items": {}
        },
        "initContainers": {
            "type": "array",
            "description": "Add additional init containers to the Osclass pods",
            "default": [],
            "items": {}
        },
        "sidecars": {
            "type": "array",
            "description": "Add additional sidecar containers to the Osclass pod",
            "default": [],
            "items": {}
        },
        "podAffinityPreset": {
            "type": "string",
            "description": "Pod affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`",
            "default": ""
        },
        "podAntiAffinityPreset": {
            "type": "string",
            "description": "Pod anti-affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`",
            "default": "soft"
        },
        "nodeAffinityPreset": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string",
                    "description": "Node affinity preset type. Ignored if `affinity` is set. Allowed values: `soft` or `hard`",
                    "default": ""
                },
                "key": {
                    "type": "string",
                    "description": "Node label key to match. Ignored if `affinity` is set",
                    "default": ""
                },
                "values": {
                    "type": "array",
                    "description": "Node label values to match. Ignored if `affinity` is set",
                    "default": [],
                    "items": {}
                }
            }
        },
        "affinity": {
            "type": "object",
            "description": "Affinity for pod assignment",
            "default": {}
        },
        "nodeSelector": {
            "type": "object",
            "description": "Node labels for pod assignment",
            "default": {}
        },
        "resources": {
            "type": "object",
            "properties": {
                "requests": {
                    "type": "object",
                    "properties": {
                        "memory": {
                            "type": "string",
                            "description": "",
                            "default": "512Mi"
                        },
                        "cpu": {
                            "type": "string",
                            "description": "",
                            "default": "300m"
                        }
                    }
                },
                "limits": {
                    "type": "object",
                    "description": "The resources limits for the Osclass container",
                    "default": {}
                }
            }
        },
        "tolerations": {
            "type": "array",
            "description": "Tolerations for pod assignment",
            "default": [],
            "items": {}
        },
        "priorityClassName": {
            "type": "string",
            "description": "Osclass pods' priorityClassName",
            "default": ""
        },
        "schedulerName": {
            "type": "string",
            "description": "Name of the k8s scheduler (other than default)",
            "default": ""
        },
        "topologySpreadConstraints": {
            "type": "array",
            "description": "Topology Spread Constraints for pod assignment",
            "default": [],
            "items": {}
        },
        "service": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string",
                    "description": "Osclass service type",
                    "default": "LoadBalancer"
                },
                "ports": {
                    "type": "object",
                    "properties": {
                        "http": {
                            "type": "number",
                            "description": "Osclass service HTTP port",
                            "default": 80
                        },
                        "https": {
                            "type": "number",
                            "description": "Osclass service HTTPS port",
                            "default": 443
                        }
                    }
                },
                "clusterIP": {
                    "type": "string",
                    "description": "Osclass service Cluster IP",
                    "default": ""
                },
                "loadBalancerIP": {
                    "type": "string",
                    "description": "Osclass service Load Balancer IP",
                    "default": ""
                },
                "loadBalancerSourceRanges": {
                    "type": "array",
                    "description": "Osclass service Load Balancer sources",
                    "default": [],
                    "items": {}
                },
                "extraPorts": {
                    "type": "array",
                    "description": "Extra ports to expose (normally used with the `sidecar` value)",
                    "default": [],
                    "items": {}
                },
                "annotations": {
                    "type": "object",
                    "description": "Additional custom annotations for Osclass service",
                    "default": {}
                },
                "sessionAffinity": {
                    "type": "string",
                    "description": "Control where client requests go, to the same pod or round-robin",
                    "default": "None"
                },
                "sessionAffinityConfig": {
                    "type": "object",
                    "description": "Additional settings for the sessionAffinity",
                    "default": {}
                },
                "nodePorts": {
                    "type": "object",
                    "properties": {
                        "http": {
                            "type": "string",
                            "description": "Node port for HTTP",
                            "default": ""
                        },
                        "https": {
                            "type": "string",
                            "description": "Node port for HTTPS",
                            "default": ""
                        }
                    }
                },
                "externalTrafficPolicy": {
                    "type": "string",
                    "description": "Osclass service external traffic policy",
                    "default": "Cluster"
                }
            }
        },
        "ingress": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable ingress record generation for Osclass",
                    "default": false
                },
                "pathType": {
                    "type": "string",
                    "description": "Ingress path type",
                    "default": "ImplementationSpecific"
                },
                "apiVersion": {
                    "type": "string",
                    "description": "Force Ingress API version (automatically detected if not set)",
                    "default": ""
                },
                "hostname": {
                    "type": "string",
                    "description": "Default host for the ingress record",
                    "default": "osclass.local"
                },
                "path": {
                    "type": "string",
                    "description": "Default path for the ingress record",
                    "default": "/"
                },
                "annotations": {
                    "type": "object",
                    "description": "Additional annotations for the Ingress resource. To enable certificate autogeneration, place here your cert-manager annotations.",
                    "default": {}
                },
                "tls": {
                    "type": "boolean",
                    "description": "Enable TLS configuration for the host defined at `ingress.hostname` parameter",
                    "default": false
                },
                "extraHosts": {
                    "type": "array",
                    "description": "An array with additional hostname(s) to be covered with the ingress record",
                    "default": [],
                    "items": {}
                },
                "extraPaths": {
                    "type": "array",
                    "description": "An array with additional arbitrary paths that may need to be added to the ingress under the main host",
                    "default": [],
                    "items": {}
                },
                "extraTls": {
                    "type": "array",
                    "description": "TLS configuration for additional hostname(s) to be covered with this ingress record",
                    "default": [],
                    "items": {}
                },
                "secrets": {
                    "type": "array",
                    "description": "Custom TLS certificates as secrets",
                    "default": [],
                    "items": {}
                },
                "ingressClassName": {
                    "type": "string",
                    "description": "IngressClass that will be be used to implement the Ingress (Kubernetes 1.18+)",
                    "default": ""
                },
                "extraRules": {
                    "type": "array",
                    "description": "Additional rules to be covered with this ingress record",
                    "default": [],
                    "items": {}
                }
            }
        },
        "externalDatabase": {
            "type": "object",
            "properties": {
                "host": {
                    "type": "string",
                    "description": "External Database server host",
                    "default": ""
                },
                "port": {
                    "type": "number",
                    "description": "External Database server port",
                    "default": 3306
                },
                "user": {
                    "type": "string",
                    "description": "External Database username",
                    "default": "bn_osclass"
                },
                "password": {
                    "type": "string",
                    "description": "External Database user password",
                    "default": ""
                },
                "database": {
                    "type": "string",
                    "description": "External Database database name",
                    "default": "bitnami_osclass"
                },
                "existingSecret": {
                    "type": "string",
                    "description": "Name of an existing secret resource containing the DB password",
                    "default": ""
                }
            }
        },
        "mariadb": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Deploy a MariaDB server to satisfy the applications database requirements",
                    "default": true
                },
                "architecture": {
                    "type": "string",
                    "description": "MariaDB architecture. Allowed values: `standalone` or `replication`",
                    "default": "standalone"
                },
                "auth": {
                    "type": "object",
                    "properties": {
                        "rootPassword": {
                            "type": "string",
                            "description": "MariaDB root password",
                            "default": ""
                        },
                        "database": {
                            "type": "string",
                            "description": "MariaDB custom database",
                            "default": "bitnami_osclass"
                        },
                        "username": {
                            "type": "string",
                            "description": "MariaDB custom user name",
                            "default": "bn_osclass"
                        },
                        "password": {
                            "type": "string",
                            "description": "MariaDB custom user password",
                            "default": ""
                        }
                    }
                },
                "primary": {
                    "type": "object",
                    "properties": {
                        "persistence": {
                            "type": "object",
                            "properties": {
                                "enabled": {
                                    "type": "boolean",
                                    "description": "Enable persistence on MariaDB using PVC(s)",
                                    "default": true
                                },
                                "storageClass": {
                                    "type": "string",
                                    "description": "Persistent Volume storage class",
                                    "default": ""
                                },
                                "accessModes": {
                                    "type": "array",
                                    "description": "Persistent Volume access modes",
                                    "default": [
                                        "ReadWriteOnce"
                                    ],
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "size": {
                                    "type": "string",
                                    "description": "Persistent Volume size",
                                    "default": "8Gi"
                                }
                            }
                        }
                    }
                }
            }
        },
        "persistence": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable persistence using Persistent Volume Claims",
                    "default": true
                },
                "storageClass": {
                    "type": "string",
                    "description": "Persistent Volume storage class",
                    "default": ""
                },
                "accessModes": {
                    "type": "array",
                    "description": "Persistent Volume access modes",
                    "default": [
                        "ReadWriteOnce"
                    ],
                    "items": {
                        "type": "string"
                    }
                },
                "size": {
                    "type": "string",
                    "description": "Persistent Volume size",
                    "default": "8Gi"
                },
                "existingClaim": {
                    "type": "string",
                    "description": "The name of an existing PVC to use for persistence",
                    "default": ""
                },
                "hostPath": {
                    "type": "string",
                    "description": "If defined, the osclass-data volume will mount to the specified hostPath.",
                    "default": ""
                },
                "annotations": {
                    "type": "object",
                    "description": "Persistent Volume Claim annotations",
                    "default": {}
                }
            }
        },
        "volumePermissions": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable init container that changes the owner/group of the PV mount point to `runAsUser:fsGroup`",
                    "default": false
                },
                "image": {
                    "type": "object",
                    "properties": {
                        "registry": {
                            "type": "string",
                            "description": "OS Shell + Utility image registry",
                            "default": "docker.io"
                        },
                        "repository": {
                            "type": "string",
                            "description": "OS Shell + Utility image repository",
                            "default": "bitnami/os-shell"
                        },
                        "tag": {
                            "type": "string",
                            "description": "OS Shell + Utility image tag (immutable tags are recommended)",
                            "default": "11-debian-11-r43"
                        },
                        "digest": {
                            "type": "string",
                            "description": "OS Shell + Utility image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag",
                            "default": ""
                        },
                        "pullPolicy": {
                            "type": "string",
                            "description": "OS Shell + Utility image pull policy",
                            "default": "IfNotPresent"
                        },
                        "pullSecrets": {
                            "type": "array",
                            "description": "OS Shell + Utility image pull secrets",
                            "default": [],
                            "items": {}
                        }
                    }
                },
                "resources": {
                    "type": "object",
                    "properties": {
                        "limits": {
                            "type": "object",
                            "description": "The resources limits for the init container",
                            "default": {}
                        },
                        "requests": {
                            "type": "object",
                            "description": "The requested resources for the init container",
                            "default": {}
                        }
                    }
                }
            }
        },
        "pdb": {
            "type": "object",
            "properties": {
                "create": {
                    "type": "boolean",
                    "description": "Enable a Pod Disruption Budget creation",
                    "default": false
                },
                "minAvailable": {
                    "type": "number",
                    "description": "Minimum number/percentage of pods that should remain scheduled",
                    "default": 1
                },
                "maxUnavailable": {
                    "type": "string",
                    "description": "Maximum number/percentage of pods that may be made unavailable",
                    "default": ""
                }
            }
        },
        "autoscaling": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable Horizontal POD autoscaling for Osclass",
                    "default": false
                },
                "minReplicas": {
                    "type": "number",
                    "description": "Minimum number of Osclass replicas",
                    "default": 1
                },
                "maxReplicas": {
                    "type": "number",
                    "description": "Maximum number of Osclass replicas",
                    "default": 11
                },
                "targetCPU": {
                    "type": "number",
                    "description": "Target CPU utilization percentage",
                    "default": 50
                },
                "targetMemory": {
                    "type": "number",
                    "description": "Target Memory utilization percentage",
                    "default": 50
                }
            }
        },
        "metrics": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Start a sidecar prometheus exporter to expose metrics",
                    "default": false
                },
                "image": {
                    "type": "object",
                    "properties": {
                        "registry": {
                            "type": "string",
                            "description": "Apache Exporter image registry",
                            "default": "docker.io"
                        },
                        "repository": {
                            "type": "string",
                            "description": "Apache Exporter image repository",
                            "default": "bitnami/apache-exporter"
                        },
                        "tag": {
                            "type": "string",
                            "description": "Apache Exporter image tag (immutable tags are recommended)",
                            "default": "1.0.1-debian-11-r21"
                        },
                        "digest": {
                            "type": "string",
                            "description": "Apache Exporter image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag",
                            "default": ""
                        },
                        "pullPolicy": {
                            "type": "string",
                            "description": "Apache Exporter image pull policy",
                            "default": "IfNotPresent"
                        },
                        "pullSecrets": {
                            "type": "array",
                            "description": "Apache Exporter image pull secrets",
                            "default": [],
                            "items": {}
                        }
                    }
                },
                "resources": {
                    "type": "object",
                    "properties": {
                        "limits": {
                            "type": "object",
                            "description": "The resources limits for the Prometheus exporter container",
                            "default": {}
                        },
                        "requests": {
                            "type": "object",
                            "description": "The requested resources for the Prometheus exporter container",
                            "default": {}
                        }
                    }
                },
                "podAnnotations": {
                    "type": "object",
                    "description": "Annotations to add",
                    "default": {}
                },
                "service": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "Metrics service type",
                            "default": "ClusterIP"
                        },
                        "annotations": {
                            "type": "object",
                            "properties": {
                                "prometheus": {
                                    "type": "object",
                                    "properties": {
                                        "io/scrape": {
                                            "type": "string",
                                            "description": "",
                                            "default": "true"
                                        },
                                        "io/port": {
                                            "type": "string",
                                            "description": "",
                                            "default": "{{ .Values.metrics.service.port }}"
                                        }
                                    }
                                }
                            }
                        },
                        "port": {
                            "type": "number",
                            "description": "Metrics service port",
                            "default": 9117
                        }
                    }
                },
                "serviceMonitor": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Create ServiceMonitor Resource for scraping metrics using PrometheusOperator",
                            "default": false
                        },
                        "namespace": {
                            "type": "string",
                            "description": "The namespace in which the ServiceMonitor will be created",
                            "default": ""
                        },
                        "interval": {
                            "type": "string",
                            "description": "The interval at which metrics should be scraped",
                            "default": "30s"
                        },
                        "scrapeTimeout": {
                            "type": "string",
                            "description": "The timeout after which the scrape is ended",
                            "default": ""
                        },
                        "relabelings": {
                            "type": "array",
                            "description": "RelabelConfigs to apply to samples before scraping",
                            "default": [],
                            "items": {}
                        },
                        "metricRelabelings": {
                            "type": "array",
                            "description": "MetricRelabelConfigs to apply to samples before ingestion",
                            "default": [],
                            "items": {}
                        },
                        "honorLabels": {
                            "type": "boolean",
                            "description": "Labels to honor to add to the scrape endpoint",
                            "default": false
                        },
                        "selector": {
                            "type": "object",
                            "description": "ServiceMonitor selector labels",
                            "default": {}
                        },
                        "labels": {
                            "type": "object",
                            "description": "Extra labels for the ServiceMonitor",
                            "default": {}
                        },
                        "jobLabel": {
                            "type": "string",
                            "description": "The name of the label on the target service to use as the job name in prometheus.",
                            "default": ""
                        }
                    }
                }
            }
        },
        "networkPolicy": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable network policies",
                    "default": false
                },
                "metrics": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable network policy for metrics (prometheus)",
                            "default": false
                        },
                        "namespaceSelector": {
                            "type": "object",
                            "description": "Monitoring namespace selector labels. These labels will be used to identify the prometheus' namespace.",
                            "default": {}
                        },
                        "podSelector": {
                            "type": "object",
                            "description": "Monitoring pod selector labels. These labels will be used to identify the Prometheus pods.",
                            "default": {}
                        }
                    }
                },
                "ingress": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable network policy for Ingress Proxies",
                            "default": false
                        },
                        "namespaceSelector": {
                            "type": "object",
                            "description": "Ingress Proxy namespace selector labels. These labels will be used to identify the Ingress Proxy's namespace.",
                            "default": {}
                        },
                        "podSelector": {
                            "type": "object",
                            "description": "Ingress Proxy pods selector labels. These labels will be used to identify the Ingress Proxy pods.",
                            "default": {}
                        }
                    }
                },
                "ingressRules": {
                    "type": "object",
                    "properties": {
                        "backendOnlyAccessibleByFrontend": {
                            "type": "boolean",
                            "description": "Enable ingress rule that makes the backend (mariadb) only accessible by Osclass's pods.",
                            "default": false
                        },
                        "customBackendSelector": {
                            "type": "object",
                            "description": "Backend selector labels. These labels will be used to identify the backend pods.",
                            "default": {}
                        },
                        "accessOnlyFrom": {
                            "type": "object",
                            "properties": {
                                "enabled": {
                                    "type": "boolean",
                                    "description": "Enable ingress rule that makes Osclass only accessible from a particular origin",
                                    "default": false
                                },
                                "namespaceSelector": {
                                    "type": "object",
                                    "description": "Namespace selector label that is allowed to access Osclass. This label will be used to identified the allowed namespace(s).",
                                    "default": {}
                                },
                                "podSelector": {
                                    "type": "object",
                                    "description": "Pods selector label that is allowed to access Osclass. This label will be used to identified the allowed pod(s).",
                                    "default": {}
                                }
                            }
                        },
                        "customRules": {
                            "type": "object",
                            "description": "Custom network policy ingress rule",
                            "default": {}
                        }
                    }
                },
                "egressRules": {
                    "type": "object",
                    "properties": {
                        "denyConnectionsToExternal": {
                            "type": "boolean",
                            "description": "Enable egress rule that denies outgoing traffic outside the cluster, except for DNS (port 53).",
                            "default": false
                        },
                        "customRules": {
                            "type": "object",
                            "description": "Custom network policy rule",
                            "default": {}
                        }
                    }
                }
            }
        }
    }
}