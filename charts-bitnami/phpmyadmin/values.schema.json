{
    "title": "Chart Values",
    "type": "object",
    "properties": {
        "global": {
            "type": "object",
            "properties": {
                "imageRegistry": {
                    "type": "string",
                    "description": "Global Docker image registry",
                    "default": ""
                },
                "imagePullSecrets": {
                    "type": "array",
                    "description": "Global Docker registry secret names as an array",
                    "default": [],
                    "items": {}
                }
            }
        },
        "kubeVersion": {
            "type": "string",
            "description": "Force target Kubernetes version (using Helm capabilities if not set)",
            "default": ""
        },
        "nameOverride": {
            "type": "string",
            "description": "String to partially override common.names.fullname template (will maintain the release name)",
            "default": ""
        },
        "fullnameOverride": {
            "type": "string",
            "description": "String to fully override common.names.fullname template",
            "default": ""
        },
        "commonLabels": {
            "type": "object",
            "description": "Add labels to all the deployed resources",
            "default": {}
        },
        "commonAnnotations": {
            "type": "object",
            "description": "Add annotations to all the deployed resources",
            "default": {}
        },
        "clusterDomain": {
            "type": "string",
            "description": "Kubernetes Cluster Domain",
            "default": "cluster.local"
        },
        "extraDeploy": {
            "type": "array",
            "description": "Array of extra objects to deploy with the release",
            "default": [],
            "items": {}
        },
        "image": {
            "type": "object",
            "properties": {
                "registry": {
                    "type": "string",
                    "description": "phpMyAdmin image registry",
                    "default": "docker.io"
                },
                "repository": {
                    "type": "string",
                    "description": "phpMyAdmin image repository",
                    "default": "bitnami/phpmyadmin"
                },
                "tag": {
                    "type": "string",
                    "description": "phpMyAdmin image tag (immutable tags are recommended)",
                    "default": "5.2.1-debian-11-r78"
                },
                "digest": {
                    "type": "string",
                    "description": "phpMyAdmin image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag",
                    "default": ""
                },
                "pullPolicy": {
                    "type": "string",
                    "description": "Image pull policy",
                    "default": "IfNotPresent"
                },
                "pullSecrets": {
                    "type": "array",
                    "description": "Specify docker-registry secret names as an array",
                    "default": [],
                    "items": {}
                },
                "debug": {
                    "type": "boolean",
                    "description": "Enable phpmyadmin image debug mode",
                    "default": false
                }
            }
        },
        "command": {
            "type": "array",
            "description": "Override default container command (useful when using custom images)",
            "default": [],
            "items": {}
        },
        "args": {
            "type": "array",
            "description": "Override default container args (useful when using custom images)",
            "default": [],
            "items": {}
        },
        "lifecycleHooks": {
            "type": "object",
            "description": "for the phpmyadmin container(s) to automate configuration before or after startup",
            "default": {}
        },
        "extraEnvVars": {
            "type": "array",
            "description": "Extra environment variables to be set on PhpMyAdmin container",
            "default": [],
            "items": {}
        },
        "extraEnvVarsCM": {
            "type": "string",
            "description": "Name of a existing ConfigMap containing extra env vars",
            "default": ""
        },
        "extraEnvVarsSecret": {
            "type": "string",
            "description": "Name of a existing Secret containing extra env vars",
            "default": ""
        },
        "hostAliases": {
            "type": "array",
            "description": "",
            "items": {
                "type": "object",
                "properties": {
                    "ip": {
                        "type": "string",
                        "description": ""
                    },
                    "hostnames": {
                        "type": "array",
                        "description": "",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "containerPorts": {
            "type": "object",
            "properties": {
                "http": {
                    "type": "number",
                    "description": "HTTP port to expose at container level",
                    "default": 8080
                },
                "https": {
                    "type": "number",
                    "description": "HTTPS port to expose at container level",
                    "default": 8443
                }
            }
        },
        "updateStrategy": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string",
                    "description": "Strategy to use to update Pods",
                    "default": "RollingUpdate"
                }
            }
        },
        "podSecurityContext": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable phpMyAdmin pods' Security Context",
                    "default": true
                },
                "fsGroup": {
                    "type": "number",
                    "description": "User ID for the container",
                    "default": 1001
                }
            }
        },
        "containerSecurityContext": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable phpMyAdmin containers' Security Context",
                    "default": true
                },
                "runAsUser": {
                    "type": "number",
                    "description": "Group ID for the volumes of the pod",
                    "default": 1001
                },
                "runAsNonRoot": {
                    "type": "boolean",
                    "description": "Set phpmyadmin container's Security Context runAsNonRoot",
                    "default": true
                }
            }
        },
        "resources": {
            "type": "object",
            "properties": {
                "limits": {
                    "type": "object",
                    "description": "The resources limits for the PhpMyAdmin container",
                    "default": {}
                },
                "requests": {
                    "type": "object",
                    "description": "The requested resources for the PhpMyAdmin container",
                    "default": {}
                }
            }
        },
        "startupProbe": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable startupProbe",
                    "default": false
                },
                "httpGet": {
                    "type": "object",
                    "properties": {
                        "path": {
                            "type": "string",
                            "description": "Request path for startupProbe",
                            "default": "/"
                        },
                        "port": {
                            "type": "string",
                            "description": "Port for startupProbe",
                            "default": "http"
                        }
                    }
                },
                "initialDelaySeconds": {
                    "type": "number",
                    "description": "Initial delay seconds for startupProbe",
                    "default": 30
                },
                "periodSeconds": {
                    "type": "number",
                    "description": "Period seconds for startupProbe",
                    "default": 10
                },
                "timeoutSeconds": {
                    "type": "number",
                    "description": "Timeout seconds for startupProbe",
                    "default": 30
                },
                "failureThreshold": {
                    "type": "number",
                    "description": "Failure threshold for startupProbe",
                    "default": 6
                },
                "successThreshold": {
                    "type": "number",
                    "description": "Success threshold for startupProbe",
                    "default": 1
                }
            }
        },
        "livenessProbe": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable livenessProbe",
                    "default": true
                },
                "httpGet": {
                    "type": "object",
                    "properties": {
                        "path": {
                            "type": "string",
                            "description": "Request path for livenessProbe",
                            "default": "/"
                        },
                        "port": {
                            "type": "string",
                            "description": "Port for livenessProbe",
                            "default": "http"
                        }
                    }
                },
                "initialDelaySeconds": {
                    "type": "number",
                    "description": "Initial delay seconds for livenessProbe",
                    "default": 30
                },
                "periodSeconds": {
                    "type": "number",
                    "description": "Period seconds for livenessProbe",
                    "default": 10
                },
                "timeoutSeconds": {
                    "type": "number",
                    "description": "Timeout seconds for livenessProbe",
                    "default": 30
                },
                "failureThreshold": {
                    "type": "number",
                    "description": "Failure threshold for livenessProbe",
                    "default": 6
                },
                "successThreshold": {
                    "type": "number",
                    "description": "Success threshold for livenessProbe",
                    "default": 1
                }
            }
        },
        "readinessProbe": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable readinessProbe",
                    "default": true
                },
                "httpGet": {
                    "type": "object",
                    "properties": {
                        "path": {
                            "type": "string",
                            "description": "Request path for readinessProbe",
                            "default": "/"
                        },
                        "port": {
                            "type": "string",
                            "description": "Port for readinessProbe",
                            "default": "http"
                        }
                    }
                },
                "initialDelaySeconds": {
                    "type": "number",
                    "description": "Initial delay seconds for readinessProbe",
                    "default": 30
                },
                "periodSeconds": {
                    "type": "number",
                    "description": "Period seconds for readinessProbe",
                    "default": 10
                },
                "timeoutSeconds": {
                    "type": "number",
                    "description": "Timeout seconds for readinessProbe",
                    "default": 30
                },
                "failureThreshold": {
                    "type": "number",
                    "description": "Failure threshold for readinessProbe",
                    "default": 6
                },
                "successThreshold": {
                    "type": "number",
                    "description": "Success threshold for readinessProbe",
                    "default": 1
                }
            }
        },
        "customStartupProbe": {
            "type": "object",
            "description": "Override default startup probe",
            "default": {}
        },
        "customLivenessProbe": {
            "type": "object",
            "description": "Override default liveness probe",
            "default": {}
        },
        "customReadinessProbe": {
            "type": "object",
            "description": "Override default readiness probe",
            "default": {}
        },
        "podLabels": {
            "type": "object",
            "description": "Extra labels for PhpMyAdmin pods",
            "default": {}
        },
        "podAnnotations": {
            "type": "object",
            "description": "Annotations for PhpMyAdmin pods",
            "default": {}
        },
        "podAffinityPreset": {
            "type": "string",
            "description": "Pod affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`",
            "default": ""
        },
        "podAntiAffinityPreset": {
            "type": "string",
            "description": "Pod anti-affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`",
            "default": "soft"
        },
        "nodeAffinityPreset": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string",
                    "description": "Node affinity preset type. Ignored if `affinity` is set. Allowed values: `soft` or `hard`",
                    "default": ""
                },
                "key": {
                    "type": "string",
                    "description": "Node label key to match. Ignored if `affinity` is set.",
                    "default": ""
                },
                "values": {
                    "type": "array",
                    "description": "Node label values to match. Ignored if `affinity` is set.",
                    "default": [],
                    "items": {}
                }
            }
        },
        "affinity": {
            "type": "object",
            "description": "Affinity for pod assignment. Evaluated as a template.",
            "default": {}
        },
        "nodeSelector": {
            "type": "object",
            "description": "Node labels for pod assignment. Evaluated as a template.",
            "default": {}
        },
        "tolerations": {
            "type": "array",
            "description": "Tolerations for pod assignment. Evaluated as a template.",
            "default": [],
            "items": {}
        },
        "priorityClassName": {
            "type": "string",
            "description": "phpmyadmin pods' priorityClassName",
            "default": ""
        },
        "schedulerName": {
            "type": "string",
            "description": "Name of the k8s scheduler (other than default)",
            "default": ""
        },
        "topologySpreadConstraints": {
            "type": "array",
            "description": "Topology Spread Constraints for pod assignment",
            "default": [],
            "items": {}
        },
        "extraVolumes": {
            "type": "array",
            "description": "Optionally specify extra list of additional volumes for PhpMyAdmin pods",
            "default": [],
            "items": {}
        },
        "extraVolumeMounts": {
            "type": "array",
            "description": "Optionally specify extra list of additional volumeMounts for PhpMyAdmin container(s)",
            "default": [],
            "items": {}
        },
        "initContainers": {
            "type": "array",
            "description": "Add init containers to the PhpMyAdmin pods",
            "default": [],
            "items": {}
        },
        "sidecars": {
            "type": "array",
            "description": "Add sidecar containers to the PhpMyAdmin pods",
            "default": [],
            "items": {}
        },
        "service": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string",
                    "description": "Kubernetes Service type",
                    "default": "ClusterIP"
                },
                "ports": {
                    "type": "object",
                    "properties": {
                        "http": {
                            "type": "number",
                            "description": "Service HTTP port",
                            "default": 80
                        },
                        "https": {
                            "type": "number",
                            "description": "Service HTTPS port",
                            "default": 443
                        }
                    }
                },
                "nodePorts": {
                    "type": "object",
                    "properties": {
                        "http": {
                            "type": "string",
                            "description": "Kubernetes http node port",
                            "default": ""
                        },
                        "https": {
                            "type": "string",
                            "description": "Kubernetes https node port",
                            "default": ""
                        }
                    }
                },
                "clusterIP": {
                    "type": "string",
                    "description": "PhpMyAdmin service clusterIP IP",
                    "default": ""
                },
                "loadBalancerIP": {
                    "type": "string",
                    "description": "Load balancer IP for the phpMyAdmin Service (optional, cloud specific)",
                    "default": ""
                },
                "loadBalancerSourceRanges": {
                    "type": "array",
                    "description": "Addresses that are allowed when service is LoadBalancer",
                    "default": [],
                    "items": {}
                },
                "externalTrafficPolicy": {
                    "type": "string",
                    "description": "Enable client source IP preservation",
                    "default": "Cluster"
                },
                "extraPorts": {
                    "type": "array",
                    "description": "Extra ports to expose (normally used with the `sidecar` value)",
                    "default": [],
                    "items": {}
                },
                "annotations": {
                    "type": "object",
                    "description": "Provide any additional annotations that may be required for the PhpMyAdmin service",
                    "default": {}
                },
                "sessionAffinity": {
                    "type": "string",
                    "description": "Session Affinity for Kubernetes service, can be \"None\" or \"ClientIP\"",
                    "default": "None"
                },
                "sessionAffinityConfig": {
                    "type": "object",
                    "description": "Additional settings for the sessionAffinity",
                    "default": {}
                }
            }
        },
        "ingress": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Set to true to enable ingress record generation",
                    "default": false
                },
                "apiVersion": {
                    "type": "string",
                    "description": "Force Ingress API version (automatically detected if not set)",
                    "default": ""
                },
                "hostname": {
                    "type": "string",
                    "description": "When the ingress is enabled, a host pointing to this will be created",
                    "default": "phpmyadmin.local"
                },
                "pathType": {
                    "type": "string",
                    "description": "Ingress path type",
                    "default": "ImplementationSpecific"
                },
                "path": {
                    "type": "string",
                    "description": "Default path for the ingress record",
                    "default": "/"
                },
                "extraPaths": {
                    "type": "array",
                    "description": "An array with additional arbitrary paths that may need to be added to the ingress under the main host",
                    "default": [],
                    "items": {}
                },
                "annotations": {
                    "type": "object",
                    "description": "Additional annotations for the Ingress resource. To enable certificate autogeneration, place here your cert-manager annotations.",
                    "default": {}
                },
                "tls": {
                    "type": "boolean",
                    "description": "Enable TLS configuration for the hostname defined at `ingress.hostname` parameter",
                    "default": false
                },
                "extraHosts": {
                    "type": "array",
                    "description": "The list of additional hostnames to be covered with this ingress record.",
                    "default": [],
                    "items": {}
                },
                "extraTls": {
                    "type": "array",
                    "description": "The tls configuration for additional hostnames to be covered with this ingress record.",
                    "default": [],
                    "items": {}
                },
                "secrets": {
                    "type": "array",
                    "description": "If you're providing your own certificates and want to manage the secret via helm,",
                    "default": [],
                    "items": {}
                },
                "existingSecretName": {
                    "type": "string",
                    "description": "If you're providing your own certificate and want to manage the secret yourself,",
                    "default": ""
                },
                "ingressClassName": {
                    "type": "string",
                    "description": "IngressClass that will be be used to implement the Ingress (Kubernetes 1.18+)",
                    "default": ""
                },
                "extraRules": {
                    "type": "array",
                    "description": "Additional rules to be covered with this ingress record",
                    "default": [],
                    "items": {}
                }
            }
        },
        "db": {
            "type": "object",
            "properties": {
                "allowArbitraryServer": {
                    "type": "boolean",
                    "description": "Enable connection to arbitrary MySQL server",
                    "default": true
                },
                "port": {
                    "type": "number",
                    "description": "Database port to use to connect",
                    "default": 3306
                },
                "chartName": {
                    "type": "string",
                    "description": "Database suffix if included in the same release",
                    "default": ""
                },
                "host": {
                    "type": "string",
                    "description": "Database Hostname. Ignored when `db.chartName` is set.",
                    "default": ""
                },
                "bundleTestDB": {
                    "type": "boolean",
                    "description": "Deploy a MariaDB instance for testing purposes",
                    "default": false
                },
                "enableSsl": {
                    "type": "boolean",
                    "description": "Enable SSL for the connection between phpMyAdmin and the database",
                    "default": false
                },
                "ssl": {
                    "type": "object",
                    "properties": {
                        "clientKey": {
                            "type": "string",
                            "description": "Client key file when using SSL",
                            "default": ""
                        },
                        "clientCertificate": {
                            "type": "string",
                            "description": "Client certificate file when using SSL",
                            "default": ""
                        },
                        "caCertificate": {
                            "type": "string",
                            "description": "CA file when using SSL",
                            "default": ""
                        },
                        "ciphers": {
                            "type": "array",
                            "description": "List of allowable ciphers for connections when using SSL",
                            "default": [],
                            "items": {}
                        },
                        "verify": {
                            "type": "boolean",
                            "description": "Enable SSL certificate validation",
                            "default": true
                        }
                    }
                }
            }
        },
        "mariadb": {
            "type": "object",
            "description": "MariaDB chart configuration",
            "default": {}
        },
        "serviceAccount": {
            "type": "object",
            "properties": {
                "create": {
                    "type": "boolean",
                    "description": "Enable creation of ServiceAccount for PhpMyAdmin pod",
                    "default": false
                },
                "name": {
                    "type": "string",
                    "description": "The name of the ServiceAccount to use.",
                    "default": ""
                },
                "automountServiceAccountToken": {
                    "type": "boolean",
                    "description": "Allows auto mount of ServiceAccountToken on the serviceAccount created",
                    "default": true
                },
                "annotations": {
                    "type": "object",
                    "description": "Additional custom annotations for the ServiceAccount",
                    "default": {}
                }
            }
        },
        "metrics": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Start a side-car prometheus exporter",
                    "default": false
                },
                "image": {
                    "type": "object",
                    "properties": {
                        "registry": {
                            "type": "string",
                            "description": "Apache exporter image registry",
                            "default": "docker.io"
                        },
                        "repository": {
                            "type": "string",
                            "description": "Apache exporter image repository",
                            "default": "bitnami/apache-exporter"
                        },
                        "tag": {
                            "type": "string",
                            "description": "Apache exporter image tag (immutable tags are recommended)",
                            "default": "1.0.1-debian-11-r21"
                        },
                        "digest": {
                            "type": "string",
                            "description": "Apache exporter image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag",
                            "default": ""
                        },
                        "pullPolicy": {
                            "type": "string",
                            "description": "Image pull policy",
                            "default": "IfNotPresent"
                        },
                        "pullSecrets": {
                            "type": "array",
                            "description": "Specify docker-registry secret names as an array",
                            "default": [],
                            "items": {}
                        }
                    }
                },
                "resources": {
                    "type": "object",
                    "description": "Metrics exporter resource requests and limits",
                    "default": {}
                },
                "service": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "Prometheus metrics service type",
                            "default": "ClusterIP"
                        },
                        "port": {
                            "type": "number",
                            "description": "Prometheus metrics service port",
                            "default": 9117
                        },
                        "annotations": {
                            "type": "object",
                            "properties": {
                                "prometheus": {
                                    "type": "object",
                                    "properties": {
                                        "io/scrape": {
                                            "type": "string",
                                            "description": "",
                                            "default": "true"
                                        },
                                        "io/port": {
                                            "type": "string",
                                            "description": "",
                                            "default": "{{ .Values.metrics.service.port }}"
                                        }
                                    }
                                }
                            }
                        },
                        "clusterIP": {
                            "type": "string",
                            "description": "phpmyadmin service Cluster IP",
                            "default": ""
                        },
                        "loadBalancerIP": {
                            "type": "string",
                            "description": "Load Balancer IP if the Prometheus metrics server type is `LoadBalancer`",
                            "default": ""
                        },
                        "loadBalancerSourceRanges": {
                            "type": "array",
                            "description": "phpmyadmin service Load Balancer sources",
                            "default": [],
                            "items": {}
                        },
                        "externalTrafficPolicy": {
                            "type": "string",
                            "description": "phpmyadmin service external traffic policy",
                            "default": "Cluster"
                        },
                        "sessionAffinity": {
                            "type": "string",
                            "description": "Session Affinity for Kubernetes service, can be \"None\" or \"ClientIP\"",
                            "default": "None"
                        },
                        "sessionAffinityConfig": {
                            "type": "object",
                            "description": "Additional settings for the sessionAffinity",
                            "default": {}
                        }
                    }
                },
                "serviceMonitor": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Create ServiceMonitor Resource for scraping metrics using PrometheusOperator",
                            "default": false
                        },
                        "namespace": {
                            "type": "string",
                            "description": "Specify the namespace in which the serviceMonitor resource will be created",
                            "default": ""
                        },
                        "jobLabel": {
                            "type": "string",
                            "description": "The name of the label on the target service to use as the job name in prometheus.",
                            "default": ""
                        },
                        "interval": {
                            "type": "string",
                            "description": "Specify the interval at which metrics should be scraped",
                            "default": "30s"
                        },
                        "scrapeTimeout": {
                            "type": "string",
                            "description": "Specify the timeout after which the scrape is ended",
                            "default": ""
                        },
                        "relabelings": {
                            "type": "array",
                            "description": "RelabelConfigs to apply to samples before scraping",
                            "default": [],
                            "items": {}
                        },
                        "metricRelabelings": {
                            "type": "array",
                            "description": "Specify Metric Relabelings to add to the scrape endpoint",
                            "default": [],
                            "items": {}
                        },
                        "labels": {
                            "type": "object",
                            "description": "Extra labels for the ServiceMonitor",
                            "default": {}
                        },
                        "honorLabels": {
                            "type": "boolean",
                            "description": "Specify honorLabels parameter to add the scrape endpoint",
                            "default": false
                        },
                        "selector": {
                            "type": "object",
                            "description": "ServiceMonitor selector labels",
                            "default": {}
                        }
                    }
                }
            }
        },
        "networkPolicy": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable network policies",
                    "default": false
                },
                "metrics": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable network policy for metrics (prometheus)",
                            "default": false
                        },
                        "namespaceSelector": {
                            "type": "object",
                            "description": "Monitoring namespace selector labels. These labels will be used to identify the prometheus' namespace.",
                            "default": {}
                        },
                        "podSelector": {
                            "type": "object",
                            "description": "Monitoring pod selector labels. These labels will be used to identify the Prometheus pods.",
                            "default": {}
                        }
                    }
                },
                "ingress": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable network policy for Ingress Proxies",
                            "default": false
                        },
                        "namespaceSelector": {
                            "type": "object",
                            "description": "Ingress Proxy namespace selector labels. These labels will be used to identify the Ingress Proxy's namespace.",
                            "default": {}
                        },
                        "podSelector": {
                            "type": "object",
                            "description": "Ingress Proxy pods selector labels. These labels will be used to identify the Ingress Proxy pods.",
                            "default": {}
                        }
                    }
                },
                "ingressRules": {
                    "type": "object",
                    "properties": {
                        "backendOnlyAccessibleByFrontend": {
                            "type": "boolean",
                            "description": "Enable ingress rule that makes the backend (mariadb) only accessible by phpMyAdmin's pods.",
                            "default": false
                        },
                        "customBackendSelector": {
                            "type": "object",
                            "description": "Backend selector labels. These labels will be used to identify the backend pods.",
                            "default": {}
                        },
                        "accessOnlyFrom": {
                            "type": "object",
                            "properties": {
                                "enabled": {
                                    "type": "boolean",
                                    "description": "Enable ingress rule that makes phpMyAdmin only accessible from a particular origin",
                                    "default": false
                                },
                                "namespaceSelector": {
                                    "type": "object",
                                    "description": "Namespace selector label that is allowed to access phpMyAdmin. This label will be used to identified the allowed namespace(s).",
                                    "default": {}
                                },
                                "podSelector": {
                                    "type": "object",
                                    "description": "Pods selector label that is allowed to access phpMyAdmin. This label will be used to identified the allowed pod(s).",
                                    "default": {}
                                }
                            }
                        },
                        "customRules": {
                            "type": "object",
                            "description": "Custom network policy ingress rule",
                            "default": {}
                        }
                    }
                },
                "egressRules": {
                    "type": "object",
                    "properties": {
                        "denyConnectionsToExternal": {
                            "type": "boolean",
                            "description": "Enable egress rule that denies outgoing traffic outside the cluster, except for DNS (port 53).",
                            "default": false
                        },
                        "customRules": {
                            "type": "object",
                            "description": "Custom network policy rule",
                            "default": {}
                        }
                    }
                }
            }
        }
    }
}