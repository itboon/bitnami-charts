{
    "title": "Chart Values",
    "type": "object",
    "properties": {
        "global": {
            "type": "object",
            "properties": {
                "imageRegistry": {
                    "type": "string",
                    "description": "Global Docker image registry",
                    "default": ""
                },
                "imagePullSecrets": {
                    "type": "array",
                    "description": "Global Docker registry secret names as an array",
                    "default": [],
                    "items": {}
                },
                "storageClass": {
                    "type": "string",
                    "description": "Global StorageClass for Persistent Volume(s)",
                    "default": ""
                }
            }
        },
        "kubeVersion": {
            "type": "string",
            "description": "Override Kubernetes version",
            "default": ""
        },
        "nameOverride": {
            "type": "string",
            "description": "String to partially override common.names.name",
            "default": ""
        },
        "fullnameOverride": {
            "type": "string",
            "description": "String to fully override common.names.fullname",
            "default": ""
        },
        "namespaceOverride": {
            "type": "string",
            "description": "String to fully override common.names.namespace",
            "default": ""
        },
        "commonLabels": {
            "type": "object",
            "description": "Labels to add to all deployed objects",
            "default": {}
        },
        "commonAnnotations": {
            "type": "object",
            "description": "Annotations to add to all deployed objects",
            "default": {}
        },
        "clusterDomain": {
            "type": "string",
            "description": "Kubernetes cluster domain name",
            "default": "cluster.local"
        },
        "extraDeploy": {
            "type": "array",
            "description": "Array of extra objects to deploy with the release",
            "default": [],
            "items": {}
        },
        "image": {
            "type": "object",
            "properties": {
                "registry": {
                    "type": "string",
                    "description": "Pinniped image registry",
                    "default": "docker.io"
                },
                "repository": {
                    "type": "string",
                    "description": "Pinniped image repository",
                    "default": "bitnami/pinniped"
                },
                "tag": {
                    "type": "string",
                    "description": "Pinniped image tag (immutable tags are recommended)",
                    "default": "0.25.0-debian-11-r9"
                },
                "digest": {
                    "type": "string",
                    "description": "Pinniped image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag",
                    "default": ""
                },
                "pullPolicy": {
                    "type": "string",
                    "description": "Pinniped image pull policy",
                    "default": "IfNotPresent"
                },
                "pullSecrets": {
                    "type": "array",
                    "description": "Pinniped image pull secrets",
                    "default": [],
                    "items": {}
                }
            }
        },
        "concierge": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Deploy Concierge",
                    "default": true
                },
                "replicaCount": {
                    "type": "number",
                    "description": "Number of Concierge replicas to deploy",
                    "default": 1
                },
                "containerPorts": {
                    "type": "object",
                    "properties": {
                        "api": {
                            "type": "number",
                            "description": "Concierge API container port",
                            "default": 10250
                        },
                        "proxy": {
                            "type": "number",
                            "description": "Concierge Proxy container port",
                            "default": 8444
                        }
                    }
                },
                "configurationPorts": {
                    "type": "object",
                    "properties": {
                        "aggregatedAPIServerPort": {
                            "type": "number",
                            "description": "Concierge API configuration port",
                            "default": 10250
                        },
                        "impersonationProxyServerPort": {
                            "type": "number",
                            "description": "Concierge Proxy configuration port",
                            "default": 8444
                        }
                    }
                },
                "hostNetwork": {
                    "type": "boolean",
                    "description": "Concierge API and Proxy container hostNetwork",
                    "default": false
                },
                "dnsPolicy": {
                    "type": "string",
                    "description": "Concierge API and Proxy container dnsPolicy",
                    "default": ""
                },
                "configuration": {
                    "type": "string",
                    "description": "Concierge pinniped.yaml configuration file",
                    "default": "discovery:\n  url: null\napi:\n  servingCertificate:\n    durationSeconds: 2592000\n    renewBeforeSeconds: 2160000\napiGroupSuffix: pinniped.dev\n{{- if .Values.concierge.configurationPorts.aggregatedAPIServerPort }}\naggregatedAPIServerPort: {{ .Values.concierge.configurationPorts.aggregatedAPIServerPort }}\n{{- end }}\n{{- if .Values.concierge.configurationPorts.impersonationProxyServerPort }}\nimpersonationProxyServerPort: {{ .Values.concierge.configurationPorts.impersonationProxyServerPort }}\n{{- end }}\nnames:\n  servingCertificateSecret: {{ printf \"%s-%s\" (include \"pinniped.concierge.api.fullname\" .) \"tls-serving-certificate\" | trunc 63 | trimSuffix \"-\" }}\n  credentialIssuer: {{ template \"pinniped.concierge.fullname\" . }}\n  apiService: {{ template \"pinniped.concierge.api.fullname\" . }}\n  impersonationLoadBalancerService: {{ printf \"%s-%s\" (include \"pinniped.concierge.impersonation-proxy.fullname\" .) \"load-balancer\" | trunc 63 | trimSuffix \"-\" }}\n  impersonationClusterIPService: {{ printf \"%s-%s\" (include \"pinniped.concierge.impersonation-proxy.fullname\" .) \"cluster-ip\" | trunc 63 | trimSuffix \"-\" }}\n  impersonationTLSCertificateSecret: {{ printf \"%s-%s\" (include \"pinniped.concierge.impersonation-proxy.fullname\" .) \"tls-serving-certificate\" | trunc 63 | trimSuffix \"-\" }}\n  impersonationCACertificateSecret: {{ printf \"%s-%s\" (include \"pinniped.concierge.impersonation-proxy.fullname\" .) \"ca-certificate\" | trunc 63 | trimSuffix \"-\" }}\n  impersonationSignerSecret: {{ printf \"%s-%s\" (include \"pinniped.concierge.impersonation-proxy.fullname\" .) \"signer-ca-certificate\" | trunc 63 | trimSuffix \"-\" }}\n  agentServiceAccount: {{ template \"pinniped.concierge.kube-cert-agent.fullname\" . }}\nlabels: {\"app\":\"pinniped-concierge\",\"app.kubernetes.io/part-of\":\"pinniped\", \"app.kubernetes.io/component\": \"concierge\", \"app.kubernetes.io/instance\": \"{{ .Release.Name }}\"}\nkubeCertAgent:\n  namePrefix: {{ printf \"%s-%s\" (include \"pinniped.concierge.fullname\" .) \"kube-cert-agent\" | trunc 63 | trimSuffix \"-\" }}-\n  image: {{ template \"pinniped.image\" . }}\n"
                },
                "credentialIssuerConfig": {
                    "type": "string",
                    "description": "Configuration for the credential issuer",
                    "default": "impersonationProxy:\n  mode: auto\n  service:\n    type: LoadBalancer\n    annotations:\n      service.beta.kubernetes.io/aws-load-balancer-connection-idle-timeout: \"4000\"\n"
                },
                "livenessProbe": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable livenessProbe on Concierge containers",
                            "default": true
                        },
                        "initialDelaySeconds": {
                            "type": "number",
                            "description": "Initial delay seconds for livenessProbe",
                            "default": 10
                        },
                        "periodSeconds": {
                            "type": "number",
                            "description": "Period seconds for livenessProbe",
                            "default": 10
                        },
                        "timeoutSeconds": {
                            "type": "number",
                            "description": "Timeout seconds for livenessProbe",
                            "default": 1
                        },
                        "failureThreshold": {
                            "type": "number",
                            "description": "Failure threshold for livenessProbe",
                            "default": 3
                        },
                        "successThreshold": {
                            "type": "number",
                            "description": "Success threshold for livenessProbe",
                            "default": 1
                        }
                    }
                },
                "readinessProbe": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable readinessProbe on Concierge containers",
                            "default": true
                        },
                        "initialDelaySeconds": {
                            "type": "number",
                            "description": "Initial delay seconds for readinessProbe",
                            "default": 10
                        },
                        "periodSeconds": {
                            "type": "number",
                            "description": "Period seconds for readinessProbe",
                            "default": 10
                        },
                        "timeoutSeconds": {
                            "type": "number",
                            "description": "Timeout seconds for readinessProbe",
                            "default": 1
                        },
                        "failureThreshold": {
                            "type": "number",
                            "description": "Failure threshold for readinessProbe",
                            "default": 3
                        },
                        "successThreshold": {
                            "type": "number",
                            "description": "Success threshold for readinessProbe",
                            "default": 1
                        }
                    }
                },
                "startupProbe": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable startupProbe on Concierge containers",
                            "default": false
                        },
                        "initialDelaySeconds": {
                            "type": "number",
                            "description": "Initial delay seconds for startupProbe",
                            "default": 10
                        },
                        "periodSeconds": {
                            "type": "number",
                            "description": "Period seconds for startupProbe",
                            "default": 10
                        },
                        "timeoutSeconds": {
                            "type": "number",
                            "description": "Timeout seconds for startupProbe",
                            "default": 1
                        },
                        "failureThreshold": {
                            "type": "number",
                            "description": "Failure threshold for startupProbe",
                            "default": 3
                        },
                        "successThreshold": {
                            "type": "number",
                            "description": "Success threshold for startupProbe",
                            "default": 1
                        }
                    }
                },
                "customLivenessProbe": {
                    "type": "object",
                    "description": "Custom livenessProbe that overrides the default one",
                    "default": {}
                },
                "customReadinessProbe": {
                    "type": "object",
                    "description": "Custom readinessProbe that overrides the default one",
                    "default": {}
                },
                "customStartupProbe": {
                    "type": "object",
                    "description": "Custom startupProbe that overrides the default one",
                    "default": {}
                },
                "resources": {
                    "type": "object",
                    "properties": {
                        "limits": {
                            "type": "object",
                            "description": "The resources limits for the Concierge containers",
                            "default": {}
                        },
                        "requests": {
                            "type": "object",
                            "description": "The requested resources for the Concierge containers",
                            "default": {}
                        }
                    }
                },
                "podSecurityContext": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enabled Concierge pods' Security Context",
                            "default": true
                        },
                        "fsGroup": {
                            "type": "number",
                            "description": "Set Concierge pod's Security Context fsGroup",
                            "default": 1001
                        }
                    }
                },
                "containerSecurityContext": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enabled Concierge containers' Security Context",
                            "default": true
                        },
                        "runAsUser": {
                            "type": "number",
                            "description": "Set Concierge containers' Security Context runAsUser",
                            "default": 1001
                        },
                        "runAsNonRoot": {
                            "type": "boolean",
                            "description": "Set Concierge containers' Security Context runAsNonRoot",
                            "default": true
                        },
                        "readOnlyRootFilesystem": {
                            "type": "boolean",
                            "description": "Enable readOnlyRootFilesystem",
                            "default": false
                        }
                    }
                },
                "existingConfigmap": {
                    "type": "string",
                    "description": "The name of an existing ConfigMap with your custom configuration for Concierge",
                    "default": ""
                },
                "command": {
                    "type": "array",
                    "description": "Override default container command (useful when using custom images)",
                    "default": [],
                    "items": {}
                },
                "args": {
                    "type": "array",
                    "description": "Override default container args (useful when using custom images)",
                    "default": [],
                    "items": {}
                },
                "deployAPIService": {
                    "type": "boolean",
                    "description": "Deploy the APIService objects",
                    "default": true
                },
                "hostAliases": {
                    "type": "array",
                    "description": "Concierge pods host aliases",
                    "default": [],
                    "items": {}
                },
                "podLabels": {
                    "type": "object",
                    "description": "Extra labels for Concierge pods",
                    "default": {}
                },
                "podAnnotations": {
                    "type": "object",
                    "description": "Annotations for Concierge pods",
                    "default": {}
                },
                "podAffinityPreset": {
                    "type": "string",
                    "description": "Pod affinity preset. Ignored if `concierge.affinity` is set. Allowed values: `soft` or `hard`",
                    "default": ""
                },
                "podAntiAffinityPreset": {
                    "type": "string",
                    "description": "Pod anti-affinity preset. Ignored if `concierge.affinity` is set. Allowed values: `soft` or `hard`",
                    "default": "soft"
                },
                "nodeAffinityPreset": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "Node affinity preset type. Ignored if `concierge.affinity` is set. Allowed values: `soft` or `hard`",
                            "default": ""
                        },
                        "key": {
                            "type": "string",
                            "description": "Node label key to match. Ignored if `concierge.affinity` is set",
                            "default": ""
                        },
                        "values": {
                            "type": "array",
                            "description": "Node label values to match. Ignored if `concierge.affinity` is set",
                            "default": [],
                            "items": {}
                        }
                    }
                },
                "affinity": {
                    "type": "object",
                    "description": "Affinity for Concierge pods assignment",
                    "default": {}
                },
                "nodeSelector": {
                    "type": "object",
                    "description": "Node labels for Concierge pods assignment",
                    "default": {}
                },
                "tolerations": {
                    "type": "array",
                    "description": "Tolerations for Concierge pods assignment",
                    "default": [],
                    "items": {}
                },
                "updateStrategy": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "Concierge statefulset strategy type",
                            "default": "RollingUpdate"
                        }
                    }
                },
                "priorityClassName": {
                    "type": "string",
                    "description": "Concierge pods' priorityClassName",
                    "default": ""
                },
                "topologySpreadConstraints": {
                    "type": "object",
                    "description": "Topology Spread Constraints for pod assignment spread across your cluster among failure-domains. Evaluated as a template",
                    "default": {}
                },
                "schedulerName": {
                    "type": "string",
                    "description": "Name of the k8s scheduler (other than default) for Concierge pods",
                    "default": ""
                },
                "terminationGracePeriodSeconds": {
                    "type": "string",
                    "description": "Seconds Redmine pod needs to terminate gracefully",
                    "default": ""
                },
                "lifecycleHooks": {
                    "type": "object",
                    "description": "for the Concierge container(s) to automate configuration before or after startup",
                    "default": {}
                },
                "extraEnvVars": {
                    "type": "array",
                    "description": "Array with extra environment variables to add to Concierge nodes",
                    "default": [],
                    "items": {}
                },
                "extraEnvVarsCM": {
                    "type": "string",
                    "description": "Name of existing ConfigMap containing extra env vars for Concierge nodes",
                    "default": ""
                },
                "extraEnvVarsSecret": {
                    "type": "string",
                    "description": "Name of existing Secret containing extra env vars for Concierge nodes",
                    "default": ""
                },
                "extraVolumes": {
                    "type": "array",
                    "description": "Optionally specify extra list of additional volumes for the Concierge pod(s)",
                    "default": [],
                    "items": {}
                },
                "extraVolumeMounts": {
                    "type": "array",
                    "description": "Optionally specify extra list of additional volumeMounts for the Concierge container(s)",
                    "default": [],
                    "items": {}
                },
                "sidecars": {
                    "type": "array",
                    "description": "Add additional sidecar containers to the Concierge pod(s)",
                    "default": [],
                    "items": {}
                },
                "initContainers": {
                    "type": "array",
                    "description": "Add additional init containers to the Concierge pod(s)",
                    "default": [],
                    "items": {}
                },
                "rbac": {
                    "type": "object",
                    "properties": {
                        "create": {
                            "type": "boolean",
                            "description": "Create Concierge RBAC objects",
                            "default": true
                        }
                    }
                },
                "serviceAccount": {
                    "type": "object",
                    "properties": {
                        "concierge": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Name of an existing Service Account for the Concierge Deployment",
                                    "default": ""
                                },
                                "create": {
                                    "type": "boolean",
                                    "description": "Create a Service Account for the Concierge Deployment",
                                    "default": true
                                },
                                "automountServiceAccountToken": {
                                    "type": "boolean",
                                    "description": "Auto mount token for the Concierge Deployment Service Account",
                                    "default": true
                                },
                                "annotations": {
                                    "type": "object",
                                    "description": "Annotations for the Concierge Service Account",
                                    "default": {}
                                }
                            }
                        },
                        "impersonationProxy": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Name of an existing Service Account for the Concierge Impersonator",
                                    "default": ""
                                },
                                "create": {
                                    "type": "boolean",
                                    "description": "Create a Service Account for the Concierge Impersonator",
                                    "default": true
                                },
                                "automountServiceAccountToken": {
                                    "type": "boolean",
                                    "description": "Auto mount token for the Concierge Impersonator Service Account",
                                    "default": true
                                },
                                "annotations": {
                                    "type": "object",
                                    "description": "Annotations for the Concierge Service Account",
                                    "default": {}
                                }
                            }
                        },
                        "kubeCertAgentService": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Name of an existing Service Account for the Concierge kube-cert-agent-service",
                                    "default": ""
                                },
                                "create": {
                                    "type": "boolean",
                                    "description": "Create a Service Account for the Concierge kube-cert-agent-service",
                                    "default": true
                                },
                                "automountServiceAccountToken": {
                                    "type": "boolean",
                                    "description": "Auto mount token for the Concierge kube-cert-agent-service Service Account",
                                    "default": true
                                },
                                "annotations": {
                                    "type": "object",
                                    "description": "Annotations for the Concierge Service Account",
                                    "default": {}
                                }
                            }
                        }
                    }
                },
                "service": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "Concierge service type",
                            "default": "ClusterIP"
                        },
                        "ports": {
                            "type": "object",
                            "properties": {
                                "https": {
                                    "type": "number",
                                    "description": "Concierge service HTTPS port",
                                    "default": 443
                                }
                            }
                        },
                        "nodePorts": {
                            "type": "object",
                            "properties": {
                                "https": {
                                    "type": "string",
                                    "description": "Node port for HTTPS",
                                    "default": ""
                                }
                            }
                        },
                        "clusterIP": {
                            "type": "string",
                            "description": "Concierge service Cluster IP",
                            "default": ""
                        },
                        "labels": {
                            "type": "object",
                            "description": "Add labels to the service",
                            "default": {}
                        },
                        "loadBalancerIP": {
                            "type": "string",
                            "description": "Concierge service Load Balancer IP",
                            "default": ""
                        },
                        "loadBalancerSourceRanges": {
                            "type": "array",
                            "description": "Concierge service Load Balancer sources",
                            "default": [],
                            "items": {}
                        },
                        "externalTrafficPolicy": {
                            "type": "string",
                            "description": "Concierge service external traffic policy",
                            "default": "Cluster"
                        },
                        "annotations": {
                            "type": "object",
                            "description": "Additional custom annotations for Concierge service",
                            "default": {}
                        },
                        "extraPorts": {
                            "type": "array",
                            "description": "Extra ports to expose in Concierge service (normally used with the `sidecars` value)",
                            "default": [],
                            "items": {}
                        },
                        "sessionAffinity": {
                            "type": "string",
                            "description": "Control where client requests go, to the same pod or round-robin",
                            "default": "None"
                        },
                        "sessionAffinityConfig": {
                            "type": "object",
                            "description": "Additional settings for the sessionAffinity",
                            "default": {}
                        }
                    }
                }
            }
        },
        "supervisor": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Deploy Supervisor",
                    "default": true
                },
                "replicaCount": {
                    "type": "number",
                    "description": "Number of Supervisor replicas to deploy",
                    "default": 1
                },
                "containerPorts": {
                    "type": "object",
                    "properties": {
                        "https": {
                            "type": "number",
                            "description": "Supervisor HTTP container port",
                            "default": 8443
                        }
                    }
                },
                "deployAPIService": {
                    "type": "boolean",
                    "description": "Deploy the APIService objects",
                    "default": true
                },
                "configuration": {
                    "type": "string",
                    "description": "Supervisor pinniped.yaml configuration file",
                    "default": "apiGroupSuffix: pinniped.dev\nnames:\n  defaultTLSCertificateSecret: {{ printf \"%s-%s\" (include \"pinniped.supervisor.fullname\" .) \"default-tls-certificate\" | trunc 63 | trimSuffix \"-\" }}\n  apiService: {{ template \"pinniped.supervisor.api.fullname\" . }}\nlabels: {\"app.kubernetes.io/part-of\":\"pinniped\", \"app.kubernetes.io/component\": \"supervisor\", \"app.kubernetes.io/instance\": \"{{ .Release.Name }}\"}\ninsecureAcceptExternalUnencryptedHttpRequests: false\n"
                },
                "livenessProbe": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable livenessProbe on Supervisor containers",
                            "default": true
                        },
                        "initialDelaySeconds": {
                            "type": "number",
                            "description": "Initial delay seconds for livenessProbe",
                            "default": 10
                        },
                        "periodSeconds": {
                            "type": "number",
                            "description": "Period seconds for livenessProbe",
                            "default": 10
                        },
                        "timeoutSeconds": {
                            "type": "number",
                            "description": "Timeout seconds for livenessProbe",
                            "default": 1
                        },
                        "failureThreshold": {
                            "type": "number",
                            "description": "Failure threshold for livenessProbe",
                            "default": 3
                        },
                        "successThreshold": {
                            "type": "number",
                            "description": "Success threshold for livenessProbe",
                            "default": 1
                        }
                    }
                },
                "readinessProbe": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable readinessProbe on Supervisor containers",
                            "default": true
                        },
                        "initialDelaySeconds": {
                            "type": "number",
                            "description": "Initial delay seconds for readinessProbe",
                            "default": 10
                        },
                        "periodSeconds": {
                            "type": "number",
                            "description": "Period seconds for readinessProbe",
                            "default": 10
                        },
                        "timeoutSeconds": {
                            "type": "number",
                            "description": "Timeout seconds for readinessProbe",
                            "default": 1
                        },
                        "failureThreshold": {
                            "type": "number",
                            "description": "Failure threshold for readinessProbe",
                            "default": 3
                        },
                        "successThreshold": {
                            "type": "number",
                            "description": "Success threshold for readinessProbe",
                            "default": 1
                        }
                    }
                },
                "startupProbe": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable startupProbe on Supervisor containers",
                            "default": false
                        },
                        "initialDelaySeconds": {
                            "type": "number",
                            "description": "Initial delay seconds for startupProbe",
                            "default": 10
                        },
                        "periodSeconds": {
                            "type": "number",
                            "description": "Period seconds for startupProbe",
                            "default": 10
                        },
                        "timeoutSeconds": {
                            "type": "number",
                            "description": "Timeout seconds for startupProbe",
                            "default": 1
                        },
                        "failureThreshold": {
                            "type": "number",
                            "description": "Failure threshold for startupProbe",
                            "default": 3
                        },
                        "successThreshold": {
                            "type": "number",
                            "description": "Success threshold for startupProbe",
                            "default": 1
                        }
                    }
                },
                "customLivenessProbe": {
                    "type": "object",
                    "description": "Custom livenessProbe that overrides the default one",
                    "default": {}
                },
                "customReadinessProbe": {
                    "type": "object",
                    "description": "Custom readinessProbe that overrides the default one",
                    "default": {}
                },
                "customStartupProbe": {
                    "type": "object",
                    "description": "Custom startupProbe that overrides the default one",
                    "default": {}
                },
                "resources": {
                    "type": "object",
                    "properties": {
                        "limits": {
                            "type": "object",
                            "description": "The resources limits for the Supervisor containers",
                            "default": {}
                        },
                        "requests": {
                            "type": "object",
                            "description": "The requested resources for the Supervisor containers",
                            "default": {}
                        }
                    }
                },
                "podSecurityContext": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enabled Supervisor pods' Security Context",
                            "default": true
                        },
                        "fsGroup": {
                            "type": "number",
                            "description": "Set Supervisor pod's Security Context fsGroup",
                            "default": 1001
                        }
                    }
                },
                "containerSecurityContext": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enabled Supervisor containers' Security Context",
                            "default": true
                        },
                        "runAsUser": {
                            "type": "number",
                            "description": "Set Supervisor containers' Security Context runAsUser",
                            "default": 1001
                        },
                        "runAsNonRoot": {
                            "type": "boolean",
                            "description": "Set Supervisor containers' Security Context runAsNonRoot",
                            "default": true
                        },
                        "readOnlyRootFilesystem": {
                            "type": "boolean",
                            "description": "Enable readOnlyRootFilesystem",
                            "default": false
                        }
                    }
                },
                "existingConfigmap": {
                    "type": "string",
                    "description": "The name of an existing ConfigMap with your custom configuration for Supervisor",
                    "default": ""
                },
                "command": {
                    "type": "array",
                    "description": "Override default container command (useful when using custom images)",
                    "default": [],
                    "items": {}
                },
                "args": {
                    "type": "array",
                    "description": "Override default container args (useful when using custom images)",
                    "default": [],
                    "items": {}
                },
                "hostAliases": {
                    "type": "array",
                    "description": "Supervisor pods host aliases",
                    "default": [],
                    "items": {}
                },
                "podLabels": {
                    "type": "object",
                    "description": "Extra labels for Supervisor pods",
                    "default": {}
                },
                "podAnnotations": {
                    "type": "object",
                    "description": "Annotations for Supervisor pods",
                    "default": {}
                },
                "podAffinityPreset": {
                    "type": "string",
                    "description": "Pod affinity preset. Ignored if `supervisor.affinity` is set. Allowed values: `soft` or `hard`",
                    "default": ""
                },
                "podAntiAffinityPreset": {
                    "type": "string",
                    "description": "Pod anti-affinity preset. Ignored if `supervisor.affinity` is set. Allowed values: `soft` or `hard`",
                    "default": "soft"
                },
                "nodeAffinityPreset": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "Node affinity preset type. Ignored if `supervisor.affinity` is set. Allowed values: `soft` or `hard`",
                            "default": ""
                        },
                        "key": {
                            "type": "string",
                            "description": "Node label key to match. Ignored if `supervisor.affinity` is set",
                            "default": ""
                        },
                        "values": {
                            "type": "array",
                            "description": "Node label values to match. Ignored if `supervisor.affinity` is set",
                            "default": [],
                            "items": {}
                        }
                    }
                },
                "affinity": {
                    "type": "object",
                    "description": "Affinity for Supervisor pods assignment",
                    "default": {}
                },
                "nodeSelector": {
                    "type": "object",
                    "description": "Node labels for Supervisor pods assignment",
                    "default": {}
                },
                "tolerations": {
                    "type": "array",
                    "description": "Tolerations for Supervisor pods assignment",
                    "default": [],
                    "items": {}
                },
                "updateStrategy": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "Supervisor statefulset strategy type",
                            "default": "RollingUpdate"
                        }
                    }
                },
                "priorityClassName": {
                    "type": "string",
                    "description": "Supervisor pods' priorityClassName",
                    "default": ""
                },
                "topologySpreadConstraints": {
                    "type": "object",
                    "description": "Topology Spread Constraints for pod assignment spread across your cluster among failure-domains. Evaluated as a template",
                    "default": {}
                },
                "schedulerName": {
                    "type": "string",
                    "description": "Name of the k8s scheduler (other than default) for Supervisor pods",
                    "default": ""
                },
                "terminationGracePeriodSeconds": {
                    "type": "string",
                    "description": "Seconds Redmine pod needs to terminate gracefully",
                    "default": ""
                },
                "lifecycleHooks": {
                    "type": "object",
                    "description": "for the Supervisor container(s) to automate configuration before or after startup",
                    "default": {}
                },
                "extraEnvVars": {
                    "type": "array",
                    "description": "Array with extra environment variables to add to Supervisor nodes",
                    "default": [],
                    "items": {}
                },
                "extraEnvVarsCM": {
                    "type": "string",
                    "description": "Name of existing ConfigMap containing extra env vars for Supervisor nodes",
                    "default": ""
                },
                "extraEnvVarsSecret": {
                    "type": "string",
                    "description": "Name of existing Secret containing extra env vars for Supervisor nodes",
                    "default": ""
                },
                "extraVolumes": {
                    "type": "array",
                    "description": "Optionally specify extra list of additional volumes for the Supervisor pod(s)",
                    "default": [],
                    "items": {}
                },
                "extraVolumeMounts": {
                    "type": "array",
                    "description": "Optionally specify extra list of additional volumeMounts for the Supervisor container(s)",
                    "default": [],
                    "items": {}
                },
                "sidecars": {
                    "type": "array",
                    "description": "Add additional sidecar containers to the Supervisor pod(s)",
                    "default": [],
                    "items": {}
                },
                "initContainers": {
                    "type": "array",
                    "description": "Add additional init containers to the Supervisor pod(s)",
                    "default": [],
                    "items": {}
                },
                "rbac": {
                    "type": "object",
                    "properties": {
                        "create": {
                            "type": "boolean",
                            "description": "Create Supervisor RBAC objects",
                            "default": true
                        }
                    }
                },
                "serviceAccount": {
                    "type": "object",
                    "properties": {
                        "name": {
                            "type": "string",
                            "description": "Name of an existing Service Account for the Supervisor Deployment",
                            "default": ""
                        },
                        "create": {
                            "type": "boolean",
                            "description": "Create a Service Account for the Supervisor Deployment",
                            "default": true
                        },
                        "automountServiceAccountToken": {
                            "type": "boolean",
                            "description": "Auto mount token for the Supervisor Deployment Service Account",
                            "default": true
                        },
                        "annotations": {
                            "type": "object",
                            "description": "Annotations for the Supervisor Service Account",
                            "default": {}
                        }
                    }
                },
                "service": {
                    "type": "object",
                    "properties": {
                        "api": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string",
                                    "description": "Supervisor API service type",
                                    "default": "ClusterIP"
                                },
                                "ports": {
                                    "type": "object",
                                    "properties": {
                                        "https": {
                                            "type": "number",
                                            "description": "Supervisor API service HTTPS port",
                                            "default": 443
                                        },
                                        "aggregatedAPIServer": {
                                            "type": "number",
                                            "description": "Supervisor aggregated API server port",
                                            "default": 10250
                                        }
                                    }
                                },
                                "nodePorts": {
                                    "type": "object",
                                    "properties": {
                                        "https": {
                                            "type": "string",
                                            "description": "Node port for HTTPS",
                                            "default": ""
                                        }
                                    }
                                },
                                "clusterIP": {
                                    "type": "string",
                                    "description": "Supervisor service Cluster IP",
                                    "default": ""
                                },
                                "labels": {
                                    "type": "object",
                                    "description": "Add labels to the service",
                                    "default": {}
                                },
                                "loadBalancerIP": {
                                    "type": "string",
                                    "description": "Supervisor service Load Balancer IP",
                                    "default": ""
                                },
                                "loadBalancerSourceRanges": {
                                    "type": "array",
                                    "description": "Supervisor service Load Balancer sources",
                                    "default": [],
                                    "items": {}
                                },
                                "externalTrafficPolicy": {
                                    "type": "string",
                                    "description": "Supervisor service external traffic policy",
                                    "default": "Cluster"
                                },
                                "annotations": {
                                    "type": "object",
                                    "description": "Additional custom annotations for Supervisor service",
                                    "default": {}
                                },
                                "extraPorts": {
                                    "type": "array",
                                    "description": "Extra ports to expose in Supervisor service (normally used with the `sidecars` value)",
                                    "default": [],
                                    "items": {}
                                },
                                "sessionAffinity": {
                                    "type": "string",
                                    "description": "Control where client requests go, to the same pod or round-robin",
                                    "default": "None"
                                },
                                "sessionAffinityConfig": {
                                    "type": "object",
                                    "description": "Additional settings for the sessionAffinity",
                                    "default": {}
                                }
                            }
                        },
                        "public": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string",
                                    "description": "Supervisor user-facing service type",
                                    "default": "LoadBalancer"
                                },
                                "ports": {
                                    "type": "object",
                                    "properties": {
                                        "https": {
                                            "type": "number",
                                            "description": "Supervisor user-facing service HTTPS port",
                                            "default": 443
                                        }
                                    }
                                },
                                "nodePorts": {
                                    "type": "object",
                                    "properties": {
                                        "https": {
                                            "type": "string",
                                            "description": "Node port for HTTPS",
                                            "default": ""
                                        }
                                    }
                                },
                                "clusterIP": {
                                    "type": "string",
                                    "description": "Supervisor service Cluster IP",
                                    "default": ""
                                },
                                "labels": {
                                    "type": "object",
                                    "description": "Add labels to the service",
                                    "default": {}
                                },
                                "loadBalancerIP": {
                                    "type": "string",
                                    "description": "Supervisor service Load Balancer IP",
                                    "default": ""
                                },
                                "loadBalancerSourceRanges": {
                                    "type": "array",
                                    "description": "Supervisor service Load Balancer sources",
                                    "default": [],
                                    "items": {}
                                },
                                "externalTrafficPolicy": {
                                    "type": "string",
                                    "description": "Supervisor service external traffic policy",
                                    "default": "Cluster"
                                },
                                "annotations": {
                                    "type": "object",
                                    "description": "Additional custom annotations for Supervisor service",
                                    "default": {}
                                },
                                "extraPorts": {
                                    "type": "array",
                                    "description": "Extra ports to expose in Supervisor service (normally used with the `sidecars` value)",
                                    "default": [],
                                    "items": {}
                                },
                                "sessionAffinity": {
                                    "type": "string",
                                    "description": "Control where client requests go, to the same pod or round-robin",
                                    "default": "None"
                                },
                                "sessionAffinityConfig": {
                                    "type": "object",
                                    "description": "Additional settings for the sessionAffinity",
                                    "default": {}
                                }
                            }
                        }
                    }
                },
                "ingress": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable ingress record generation for Pinniped Supervisor",
                            "default": false
                        },
                        "pathType": {
                            "type": "string",
                            "description": "Ingress path type",
                            "default": "ImplementationSpecific"
                        },
                        "apiVersion": {
                            "type": "string",
                            "description": "Force Ingress API version (automatically detected if not set)",
                            "default": ""
                        },
                        "ingressClassName": {
                            "type": "string",
                            "description": "IngressClass that will be be used to implement the Ingress (Kubernetes 1.18+)",
                            "default": ""
                        },
                        "hostname": {
                            "type": "string",
                            "description": "Default host for the ingress record",
                            "default": "pinniped-supervisor.local"
                        },
                        "path": {
                            "type": "string",
                            "description": "Default path for the ingress record",
                            "default": "/"
                        },
                        "annotations": {
                            "type": "object",
                            "description": "Additional annotations for the Ingress resource. To enable certificate autogeneration, place here your cert-manager annotations.",
                            "default": {}
                        },
                        "tls": {
                            "type": "boolean",
                            "description": "Enable TLS configuration for the host defined at `ingress.hostname` parameter",
                            "default": false
                        },
                        "selfSigned": {
                            "type": "boolean",
                            "description": "Create a TLS secret for this ingress record using self-signed certificates generated by Helm",
                            "default": false
                        },
                        "extraHosts": {
                            "type": "array",
                            "description": "An array with additional hostname(s) to be covered with the ingress record",
                            "default": [],
                            "items": {}
                        },
                        "extraPaths": {
                            "type": "array",
                            "description": "An array with additional arbitrary paths that may need to be added to the ingress under the main host",
                            "default": [],
                            "items": {}
                        },
                        "extraTls": {
                            "type": "array",
                            "description": "TLS configuration for additional hostname(s) to be covered with this ingress record",
                            "default": [],
                            "items": {}
                        },
                        "secrets": {
                            "type": "array",
                            "description": "Custom TLS certificates as secrets",
                            "default": [],
                            "items": {}
                        },
                        "extraRules": {
                            "type": "array",
                            "description": "Additional rules to be covered with this ingress record",
                            "default": [],
                            "items": {}
                        }
                    }
                }
            }
        }
    }
}