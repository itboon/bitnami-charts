{
    "title": "Chart Values",
    "type": "object",
    "properties": {
        "global": {
            "type": "object",
            "properties": {
                "imageRegistry": {
                    "type": "string",
                    "description": "Global Docker image registry",
                    "default": ""
                },
                "imagePullSecrets": {
                    "type": "array",
                    "description": "Global Docker registry secret names as an array",
                    "default": [],
                    "items": {}
                },
                "storageClass": {
                    "type": "string",
                    "description": "Global StorageClass for Persistent Volume(s)",
                    "default": ""
                }
            }
        },
        "kubeVersion": {
            "type": "string",
            "description": "Override Kubernetes version",
            "default": ""
        },
        "nameOverride": {
            "type": "string",
            "description": "String to partially override common.names.fullname",
            "default": ""
        },
        "fullnameOverride": {
            "type": "string",
            "description": "String to fully override common.names.fullname",
            "default": ""
        },
        "commonLabels": {
            "type": "object",
            "description": "Labels to add to all deployed objects",
            "default": {}
        },
        "commonAnnotations": {
            "type": "object",
            "description": "Annotations to add to all deployed objects",
            "default": {}
        },
        "clusterDomain": {
            "type": "string",
            "description": "Kubernetes cluster domain name",
            "default": "cluster.local"
        },
        "extraDeploy": {
            "type": "array",
            "description": "Array of extra objects to deploy with the release",
            "default": [],
            "items": {}
        },
        "diagnosticMode": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable diagnostic mode (all probes will be disabled)",
                    "default": false
                }
            }
        },
        "rabbitmqImage": {
            "type": "object",
            "properties": {
                "registry": {
                    "type": "string",
                    "description": "RabbitMQ Image registry",
                    "default": "docker.io"
                },
                "repository": {
                    "type": "string",
                    "description": "RabbitMQ Image repository",
                    "default": "bitnami/rabbitmq"
                },
                "tag": {
                    "type": "string",
                    "description": "RabbitMQ Image tag (immutable tags are recommended)",
                    "default": "3.11.22-debian-11-r2"
                },
                "digest": {
                    "type": "string",
                    "description": "RabbitMQ image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag",
                    "default": ""
                },
                "pullSecrets": {
                    "type": "array",
                    "description": "RabbitMQ Image pull secrets",
                    "default": [],
                    "items": {}
                }
            }
        },
        "credentialUpdaterImage": {
            "type": "object",
            "properties": {
                "registry": {
                    "type": "string",
                    "description": "RabbitMQ Default User Credential Updater image registry",
                    "default": "docker.io"
                },
                "repository": {
                    "type": "string",
                    "description": "RabbitMQ Default User Credential Updater image repository",
                    "default": "bitnami/rmq-default-credential-updater"
                },
                "tag": {
                    "type": "string",
                    "description": "RabbitMQ Default User Credential Updater image tag (immutable tags are recommended)",
                    "default": "1.0.2-debian-11-r20"
                },
                "digest": {
                    "type": "string",
                    "description": "RabbitMQ Default User Credential Updater image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag",
                    "default": ""
                },
                "pullSecrets": {
                    "type": "array",
                    "description": "RabbitMQ Default User Credential Updater image pull secrets",
                    "default": [],
                    "items": {}
                }
            }
        },
        "clusterOperator": {
            "type": "object",
            "properties": {
                "image": {
                    "type": "object",
                    "properties": {
                        "registry": {
                            "type": "string",
                            "description": "RabbitMQ Cluster Operator image registry",
                            "default": "docker.io"
                        },
                        "repository": {
                            "type": "string",
                            "description": "RabbitMQ Cluster Operator image repository",
                            "default": "bitnami/rabbitmq-cluster-operator"
                        },
                        "tag": {
                            "type": "string",
                            "description": "RabbitMQ Cluster Operator image tag (immutable tags are recommended)",
                            "default": "2.5.0-debian-11-r0"
                        },
                        "digest": {
                            "type": "string",
                            "description": "RabbitMQ Cluster Operator image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag",
                            "default": ""
                        },
                        "pullPolicy": {
                            "type": "string",
                            "description": "RabbitMQ Cluster Operator image pull policy",
                            "default": "IfNotPresent"
                        },
                        "pullSecrets": {
                            "type": "array",
                            "description": "RabbitMQ Cluster Operator image pull secrets",
                            "default": [],
                            "items": {}
                        }
                    }
                },
                "replicaCount": {
                    "type": "number",
                    "description": "Number of RabbitMQ Cluster Operator replicas to deploy",
                    "default": 1
                },
                "schedulerName": {
                    "type": "string",
                    "description": "Alternative scheduler",
                    "default": ""
                },
                "topologySpreadConstraints": {
                    "type": "array",
                    "description": "Topology Spread Constraints for pod assignment",
                    "default": [],
                    "items": {}
                },
                "terminationGracePeriodSeconds": {
                    "type": "string",
                    "description": "In seconds, time the given to the %%MAIN_CONTAINER_NAME%% pod needs to terminate gracefully",
                    "default": ""
                },
                "livenessProbe": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable livenessProbe on RabbitMQ Cluster Operator nodes",
                            "default": true
                        },
                        "initialDelaySeconds": {
                            "type": "number",
                            "description": "Initial delay seconds for livenessProbe",
                            "default": 5
                        },
                        "periodSeconds": {
                            "type": "number",
                            "description": "Period seconds for livenessProbe",
                            "default": 30
                        },
                        "timeoutSeconds": {
                            "type": "number",
                            "description": "Timeout seconds for livenessProbe",
                            "default": 5
                        },
                        "failureThreshold": {
                            "type": "number",
                            "description": "Failure threshold for livenessProbe",
                            "default": 5
                        },
                        "successThreshold": {
                            "type": "number",
                            "description": "Success threshold for livenessProbe",
                            "default": 1
                        }
                    }
                },
                "readinessProbe": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable readinessProbe on RabbitMQ Cluster Operator nodes",
                            "default": true
                        },
                        "initialDelaySeconds": {
                            "type": "number",
                            "description": "Initial delay seconds for readinessProbe",
                            "default": 5
                        },
                        "periodSeconds": {
                            "type": "number",
                            "description": "Period seconds for readinessProbe",
                            "default": 30
                        },
                        "timeoutSeconds": {
                            "type": "number",
                            "description": "Timeout seconds for readinessProbe",
                            "default": 5
                        },
                        "failureThreshold": {
                            "type": "number",
                            "description": "Failure threshold for readinessProbe",
                            "default": 5
                        },
                        "successThreshold": {
                            "type": "number",
                            "description": "Success threshold for readinessProbe",
                            "default": 1
                        }
                    }
                },
                "startupProbe": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable startupProbe on RabbitMQ Cluster Operator nodes",
                            "default": false
                        },
                        "initialDelaySeconds": {
                            "type": "number",
                            "description": "Initial delay seconds for startupProbe",
                            "default": 5
                        },
                        "periodSeconds": {
                            "type": "number",
                            "description": "Period seconds for startupProbe",
                            "default": 30
                        },
                        "timeoutSeconds": {
                            "type": "number",
                            "description": "Timeout seconds for startupProbe",
                            "default": 5
                        },
                        "failureThreshold": {
                            "type": "number",
                            "description": "Failure threshold for startupProbe",
                            "default": 5
                        },
                        "successThreshold": {
                            "type": "number",
                            "description": "Success threshold for startupProbe",
                            "default": 1
                        }
                    }
                },
                "customLivenessProbe": {
                    "type": "object",
                    "description": "Custom livenessProbe that overrides the default one",
                    "default": {}
                },
                "customReadinessProbe": {
                    "type": "object",
                    "description": "Custom readinessProbe that overrides the default one",
                    "default": {}
                },
                "customStartupProbe": {
                    "type": "object",
                    "description": "Custom startupProbe that overrides the default one",
                    "default": {}
                },
                "resources": {
                    "type": "object",
                    "properties": {
                        "limits": {
                            "type": "object",
                            "description": "The resources limits for the RabbitMQ Cluster Operator containers",
                            "default": {}
                        },
                        "requests": {
                            "type": "object",
                            "description": "The requested resources for the RabbitMQ Cluster Operator containers",
                            "default": {}
                        }
                    }
                },
                "podSecurityContext": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enabled RabbitMQ Cluster Operator pods' Security Context",
                            "default": true
                        },
                        "fsGroup": {
                            "type": "number",
                            "description": "Set RabbitMQ Cluster Operator pod's Security Context fsGroup",
                            "default": 1001
                        }
                    }
                },
                "containerSecurityContext": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enabled RabbitMQ Cluster Operator containers' Security Context",
                            "default": true
                        },
                        "runAsUser": {
                            "type": "number",
                            "description": "Set RabbitMQ Cluster Operator containers' Security Context runAsUser",
                            "default": 1001
                        },
                        "runAsNonRoot": {
                            "type": "boolean",
                            "description": "Force running the container as non root",
                            "default": true
                        },
                        "readOnlyRootFilesystem": {
                            "type": "boolean",
                            "description": "mount / (root) as a readonly filesystem on cluster operator containers",
                            "default": true
                        }
                    }
                },
                "command": {
                    "type": "array",
                    "description": "Override default container command (useful when using custom images)",
                    "default": [],
                    "items": {}
                },
                "args": {
                    "type": "array",
                    "description": "Override default container args (useful when using custom images)",
                    "default": [],
                    "items": {}
                },
                "hostAliases": {
                    "type": "array",
                    "description": "RabbitMQ Cluster Operator pods host aliases",
                    "default": [],
                    "items": {}
                },
                "podLabels": {
                    "type": "object",
                    "description": "Extra labels for RabbitMQ Cluster Operator pods",
                    "default": {}
                },
                "podAnnotations": {
                    "type": "object",
                    "description": "Annotations for RabbitMQ Cluster Operator pods",
                    "default": {}
                },
                "podAffinityPreset": {
                    "type": "string",
                    "description": "Pod affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`",
                    "default": ""
                },
                "podAntiAffinityPreset": {
                    "type": "string",
                    "description": "Pod anti-affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`",
                    "default": "soft"
                },
                "nodeAffinityPreset": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "Node affinity preset type. Ignored if `affinity` is set. Allowed values: `soft` or `hard`",
                            "default": ""
                        },
                        "key": {
                            "type": "string",
                            "description": "Node label key to match. Ignored if `affinity` is set",
                            "default": ""
                        },
                        "values": {
                            "type": "array",
                            "description": "Node label values to match. Ignored if `affinity` is set",
                            "default": [],
                            "items": {}
                        }
                    }
                },
                "affinity": {
                    "type": "object",
                    "description": "Affinity for RabbitMQ Cluster Operator pods assignment",
                    "default": {}
                },
                "nodeSelector": {
                    "type": "object",
                    "description": "Node labels for RabbitMQ Cluster Operator pods assignment",
                    "default": {}
                },
                "tolerations": {
                    "type": "array",
                    "description": "Tolerations for RabbitMQ Cluster Operator pods assignment",
                    "default": [],
                    "items": {}
                },
                "updateStrategy": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "RabbitMQ Cluster Operator statefulset strategy type",
                            "default": "RollingUpdate"
                        }
                    }
                },
                "priorityClassName": {
                    "type": "string",
                    "description": "RabbitMQ Cluster Operator pods' priorityClassName",
                    "default": ""
                },
                "lifecycleHooks": {
                    "type": "object",
                    "description": "for the RabbitMQ Cluster Operator container(s) to automate configuration before or after startup",
                    "default": {}
                },
                "containerPorts": {
                    "type": "object",
                    "properties": {
                        "metrics": {
                            "type": "number",
                            "description": "RabbitMQ Cluster Operator container port (used for metrics)",
                            "default": 9782
                        }
                    }
                },
                "extraEnvVars": {
                    "type": "array",
                    "description": "Array with extra environment variables to add to RabbitMQ Cluster Operator nodes",
                    "default": [],
                    "items": {}
                },
                "extraEnvVarsCM": {
                    "type": "string",
                    "description": "Name of existing ConfigMap containing extra env vars for RabbitMQ Cluster Operator nodes",
                    "default": ""
                },
                "extraEnvVarsSecret": {
                    "type": "string",
                    "description": "Name of existing Secret containing extra env vars for RabbitMQ Cluster Operator nodes",
                    "default": ""
                },
                "extraVolumes": {
                    "type": "array",
                    "description": "Optionally specify extra list of additional volumes for the RabbitMQ Cluster Operator pod(s)",
                    "default": [],
                    "items": {}
                },
                "extraVolumeMounts": {
                    "type": "array",
                    "description": "Optionally specify extra list of additional volumeMounts for the RabbitMQ Cluster Operator container(s)",
                    "default": [],
                    "items": {}
                },
                "sidecars": {
                    "type": "array",
                    "description": "Add additional sidecar containers to the RabbitMQ Cluster Operator pod(s)",
                    "default": [],
                    "items": {}
                },
                "initContainers": {
                    "type": "array",
                    "description": "Add additional init containers to the RabbitMQ Cluster Operator pod(s)",
                    "default": [],
                    "items": {}
                },
                "rbac": {
                    "type": "object",
                    "properties": {
                        "create": {
                            "type": "boolean",
                            "description": "Specifies whether RBAC resources should be created",
                            "default": true
                        },
                        "clusterRole": {
                            "type": "object",
                            "properties": {
                                "customRules": {
                                    "type": "array",
                                    "description": "Define custom access rules for the ClusterRole",
                                    "default": [],
                                    "items": {}
                                }
                            }
                        }
                    }
                },
                "serviceAccount": {
                    "type": "object",
                    "properties": {
                        "create": {
                            "type": "boolean",
                            "description": "Specifies whether a ServiceAccount should be created",
                            "default": true
                        },
                        "name": {
                            "type": "string",
                            "description": "The name of the ServiceAccount to use.",
                            "default": ""
                        },
                        "annotations": {
                            "type": "object",
                            "description": "Add annotations",
                            "default": {}
                        },
                        "automountServiceAccountToken": {
                            "type": "boolean",
                            "description": "Automount API credentials for a service account.",
                            "default": true
                        }
                    }
                },
                "metrics": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Create a service for accessing the metrics endpoint",
                            "default": false
                        },
                        "service": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string",
                                    "description": "RabbitMQ Cluster Operator metrics service type",
                                    "default": "ClusterIP"
                                },
                                "ports": {
                                    "type": "object",
                                    "properties": {
                                        "http": {
                                            "type": "number",
                                            "description": "RabbitMQ Cluster Operator metrics service HTTP port",
                                            "default": 80
                                        }
                                    }
                                },
                                "nodePorts": {
                                    "type": "object",
                                    "properties": {
                                        "http": {
                                            "type": "string",
                                            "description": "Node port for HTTP",
                                            "default": ""
                                        }
                                    }
                                },
                                "clusterIP": {
                                    "type": "string",
                                    "description": "RabbitMQ Cluster Operator metrics service Cluster IP",
                                    "default": ""
                                },
                                "extraPorts": {
                                    "type": "array",
                                    "description": "Extra ports to expose (normally used with the `sidecar` value)",
                                    "default": [],
                                    "items": {}
                                },
                                "loadBalancerIP": {
                                    "type": "string",
                                    "description": "RabbitMQ Cluster Operator metrics service Load Balancer IP",
                                    "default": ""
                                },
                                "loadBalancerSourceRanges": {
                                    "type": "array",
                                    "description": "RabbitMQ Cluster Operator metrics service Load Balancer sources",
                                    "default": [],
                                    "items": {}
                                },
                                "externalTrafficPolicy": {
                                    "type": "string",
                                    "description": "RabbitMQ Cluster Operator metrics service external traffic policy",
                                    "default": "Cluster"
                                },
                                "annotations": {
                                    "type": "object",
                                    "properties": {
                                        "prometheus": {
                                            "type": "object",
                                            "properties": {
                                                "io/scrape": {
                                                    "type": "string",
                                                    "description": "",
                                                    "default": "true"
                                                },
                                                "io/port": {
                                                    "type": "string",
                                                    "description": "",
                                                    "default": "{{ .Values.clusterOperator.metrics.service.ports.http }}"
                                                }
                                            }
                                        }
                                    }
                                },
                                "sessionAffinity": {
                                    "type": "string",
                                    "description": "Session Affinity for Kubernetes service, can be \"None\" or \"ClientIP\"",
                                    "default": "None"
                                },
                                "sessionAffinityConfig": {
                                    "type": "object",
                                    "description": "Additional settings for the sessionAffinity",
                                    "default": {}
                                }
                            }
                        },
                        "serviceMonitor": {
                            "type": "object",
                            "properties": {
                                "enabled": {
                                    "type": "boolean",
                                    "description": "Specify if a servicemonitor will be deployed for prometheus-operator",
                                    "default": false
                                },
                                "namespace": {
                                    "type": "string",
                                    "description": "Namespace which Prometheus is running in",
                                    "default": ""
                                },
                                "jobLabel": {
                                    "type": "string",
                                    "description": "Specify the jobLabel to use for the prometheus-operator",
                                    "default": "app.kubernetes.io/name"
                                },
                                "honorLabels": {
                                    "type": "boolean",
                                    "description": "Honor metrics labels",
                                    "default": false
                                },
                                "selector": {
                                    "type": "object",
                                    "description": "Prometheus instance selector labels",
                                    "default": {}
                                },
                                "scrapeTimeout": {
                                    "type": "string",
                                    "description": "Timeout after which the scrape is ended",
                                    "default": ""
                                },
                                "interval": {
                                    "type": "string",
                                    "description": "Scrape interval. If not set, the Prometheus default scrape interval is used",
                                    "default": ""
                                },
                                "metricRelabelings": {
                                    "type": "array",
                                    "description": "Specify additional relabeling of metrics",
                                    "default": [],
                                    "items": {}
                                },
                                "relabelings": {
                                    "type": "array",
                                    "description": "Specify general relabeling",
                                    "default": [],
                                    "items": {}
                                },
                                "labels": {
                                    "type": "object",
                                    "description": "Extra labels for the ServiceMonitor",
                                    "default": {}
                                }
                            }
                        }
                    }
                }
            }
        },
        "msgTopologyOperator": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Deploy RabbitMQ Messaging Topology Operator as part of the installation",
                    "default": true
                },
                "image": {
                    "type": "object",
                    "properties": {
                        "registry": {
                            "type": "string",
                            "description": "RabbitMQ Messaging Topology Operator image registry",
                            "default": "docker.io"
                        },
                        "repository": {
                            "type": "string",
                            "description": "RabbitMQ Messaging Topology Operator image repository",
                            "default": "bitnami/rmq-messaging-topology-operator"
                        },
                        "tag": {
                            "type": "string",
                            "description": "RabbitMQ Messaging Topology Operator image tag (immutable tags are recommended)",
                            "default": "1.12.0-debian-11-r20"
                        },
                        "digest": {
                            "type": "string",
                            "description": "RabbitMQ Messaging Topology Operator image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag",
                            "default": ""
                        },
                        "pullPolicy": {
                            "type": "string",
                            "description": "RabbitMQ Messaging Topology Operator image pull policy",
                            "default": "IfNotPresent"
                        },
                        "pullSecrets": {
                            "type": "array",
                            "description": "RabbitMQ Messaging Topology Operator image pull secrets",
                            "default": [],
                            "items": {}
                        }
                    }
                },
                "replicaCount": {
                    "type": "number",
                    "description": "Number of RabbitMQ Messaging Topology Operator replicas to deploy",
                    "default": 1
                },
                "topologySpreadConstraints": {
                    "type": "array",
                    "description": "Topology Spread Constraints for pod assignment",
                    "default": [],
                    "items": {}
                },
                "schedulerName": {
                    "type": "string",
                    "description": "Alternative scheduler",
                    "default": ""
                },
                "terminationGracePeriodSeconds": {
                    "type": "string",
                    "description": "In seconds, time the given to the %%MAIN_CONTAINER_NAME%% pod needs to terminate gracefully",
                    "default": ""
                },
                "hostNetwork": {
                    "type": "string",
                    "description": "Boolean",
                    "default": "false"
                },
                "dnsPolicy": {
                    "type": "string",
                    "description": "Alternative DNS policy",
                    "default": "ClusterFirst"
                },
                "livenessProbe": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable livenessProbe on RabbitMQ Messaging Topology Operator nodes",
                            "default": true
                        },
                        "initialDelaySeconds": {
                            "type": "number",
                            "description": "Initial delay seconds for livenessProbe",
                            "default": 5
                        },
                        "periodSeconds": {
                            "type": "number",
                            "description": "Period seconds for livenessProbe",
                            "default": 30
                        },
                        "timeoutSeconds": {
                            "type": "number",
                            "description": "Timeout seconds for livenessProbe",
                            "default": 5
                        },
                        "failureThreshold": {
                            "type": "number",
                            "description": "Failure threshold for livenessProbe",
                            "default": 5
                        },
                        "successThreshold": {
                            "type": "number",
                            "description": "Success threshold for livenessProbe",
                            "default": 1
                        }
                    }
                },
                "readinessProbe": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable readinessProbe on RabbitMQ Messaging Topology Operator nodes",
                            "default": true
                        },
                        "initialDelaySeconds": {
                            "type": "number",
                            "description": "Initial delay seconds for readinessProbe",
                            "default": 5
                        },
                        "periodSeconds": {
                            "type": "number",
                            "description": "Period seconds for readinessProbe",
                            "default": 30
                        },
                        "timeoutSeconds": {
                            "type": "number",
                            "description": "Timeout seconds for readinessProbe",
                            "default": 5
                        },
                        "failureThreshold": {
                            "type": "number",
                            "description": "Failure threshold for readinessProbe",
                            "default": 5
                        },
                        "successThreshold": {
                            "type": "number",
                            "description": "Success threshold for readinessProbe",
                            "default": 1
                        }
                    }
                },
                "startupProbe": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable startupProbe on RabbitMQ Messaging Topology Operator nodes",
                            "default": false
                        },
                        "initialDelaySeconds": {
                            "type": "number",
                            "description": "Initial delay seconds for startupProbe",
                            "default": 5
                        },
                        "periodSeconds": {
                            "type": "number",
                            "description": "Period seconds for startupProbe",
                            "default": 30
                        },
                        "timeoutSeconds": {
                            "type": "number",
                            "description": "Timeout seconds for startupProbe",
                            "default": 5
                        },
                        "failureThreshold": {
                            "type": "number",
                            "description": "Failure threshold for startupProbe",
                            "default": 5
                        },
                        "successThreshold": {
                            "type": "number",
                            "description": "Success threshold for startupProbe",
                            "default": 1
                        }
                    }
                },
                "customLivenessProbe": {
                    "type": "object",
                    "description": "Custom livenessProbe that overrides the default one",
                    "default": {}
                },
                "customReadinessProbe": {
                    "type": "object",
                    "description": "Custom readinessProbe that overrides the default one",
                    "default": {}
                },
                "customStartupProbe": {
                    "type": "object",
                    "description": "Custom startupProbe that overrides the default one",
                    "default": {}
                },
                "existingWebhookCertSecret": {
                    "type": "string",
                    "description": "name of a secret containing the certificates (use it to avoid certManager creating one)",
                    "default": ""
                },
                "existingWebhookCertCABundle": {
                    "type": "string",
                    "description": "PEM-encoded CA Bundle of the existing secret provided in existingWebhookCertSecret (only if useCertManager=false)",
                    "default": ""
                },
                "resources": {
                    "type": "object",
                    "properties": {
                        "limits": {
                            "type": "object",
                            "description": "The resources limits for the RabbitMQ Messaging Topology Operator containers",
                            "default": {}
                        },
                        "requests": {
                            "type": "object",
                            "description": "The requested resources for the RabbitMQ Messaging Topology Operator containers",
                            "default": {}
                        }
                    }
                },
                "podSecurityContext": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enabled RabbitMQ Messaging Topology Operator pods' Security Context",
                            "default": true
                        },
                        "fsGroup": {
                            "type": "number",
                            "description": "Set RabbitMQ Messaging Topology Operator pod's Security Context fsGroup",
                            "default": 1001
                        }
                    }
                },
                "containerSecurityContext": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enabled RabbitMQ Messaging Topology Operator containers' Security Context",
                            "default": true
                        },
                        "runAsUser": {
                            "type": "number",
                            "description": "Set RabbitMQ Messaging Topology Operator containers' Security Context runAsUser",
                            "default": 1001
                        },
                        "runAsNonRoot": {
                            "type": "boolean",
                            "description": "Force running the container as non root",
                            "default": true
                        },
                        "readOnlyRootFilesystem": {
                            "type": "boolean",
                            "description": "mount / (root) as a readonly filesystem on Messaging Topology Operator",
                            "default": true
                        }
                    }
                },
                "fullnameOverride": {
                    "type": "string",
                    "description": "String to fully override rmqco.msgTopologyOperator.fullname template",
                    "default": ""
                },
                "command": {
                    "type": "array",
                    "description": "Override default container command (useful when using custom images)",
                    "default": [],
                    "items": {}
                },
                "args": {
                    "type": "array",
                    "description": "Override default container args (useful when using custom images)",
                    "default": [],
                    "items": {}
                },
                "hostAliases": {
                    "type": "array",
                    "description": "RabbitMQ Messaging Topology Operator pods host aliases",
                    "default": [],
                    "items": {}
                },
                "podLabels": {
                    "type": "object",
                    "description": "Extra labels for RabbitMQ Messaging Topology Operator pods",
                    "default": {}
                },
                "podAnnotations": {
                    "type": "object",
                    "description": "Annotations for RabbitMQ Messaging Topology Operator pods",
                    "default": {}
                },
                "podAffinityPreset": {
                    "type": "string",
                    "description": "Pod affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`",
                    "default": ""
                },
                "podAntiAffinityPreset": {
                    "type": "string",
                    "description": "Pod anti-affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`",
                    "default": "soft"
                },
                "nodeAffinityPreset": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "Node affinity preset type. Ignored if `affinity` is set. Allowed values: `soft` or `hard`",
                            "default": ""
                        },
                        "key": {
                            "type": "string",
                            "description": "Node label key to match. Ignored if `affinity` is set",
                            "default": ""
                        },
                        "values": {
                            "type": "array",
                            "description": "Node label values to match. Ignored if `affinity` is set",
                            "default": [],
                            "items": {}
                        }
                    }
                },
                "affinity": {
                    "type": "object",
                    "description": "Affinity for RabbitMQ Messaging Topology Operator pods assignment",
                    "default": {}
                },
                "nodeSelector": {
                    "type": "object",
                    "description": "Node labels for RabbitMQ Messaging Topology Operator pods assignment",
                    "default": {}
                },
                "tolerations": {
                    "type": "array",
                    "description": "Tolerations for RabbitMQ Messaging Topology Operator pods assignment",
                    "default": [],
                    "items": {}
                },
                "updateStrategy": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "RabbitMQ Messaging Topology Operator statefulset strategy type",
                            "default": "RollingUpdate"
                        }
                    }
                },
                "priorityClassName": {
                    "type": "string",
                    "description": "RabbitMQ Messaging Topology Operator pods' priorityClassName",
                    "default": ""
                },
                "lifecycleHooks": {
                    "type": "object",
                    "description": "for the RabbitMQ Messaging Topology Operator container(s) to automate configuration before or after startup",
                    "default": {}
                },
                "containerPorts": {
                    "type": "object",
                    "properties": {
                        "metrics": {
                            "type": "number",
                            "description": "RabbitMQ Messaging Topology Operator container port (used for metrics)",
                            "default": 8080
                        }
                    }
                },
                "extraEnvVars": {
                    "type": "array",
                    "description": "Array with extra environment variables to add to RabbitMQ Messaging Topology Operator nodes",
                    "default": [],
                    "items": {}
                },
                "extraEnvVarsCM": {
                    "type": "string",
                    "description": "Name of existing ConfigMap containing extra env vars for RabbitMQ Messaging Topology Operator nodes",
                    "default": ""
                },
                "extraEnvVarsSecret": {
                    "type": "string",
                    "description": "Name of existing Secret containing extra env vars for RabbitMQ Messaging Topology Operator nodes",
                    "default": ""
                },
                "extraVolumes": {
                    "type": "array",
                    "description": "Optionally specify extra list of additional volumes for the RabbitMQ Messaging Topology Operator pod(s)",
                    "default": [],
                    "items": {}
                },
                "extraVolumeMounts": {
                    "type": "array",
                    "description": "Optionally specify extra list of additional volumeMounts for the RabbitMQ Messaging Topology Operator container(s)",
                    "default": [],
                    "items": {}
                },
                "sidecars": {
                    "type": "array",
                    "description": "Add additional sidecar containers to the RabbitMQ Messaging Topology Operator pod(s)",
                    "default": [],
                    "items": {}
                },
                "initContainers": {
                    "type": "array",
                    "description": "Add additional init containers to the RabbitMQ Messaging Topology Operator pod(s)",
                    "default": [],
                    "items": {}
                },
                "service": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "RabbitMQ Messaging Topology Operator webhook service type",
                            "default": "ClusterIP"
                        },
                        "ports": {
                            "type": "object",
                            "properties": {
                                "webhook": {
                                    "type": "number",
                                    "description": "RabbitMQ Messaging Topology Operator webhook service HTTP port",
                                    "default": 443
                                }
                            }
                        },
                        "nodePorts": {
                            "type": "object",
                            "properties": {
                                "http": {
                                    "type": "string",
                                    "description": "Node port for HTTP",
                                    "default": ""
                                }
                            }
                        },
                        "clusterIP": {
                            "type": "string",
                            "description": "RabbitMQ Messaging Topology Operator webhook service Cluster IP",
                            "default": ""
                        },
                        "loadBalancerIP": {
                            "type": "string",
                            "description": "RabbitMQ Messaging Topology Operator webhook service Load Balancer IP",
                            "default": ""
                        },
                        "extraPorts": {
                            "type": "array",
                            "description": "Extra ports to expose (normally used with the `sidecar` value)",
                            "default": [],
                            "items": {}
                        },
                        "loadBalancerSourceRanges": {
                            "type": "array",
                            "description": "RabbitMQ Messaging Topology Operator webhook service Load Balancer sources",
                            "default": [],
                            "items": {}
                        },
                        "externalTrafficPolicy": {
                            "type": "string",
                            "description": "RabbitMQ Messaging Topology Operator webhook service external traffic policy",
                            "default": "Cluster"
                        },
                        "annotations": {
                            "type": "object",
                            "description": "Additional custom annotations for RabbitMQ Messaging Topology Operator webhook service",
                            "default": {}
                        },
                        "sessionAffinity": {
                            "type": "string",
                            "description": "Session Affinity for Kubernetes service, can be \"None\" or \"ClientIP\"",
                            "default": "None"
                        },
                        "sessionAffinityConfig": {
                            "type": "object",
                            "description": "Additional settings for the sessionAffinity",
                            "default": {}
                        }
                    }
                },
                "rbac": {
                    "type": "object",
                    "properties": {
                        "create": {
                            "type": "boolean",
                            "description": "Specifies whether RBAC resources should be created",
                            "default": true
                        }
                    }
                },
                "serviceAccount": {
                    "type": "object",
                    "properties": {
                        "create": {
                            "type": "boolean",
                            "description": "Specifies whether a ServiceAccount should be created",
                            "default": true
                        },
                        "name": {
                            "type": "string",
                            "description": "The name of the ServiceAccount to use.",
                            "default": ""
                        },
                        "annotations": {
                            "type": "object",
                            "description": "Add annotations",
                            "default": {}
                        },
                        "automountServiceAccountToken": {
                            "type": "boolean",
                            "description": "Automount API credentials for a service account.",
                            "default": true
                        }
                    }
                },
                "metrics": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Create a service for accessing the metrics endpoint",
                            "default": false
                        },
                        "service": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string",
                                    "description": "RabbitMQ Cluster Operator metrics service type",
                                    "default": "ClusterIP"
                                },
                                "ports": {
                                    "type": "object",
                                    "properties": {
                                        "http": {
                                            "type": "number",
                                            "description": "RabbitMQ Cluster Operator metrics service HTTP port",
                                            "default": 80
                                        }
                                    }
                                },
                                "nodePorts": {
                                    "type": "object",
                                    "properties": {
                                        "http": {
                                            "type": "string",
                                            "description": "Node port for HTTP",
                                            "default": ""
                                        }
                                    }
                                },
                                "clusterIP": {
                                    "type": "string",
                                    "description": "RabbitMQ Cluster Operator metrics service Cluster IP",
                                    "default": ""
                                },
                                "extraPorts": {
                                    "type": "array",
                                    "description": "Extra ports to expose (normally used with the `sidecar` value)",
                                    "default": [],
                                    "items": {}
                                },
                                "loadBalancerIP": {
                                    "type": "string",
                                    "description": "RabbitMQ Cluster Operator metrics service Load Balancer IP",
                                    "default": ""
                                },
                                "loadBalancerSourceRanges": {
                                    "type": "array",
                                    "description": "RabbitMQ Cluster Operator metrics service Load Balancer sources",
                                    "default": [],
                                    "items": {}
                                },
                                "externalTrafficPolicy": {
                                    "type": "string",
                                    "description": "RabbitMQ Cluster Operator metrics service external traffic policy",
                                    "default": "Cluster"
                                },
                                "annotations": {
                                    "type": "object",
                                    "properties": {
                                        "prometheus": {
                                            "type": "object",
                                            "properties": {
                                                "io/scrape": {
                                                    "type": "string",
                                                    "description": "",
                                                    "default": "true"
                                                },
                                                "io/port": {
                                                    "type": "string",
                                                    "description": "",
                                                    "default": "{{ .Values.msgTopologyOperator.metrics.service.ports.http }}"
                                                }
                                            }
                                        }
                                    }
                                },
                                "sessionAffinity": {
                                    "type": "string",
                                    "description": "Session Affinity for Kubernetes service, can be \"None\" or \"ClientIP\"",
                                    "default": "None"
                                },
                                "sessionAffinityConfig": {
                                    "type": "object",
                                    "description": "Additional settings for the sessionAffinity",
                                    "default": {}
                                }
                            }
                        },
                        "serviceMonitor": {
                            "type": "object",
                            "properties": {
                                "enabled": {
                                    "type": "boolean",
                                    "description": "Specify if a servicemonitor will be deployed for prometheus-operator",
                                    "default": false
                                },
                                "namespace": {
                                    "type": "string",
                                    "description": "Namespace which Prometheus is running in",
                                    "default": ""
                                },
                                "jobLabel": {
                                    "type": "string",
                                    "description": "Specify the jobLabel to use for the prometheus-operator",
                                    "default": "app.kubernetes.io/name"
                                },
                                "selector": {
                                    "type": "object",
                                    "description": "Prometheus instance selector labels",
                                    "default": {}
                                },
                                "honorLabels": {
                                    "type": "boolean",
                                    "description": "Honor metrics labels",
                                    "default": false
                                },
                                "scrapeTimeout": {
                                    "type": "string",
                                    "description": "Timeout after which the scrape is ended",
                                    "default": ""
                                },
                                "interval": {
                                    "type": "string",
                                    "description": "Scrape interval. If not set, the Prometheus default scrape interval is used",
                                    "default": ""
                                },
                                "metricRelabelings": {
                                    "type": "array",
                                    "description": "Specify additional relabeling of metrics",
                                    "default": [],
                                    "items": {}
                                },
                                "relabelings": {
                                    "type": "array",
                                    "description": "Specify general relabeling",
                                    "default": [],
                                    "items": {}
                                },
                                "labels": {
                                    "type": "object",
                                    "description": "Extra labels for the ServiceMonitor",
                                    "default": {}
                                }
                            }
                        }
                    }
                }
            }
        },
        "useCertManager": {
            "type": "boolean",
            "description": "Deploy cert-manager objects (Issuer and Certificate) for webhooks",
            "default": false
        }
    }
}