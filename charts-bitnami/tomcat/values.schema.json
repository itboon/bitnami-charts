{
    "title": "Chart Values",
    "type": "object",
    "properties": {
        "global": {
            "type": "object",
            "properties": {
                "imageRegistry": {
                    "type": "string",
                    "description": "Global Docker image registry",
                    "default": ""
                },
                "imagePullSecrets": {
                    "type": "array",
                    "description": "Global Docker registry secret names as an array",
                    "default": [],
                    "items": {}
                },
                "storageClass": {
                    "type": "string",
                    "description": "Global StorageClass for Persistent Volume(s)",
                    "default": ""
                }
            }
        },
        "kubeVersion": {
            "type": "string",
            "description": "Force target Kubernetes version (using Helm capabilities if not set)",
            "default": ""
        },
        "nameOverride": {
            "type": "string",
            "description": "String to partially override common.names.fullname template (will maintain the release name)",
            "default": ""
        },
        "fullnameOverride": {
            "type": "string",
            "description": "String to fully override common.names.fullname template",
            "default": ""
        },
        "commonLabels": {
            "type": "object",
            "description": "Add labels to all the deployed resources",
            "default": {}
        },
        "commonAnnotations": {
            "type": "object",
            "description": "Add annotations to all the deployed resources",
            "default": {}
        },
        "clusterDomain": {
            "type": "string",
            "description": "Kubernetes Cluster Domain",
            "default": "cluster.local"
        },
        "extraDeploy": {
            "type": "array",
            "description": "Array of extra objects to deploy with the release",
            "default": [],
            "items": {}
        },
        "image": {
            "type": "object",
            "properties": {
                "registry": {
                    "type": "string",
                    "description": "Tomcat image registry",
                    "default": "docker.io"
                },
                "repository": {
                    "type": "string",
                    "description": "Tomcat image repository",
                    "default": "bitnami/tomcat"
                },
                "tag": {
                    "type": "string",
                    "description": "Tomcat image tag (immutable tags are recommended)",
                    "default": "10.1.13-debian-11-r0"
                },
                "digest": {
                    "type": "string",
                    "description": "Tomcat image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag",
                    "default": ""
                },
                "pullPolicy": {
                    "type": "string",
                    "description": "Tomcat image pull policy",
                    "default": "IfNotPresent"
                },
                "pullSecrets": {
                    "type": "array",
                    "description": "Specify docker-registry secret names as an array",
                    "default": [],
                    "items": {}
                },
                "debug": {
                    "type": "boolean",
                    "description": "Specify if debug logs should be enabled",
                    "default": false
                }
            }
        },
        "hostAliases": {
            "type": "array",
            "description": "Deployment pod host aliases",
            "default": [],
            "items": {}
        },
        "tomcatUsername": {
            "type": "string",
            "description": "Tomcat admin user",
            "default": "user"
        },
        "tomcatPassword": {
            "type": "string",
            "description": "Tomcat admin password",
            "default": ""
        },
        "tomcatAllowRemoteManagement": {
            "type": "number",
            "description": "Enable remote access to management interface",
            "default": 0
        },
        "catalinaOpts": {
            "type": "string",
            "description": "Java runtime option used by tomcat JVM",
            "default": ""
        },
        "command": {
            "type": "array",
            "description": "Override default container command (useful when using custom images)",
            "default": [],
            "items": {}
        },
        "args": {
            "type": "array",
            "description": "Override default container args (useful when using custom images)",
            "default": [],
            "items": {}
        },
        "extraEnvVars": {
            "type": "array",
            "description": "Extra environment variables to be set on Tomcat container",
            "default": [],
            "items": {}
        },
        "extraEnvVarsCM": {
            "type": "string",
            "description": "Name of existing ConfigMap containing extra environment variables",
            "default": ""
        },
        "extraEnvVarsSecret": {
            "type": "string",
            "description": "Name of existing Secret containing extra environment variables",
            "default": ""
        },
        "replicaCount": {
            "type": "number",
            "description": "Specify number of Tomcat replicas",
            "default": 1
        },
        "deployment": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string",
                    "description": "Use Deployment or StatefulSet",
                    "default": "deployment"
                }
            }
        },
        "updateStrategy": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string",
                    "description": "StrategyType",
                    "default": "RollingUpdate"
                }
            }
        },
        "containerPorts": {
            "type": "object",
            "properties": {
                "http": {
                    "type": "number",
                    "description": "HTTP port to expose at container level",
                    "default": 8080
                }
            }
        },
        "containerExtraPorts": {
            "type": "array",
            "description": "Extra ports to expose at container level",
            "default": [],
            "items": {}
        },
        "podSecurityContext": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable Tomcat pods' Security Context",
                    "default": true
                },
                "fsGroup": {
                    "type": "number",
                    "description": "Set Tomcat pod's Security Context fsGroup",
                    "default": 1001
                }
            }
        },
        "containerSecurityContext": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable Tomcat containers' SecurityContext",
                    "default": true
                },
                "runAsUser": {
                    "type": "number",
                    "description": "User ID for the Tomcat container",
                    "default": 1001
                },
                "runAsNonRoot": {
                    "type": "boolean",
                    "description": "Force user to be root in Tomcat container",
                    "default": true
                }
            }
        },
        "resources": {
            "type": "object",
            "properties": {
                "limits": {
                    "type": "object",
                    "description": "The resources limits for the Tomcat container",
                    "default": {}
                },
                "requests": {
                    "type": "object",
                    "properties": {
                        "cpu": {
                            "type": "string",
                            "description": "",
                            "default": "300m"
                        },
                        "memory": {
                            "type": "string",
                            "description": "",
                            "default": "512Mi"
                        }
                    }
                }
            }
        },
        "livenessProbe": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable livenessProbe",
                    "default": true
                },
                "initialDelaySeconds": {
                    "type": "number",
                    "description": "Initial delay seconds for livenessProbe",
                    "default": 120
                },
                "periodSeconds": {
                    "type": "number",
                    "description": "Period seconds for livenessProbe",
                    "default": 10
                },
                "timeoutSeconds": {
                    "type": "number",
                    "description": "Timeout seconds for livenessProbe",
                    "default": 5
                },
                "failureThreshold": {
                    "type": "number",
                    "description": "Failure threshold for livenessProbe",
                    "default": 6
                },
                "successThreshold": {
                    "type": "number",
                    "description": "Success threshold for livenessProbe",
                    "default": 1
                }
            }
        },
        "readinessProbe": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable readinessProbe",
                    "default": true
                },
                "initialDelaySeconds": {
                    "type": "number",
                    "description": "Initial delay seconds for readinessProbe",
                    "default": 30
                },
                "periodSeconds": {
                    "type": "number",
                    "description": "Period seconds for readinessProbe",
                    "default": 5
                },
                "timeoutSeconds": {
                    "type": "number",
                    "description": "Timeout seconds for readinessProbe",
                    "default": 3
                },
                "failureThreshold": {
                    "type": "number",
                    "description": "Failure threshold for readinessProbe",
                    "default": 3
                },
                "successThreshold": {
                    "type": "number",
                    "description": "Success threshold for readinessProbe",
                    "default": 1
                }
            }
        },
        "startupProbe": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable startupProbe",
                    "default": false
                },
                "initialDelaySeconds": {
                    "type": "number",
                    "description": "Initial delay seconds for startupProbe",
                    "default": 30
                },
                "periodSeconds": {
                    "type": "number",
                    "description": "Period seconds for startupProbe",
                    "default": 5
                },
                "timeoutSeconds": {
                    "type": "number",
                    "description": "Timeout seconds for startupProbe",
                    "default": 3
                },
                "failureThreshold": {
                    "type": "number",
                    "description": "Failure threshold for startupProbe",
                    "default": 3
                },
                "successThreshold": {
                    "type": "number",
                    "description": "Success threshold for startupProbe",
                    "default": 1
                }
            }
        },
        "customLivenessProbe": {
            "type": "object",
            "description": "Override default liveness probe",
            "default": {}
        },
        "customReadinessProbe": {
            "type": "object",
            "description": "Override default readiness probe",
            "default": {}
        },
        "customStartupProbe": {
            "type": "object",
            "description": "Override default startup probe",
            "default": {}
        },
        "podLabels": {
            "type": "object",
            "description": "Extra labels for Tomcat pods",
            "default": {}
        },
        "podAnnotations": {
            "type": "object",
            "description": "Annotations for Tomcat pods",
            "default": {}
        },
        "podAffinityPreset": {
            "type": "string",
            "description": "Pod affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`",
            "default": ""
        },
        "podAntiAffinityPreset": {
            "type": "string",
            "description": "Pod anti-affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`",
            "default": "soft"
        },
        "nodeAffinityPreset": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string",
                    "description": "Node affinity preset type. Ignored if `affinity` is set. Allowed values: `soft` or `hard`",
                    "default": ""
                },
                "key": {
                    "type": "string",
                    "description": "Node label key to match. Ignored if `affinity` is set.",
                    "default": ""
                },
                "values": {
                    "type": "array",
                    "description": "Node label values to match. Ignored if `affinity` is set.",
                    "default": [],
                    "items": {}
                }
            }
        },
        "affinity": {
            "type": "object",
            "description": "Affinity for pod assignment. Evaluated as a template.",
            "default": {}
        },
        "nodeSelector": {
            "type": "object",
            "description": "Node labels for pod assignment. Evaluated as a template.",
            "default": {}
        },
        "schedulerName": {
            "type": "string",
            "description": "Alternative scheduler",
            "default": ""
        },
        "podManagementPolicy": {
            "type": "string",
            "description": "podManagementPolicy to manage scaling operation of pods (only in StatefulSet mode)",
            "default": ""
        },
        "tolerations": {
            "type": "array",
            "description": "Tolerations for pod assignment. Evaluated as a template.",
            "default": [],
            "items": {}
        },
        "topologySpreadConstraints": {
            "type": "array",
            "description": "Topology Spread Constraints for pod assignment spread across your cluster among failure-domains. Evaluated as a template",
            "default": [],
            "items": {}
        },
        "extraPodSpec": {
            "type": "object",
            "description": "Optionally specify extra PodSpec",
            "default": {}
        },
        "extraVolumes": {
            "type": "array",
            "description": "Optionally specify extra list of additional volumes for Tomcat pods in Deployment",
            "default": [],
            "items": {}
        },
        "extraVolumeClaimTemplates": {
            "type": "array",
            "description": "Optionally specify extra list of additional volume claim templates for Tomcat pods in StatefulSet",
            "default": [],
            "items": {}
        },
        "extraVolumeMounts": {
            "type": "array",
            "description": "Optionally specify extra list of additional volumeMounts for Tomcat container(s)",
            "default": [],
            "items": {}
        },
        "initContainers": {
            "type": "array",
            "description": "Add init containers to the Tomcat pods.",
            "default": [],
            "items": {}
        },
        "sidecars": {
            "type": "array",
            "description": "Add sidecars to the Tomcat pods.",
            "default": [],
            "items": {}
        },
        "persistence": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable persistence",
                    "default": true
                },
                "storageClass": {
                    "type": "string",
                    "description": "PVC Storage Class for Tomcat volume",
                    "default": ""
                },
                "annotations": {
                    "type": "object",
                    "description": "Persistent Volume Claim annotations",
                    "default": {}
                },
                "accessModes": {
                    "type": "array",
                    "description": "PVC Access Modes for Tomcat volume",
                    "default": [
                        "ReadWriteOnce"
                    ],
                    "items": {
                        "type": "string"
                    }
                },
                "size": {
                    "type": "string",
                    "description": "PVC Storage Request for Tomcat volume",
                    "default": "8Gi"
                },
                "existingClaim": {
                    "type": "string",
                    "description": "An Existing PVC name for Tomcat volume",
                    "default": ""
                },
                "selectorLabels": {
                    "type": "object",
                    "description": "Selector labels to use in volume claim template in statefulset",
                    "default": {}
                }
            }
        },
        "networkPolicy": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable creation of NetworkPolicy resources. Only Ingress traffic is filtered for now.",
                    "default": false
                },
                "allowExternal": {
                    "type": "boolean",
                    "description": "Don't require client label for connections",
                    "default": true
                },
                "explicitNamespacesSelector": {
                    "type": "object",
                    "description": "A Kubernetes LabelSelector to explicitly select namespaces from which traffic could be allowed",
                    "default": {}
                }
            }
        },
        "service": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string",
                    "description": "Kubernetes Service type",
                    "default": "LoadBalancer"
                },
                "ports": {
                    "type": "object",
                    "properties": {
                        "http": {
                            "type": "number",
                            "description": "Service HTTP port",
                            "default": 80
                        }
                    }
                },
                "nodePorts": {
                    "type": "object",
                    "properties": {
                        "http": {
                            "type": "string",
                            "description": "Kubernetes http node port",
                            "default": ""
                        }
                    }
                },
                "extraPorts": {
                    "type": "array",
                    "description": "Extra ports to expose (normally used with the `sidecar` value)",
                    "default": [],
                    "items": {}
                },
                "loadBalancerIP": {
                    "type": "string",
                    "description": "Port Use serviceLoadBalancerIP to request a specific static IP, otherwise leave blank",
                    "default": ""
                },
                "clusterIP": {
                    "type": "string",
                    "description": "Service Cluster IP",
                    "default": ""
                },
                "loadBalancerSourceRanges": {
                    "type": "array",
                    "description": "Service Load Balancer sources",
                    "default": [],
                    "items": {}
                },
                "externalTrafficPolicy": {
                    "type": "string",
                    "description": "Enable client source IP preservation",
                    "default": "Cluster"
                },
                "annotations": {
                    "type": "object",
                    "description": "Annotations for Tomcat service",
                    "default": {}
                },
                "sessionAffinity": {
                    "type": "string",
                    "description": "Session Affinity for Kubernetes service, can be \"None\" or \"ClientIP\"",
                    "default": "None"
                },
                "sessionAffinityConfig": {
                    "type": "object",
                    "description": "Additional settings for the sessionAffinity",
                    "default": {}
                },
                "headless": {
                    "type": "object",
                    "properties": {
                        "annotations": {
                            "type": "object",
                            "description": "Annotations for the headless service.",
                            "default": {}
                        }
                    }
                }
            }
        },
        "ingress": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable ingress controller resource",
                    "default": false
                },
                "hostname": {
                    "type": "string",
                    "description": "Default host for the ingress resource",
                    "default": "tomcat.local"
                },
                "annotations": {
                    "type": "object",
                    "description": "Additional annotations for the Ingress resource. To enable certificate autogeneration, place here your cert-manager annotations.",
                    "default": {}
                },
                "tls": {
                    "type": "boolean",
                    "description": "Enable TLS configuration for the hostname defined at `ingress.hostname` parameter",
                    "default": false
                },
                "extraHosts": {
                    "type": "array",
                    "description": "The list of additional hostnames to be covered with this ingress record.",
                    "default": [],
                    "items": {}
                },
                "extraTls": {
                    "type": "array",
                    "description": "The tls configuration for additional hostnames to be covered with this ingress record.",
                    "default": [],
                    "items": {}
                },
                "extraPaths": {
                    "type": "array",
                    "description": "Any additional arbitrary paths that may need to be added to the ingress under the main host.",
                    "default": [],
                    "items": {}
                },
                "selfSigned": {
                    "type": "boolean",
                    "description": "Create a TLS secret for this ingress record using self-signed certificates generated by Helm",
                    "default": false
                },
                "ingressClassName": {
                    "type": "string",
                    "description": "IngressClass that will be be used to implement the Ingress (Kubernetes 1.18+)",
                    "default": ""
                },
                "secrets": {
                    "type": "array",
                    "description": "If you're providing your own certificates, please use this to add the certificates as secrets",
                    "default": [],
                    "items": {}
                },
                "extraRules": {
                    "type": "array",
                    "description": "Additional rules to be covered with this ingress record",
                    "default": [],
                    "items": {}
                },
                "apiVersion": {
                    "type": "string",
                    "description": "Force Ingress API version (automatically detected if not set)",
                    "default": ""
                },
                "path": {
                    "type": "string",
                    "description": "Ingress path",
                    "default": "/"
                },
                "pathType": {
                    "type": "string",
                    "description": "Ingress path type",
                    "default": "ImplementationSpecific"
                }
            }
        },
        "volumePermissions": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable init container that changes volume permissions in the data directory",
                    "default": false
                },
                "image": {
                    "type": "object",
                    "properties": {
                        "registry": {
                            "type": "string",
                            "description": "Init container volume-permissions image registry",
                            "default": "docker.io"
                        },
                        "repository": {
                            "type": "string",
                            "description": "Init container volume-permissions image repository",
                            "default": "bitnami/os-shell"
                        },
                        "tag": {
                            "type": "string",
                            "description": "Init container volume-permissions image tag",
                            "default": "11-debian-11-r48"
                        },
                        "digest": {
                            "type": "string",
                            "description": "Init container volume-permissions image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag",
                            "default": ""
                        },
                        "pullPolicy": {
                            "type": "string",
                            "description": "Init container volume-permissions image pull policy",
                            "default": "IfNotPresent"
                        },
                        "pullSecrets": {
                            "type": "array",
                            "description": "Specify docker-registry secret names as an array",
                            "default": [],
                            "items": {}
                        }
                    }
                },
                "resources": {
                    "type": "object",
                    "properties": {
                        "limits": {
                            "type": "object",
                            "description": "Init container volume-permissions resource  limits",
                            "default": {}
                        },
                        "requests": {
                            "type": "object",
                            "description": "Init container volume-permissions resource  requests",
                            "default": {}
                        }
                    }
                }
            }
        },
        "metrics": {
            "type": "object",
            "properties": {
                "jmx": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Whether or not to expose JMX metrics to Prometheus",
                            "default": false
                        },
                        "catalinaOpts": {
                            "type": "string",
                            "description": "custom option used to enabled JMX on tomcat jvm evaluated as template",
                            "default": "-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.port=5555 -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.local.only=true"
                        },
                        "image": {
                            "type": "object",
                            "properties": {
                                "registry": {
                                    "type": "string",
                                    "description": "JMX exporter image registry",
                                    "default": "docker.io"
                                },
                                "repository": {
                                    "type": "string",
                                    "description": "JMX exporter image repository",
                                    "default": "bitnami/jmx-exporter"
                                },
                                "tag": {
                                    "type": "string",
                                    "description": "JMX exporter image tag (immutable tags are recommended)",
                                    "default": "0.19.0-debian-11-r54"
                                },
                                "digest": {
                                    "type": "string",
                                    "description": "JMX exporter image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag",
                                    "default": ""
                                },
                                "pullPolicy": {
                                    "type": "string",
                                    "description": "JMX exporter image pull policy",
                                    "default": "IfNotPresent"
                                },
                                "pullSecrets": {
                                    "type": "array",
                                    "description": "Specify docker-registry secret names as an array",
                                    "default": [],
                                    "items": {}
                                }
                            }
                        },
                        "config": {
                            "type": "string",
                            "description": "Configuration file for JMX exporter",
                            "default": "jmxUrl: service:jmx:rmi:///jndi/rmi://127.0.0.1:5555/jmxrmi\nstartDelaySecs: 120\nssl: false\nlowercaseOutputName: true\nlowercaseOutputLabelNames: true\nattrNameSnakeCase: true\n"
                        },
                        "containerSecurityContext": {
                            "type": "object",
                            "properties": {
                                "enabled": {
                                    "type": "boolean",
                                    "description": "Enable Prometheus JMX exporter containers' Security Context",
                                    "default": true
                                },
                                "runAsUser": {
                                    "type": "number",
                                    "description": "Set Prometheus JMX exporter containers' Security Context runAsUser",
                                    "default": 1001
                                },
                                "runAsNonRoot": {
                                    "type": "boolean",
                                    "description": "Set Prometheus JMX exporter containers' Security Context runAsNonRoot",
                                    "default": true
                                }
                            }
                        },
                        "resources": {
                            "type": "object",
                            "properties": {
                                "limits": {
                                    "type": "object",
                                    "description": "JMX Exporter container resource limits",
                                    "default": {}
                                },
                                "requests": {
                                    "type": "object",
                                    "description": "JMX Exporter container resource requests",
                                    "default": {}
                                }
                            }
                        },
                        "ports": {
                            "type": "object",
                            "properties": {
                                "metrics": {
                                    "type": "number",
                                    "description": "JMX Exporter container metrics ports",
                                    "default": 5556
                                }
                            }
                        },
                        "existingConfigmap": {
                            "type": "string",
                            "description": "Name of existing ConfigMap with JMX exporter configuration",
                            "default": ""
                        }
                    }
                },
                "podMonitor": {
                    "type": "object",
                    "properties": {
                        "podTargetLabels": {
                            "type": "array",
                            "description": "Used to keep given pod's labels in target",
                            "default": [],
                            "items": {}
                        },
                        "enabled": {
                            "type": "boolean",
                            "description": "Create PodMonitor Resource for scraping metrics using PrometheusOperator",
                            "default": false
                        },
                        "namespace": {
                            "type": "string",
                            "description": "Optional namespace in which Prometheus is running",
                            "default": ""
                        },
                        "interval": {
                            "type": "string",
                            "description": "Specify the interval at which metrics should be scraped",
                            "default": "30s"
                        },
                        "scrapeTimeout": {
                            "type": "string",
                            "description": "Specify the timeout after which the scrape is ended",
                            "default": "30s"
                        },
                        "scheme": {
                            "type": "string",
                            "description": "Scheme to use for scraping",
                            "default": "http"
                        },
                        "relabelings": {
                            "type": "array",
                            "description": "Prometheus relabeling rules",
                            "default": [],
                            "items": {}
                        }
                    }
                },
                "prometheusRule": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Set this to true to create prometheusRules for Prometheus operator",
                            "default": false
                        },
                        "additionalLabels": {
                            "type": "object",
                            "description": "Additional labels that can be used so prometheusRules will be discovered by Prometheus",
                            "default": {}
                        },
                        "namespace": {
                            "type": "string",
                            "description": "namespace where prometheusRules resource should be created",
                            "default": ""
                        },
                        "rules": {
                            "type": "array",
                            "description": "Create specified [Rules](https://prometheus.io/docs/prometheus/latest/configuration/alerting_rules/)",
                            "default": [],
                            "items": {}
                        }
                    }
                }
            }
        }
    }
}