{
    "title": "Chart Values",
    "type": "object",
    "properties": {
        "global": {
            "type": "object",
            "properties": {
                "imageRegistry": {
                    "type": "string",
                    "description": "Global Docker image registry",
                    "default": ""
                },
                "imagePullSecrets": {
                    "type": "array",
                    "description": "Global Docker registry secret names as an array",
                    "default": [],
                    "items": {}
                },
                "storageClass": {
                    "type": "string",
                    "description": "Global StorageClass for Persistent Volume(s)",
                    "default": ""
                }
            }
        },
        "kubeVersion": {
            "type": "string",
            "description": "Override Kubernetes version",
            "default": ""
        },
        "nameOverride": {
            "type": "string",
            "description": "String to partially override common.names.name",
            "default": ""
        },
        "fullnameOverride": {
            "type": "string",
            "description": "String to fully override common.names.fullname",
            "default": ""
        },
        "namespaceOverride": {
            "type": "string",
            "description": "String to fully override common.names.namespace",
            "default": ""
        },
        "commonLabels": {
            "type": "object",
            "description": "Labels to add to all deployed objects",
            "default": {}
        },
        "commonAnnotations": {
            "type": "object",
            "description": "Annotations to add to all deployed objects",
            "default": {}
        },
        "clusterDomain": {
            "type": "string",
            "description": "Kubernetes cluster domain name",
            "default": "cluster.local"
        },
        "extraDeploy": {
            "type": "array",
            "description": "Array of extra objects to deploy with the release",
            "default": [],
            "items": {}
        },
        "diagnosticMode": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable diagnostic mode (all probes will be disabled and the command will be overridden)",
                    "default": false
                },
                "command": {
                    "type": "array",
                    "description": "Command to override all containers in the deployment",
                    "default": [
                        "sleep"
                    ],
                    "items": {
                        "type": "string"
                    }
                },
                "args": {
                    "type": "array",
                    "description": "Args to override all containers in the deployment",
                    "default": [
                        "infinity"
                    ],
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "server": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable Vault Server",
                    "default": true
                },
                "image": {
                    "type": "object",
                    "properties": {
                        "registry": {
                            "type": "string",
                            "description": "Vault Server image registry",
                            "default": "docker.io"
                        },
                        "repository": {
                            "type": "string",
                            "description": "Vault Server image repository",
                            "default": "bitnami/vault"
                        },
                        "tag": {
                            "type": "string",
                            "description": "Vault Server image tag (immutable tags are recommended)",
                            "default": "1.14.2-debian-11-r0"
                        },
                        "digest": {
                            "type": "string",
                            "description": "Vault Server image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag image tag (immutable tags are recommended)",
                            "default": ""
                        },
                        "pullPolicy": {
                            "type": "string",
                            "description": "Vault Server image pull policy",
                            "default": "IfNotPresent"
                        },
                        "pullSecrets": {
                            "type": "array",
                            "description": "Vault Server image pull secrets",
                            "default": [],
                            "items": {}
                        },
                        "debug": {
                            "type": "boolean",
                            "description": "Enable Vault Server image debug mode",
                            "default": false
                        }
                    }
                },
                "replicaCount": {
                    "type": "number",
                    "description": "Number of Vault Server replicas to deploy",
                    "default": 1
                },
                "podManagementPolicy": {
                    "type": "string",
                    "description": "Pod management policy",
                    "default": "Parallel"
                },
                "containerPorts": {
                    "type": "object",
                    "properties": {
                        "http": {
                            "type": "number",
                            "description": "Vault Server http container port",
                            "default": 8200
                        },
                        "internal": {
                            "type": "number",
                            "description": "Vault Server internal (HTTPS) container port",
                            "default": 8201
                        }
                    }
                },
                "livenessProbe": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable livenessProbe on Vault Server containers",
                            "default": false
                        },
                        "initialDelaySeconds": {
                            "type": "number",
                            "description": "Initial delay seconds for livenessProbe",
                            "default": 5
                        },
                        "periodSeconds": {
                            "type": "number",
                            "description": "Period seconds for livenessProbe",
                            "default": 10
                        },
                        "timeoutSeconds": {
                            "type": "number",
                            "description": "Timeout seconds for livenessProbe",
                            "default": 5
                        },
                        "failureThreshold": {
                            "type": "number",
                            "description": "Failure threshold for livenessProbe",
                            "default": 5
                        },
                        "successThreshold": {
                            "type": "number",
                            "description": "Success threshold for livenessProbe",
                            "default": 1
                        }
                    }
                },
                "readinessProbe": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable readinessProbe on Vault Server containers",
                            "default": true
                        },
                        "initialDelaySeconds": {
                            "type": "number",
                            "description": "Initial delay seconds for readinessProbe",
                            "default": 5
                        },
                        "periodSeconds": {
                            "type": "number",
                            "description": "Period seconds for readinessProbe",
                            "default": 10
                        },
                        "timeoutSeconds": {
                            "type": "number",
                            "description": "Timeout seconds for readinessProbe",
                            "default": 5
                        },
                        "failureThreshold": {
                            "type": "number",
                            "description": "Failure threshold for readinessProbe",
                            "default": 5
                        },
                        "successThreshold": {
                            "type": "number",
                            "description": "Success threshold for readinessProbe",
                            "default": 1
                        }
                    }
                },
                "startupProbe": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable startupProbe on Vault Server containers",
                            "default": false
                        },
                        "initialDelaySeconds": {
                            "type": "number",
                            "description": "Initial delay seconds for startupProbe",
                            "default": 5
                        },
                        "periodSeconds": {
                            "type": "number",
                            "description": "Period seconds for startupProbe",
                            "default": 10
                        },
                        "timeoutSeconds": {
                            "type": "number",
                            "description": "Timeout seconds for startupProbe",
                            "default": 5
                        },
                        "failureThreshold": {
                            "type": "number",
                            "description": "Failure threshold for startupProbe",
                            "default": 5
                        },
                        "successThreshold": {
                            "type": "number",
                            "description": "Success threshold for startupProbe",
                            "default": 1
                        }
                    }
                },
                "customLivenessProbe": {
                    "type": "object",
                    "description": "Custom livenessProbe that overrides the default one",
                    "default": {}
                },
                "customReadinessProbe": {
                    "type": "object",
                    "description": "Custom readinessProbe that overrides the default one",
                    "default": {}
                },
                "customStartupProbe": {
                    "type": "object",
                    "description": "Custom startupProbe that overrides the default one",
                    "default": {}
                },
                "resources": {
                    "type": "object",
                    "properties": {
                        "limits": {
                            "type": "object",
                            "description": "The resources limits for the Vault Server containers",
                            "default": {}
                        },
                        "requests": {
                            "type": "object",
                            "description": "The requested resources for the Vault Server containers",
                            "default": {}
                        }
                    }
                },
                "podSecurityContext": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enabled Vault Server pods' Security Context",
                            "default": true
                        },
                        "fsGroup": {
                            "type": "number",
                            "description": "Set Vault Server pod's Security Context fsGroup",
                            "default": 1001
                        },
                        "seccompProfile": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string",
                                    "description": "Set Vault Server container's Security Context seccomp profile",
                                    "default": "RuntimeDefault"
                                }
                            }
                        }
                    }
                },
                "containerSecurityContext": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enabled Vault Server containers' Security Context",
                            "default": true
                        },
                        "runAsUser": {
                            "type": "number",
                            "description": "Set Vault Server containers' Security Context runAsUser",
                            "default": 1001
                        },
                        "runAsNonRoot": {
                            "type": "boolean",
                            "description": "Set Vault Server containers' Security Context runAsNonRoot",
                            "default": true
                        },
                        "readOnlyRootFilesystem": {
                            "type": "boolean",
                            "description": "Set Vault Server containers' Security Context runAsNonRoot",
                            "default": true
                        },
                        "allowPrivilegeEscalation": {
                            "type": "boolean",
                            "description": "Set Vault Server container's privilege escalation",
                            "default": false
                        },
                        "capabilities": {
                            "type": "object",
                            "properties": {
                                "drop": {
                                    "type": "array",
                                    "description": "Set Vault Server container's Security Context runAsNonRoot",
                                    "default": [
                                        "ALL"
                                    ],
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "command": {
                    "type": "array",
                    "description": "Override default container command (useful when using custom images)",
                    "default": [],
                    "items": {}
                },
                "args": {
                    "type": "array",
                    "description": "Override default container args (useful when using custom images)",
                    "default": [],
                    "items": {}
                },
                "hostAliases": {
                    "type": "array",
                    "description": "Vault Server pods host aliases",
                    "default": [],
                    "items": {}
                },
                "config": {
                    "type": "string",
                    "description": "Vault server configuration (evaluated as a template)",
                    "default": "disable_mlock = true\nui = true\nlistener \"tcp\" {\n  tls_disable = 1\n  address = \"[::]:{{ .Values.server.containerPorts.http }}\"\n  cluster_address = \"[::]:{{ .Values.server.containerPorts.internal }}\"\n  {{- if .Values.server.metrics.enabled }}\n  # Enable unauthenticated metrics access (necessary for Prometheus Operator)\n  telemetry {\n    unauthenticated_metrics_access = \"true\"\n  }\n  {{- end }}\n}\nstorage \"raft\" {\n  path = \"{{ .Values.server.persistence.mountPath }}\"\n}\n\nservice_registration \"kubernetes\" {}\n"
                },
                "existingConfigMap": {
                    "type": "string",
                    "description": "name of a ConfigMap with existing configuration for the server",
                    "default": ""
                },
                "podLabels": {
                    "type": "object",
                    "description": "Extra labels for Vault Server pods",
                    "default": {}
                },
                "podAnnotations": {
                    "type": "object",
                    "description": "Annotations for Vault Server pods",
                    "default": {}
                },
                "podAffinityPreset": {
                    "type": "string",
                    "description": "Pod affinity preset. Ignored if `server.affinity` is set. Allowed values: `soft` or `hard`",
                    "default": ""
                },
                "podAntiAffinityPreset": {
                    "type": "string",
                    "description": "Pod anti-affinity preset. Ignored if `server.affinity` is set. Allowed values: `soft` or `hard`",
                    "default": "soft"
                },
                "pdb": {
                    "type": "object",
                    "properties": {
                        "create": {
                            "type": "boolean",
                            "description": "Enable/disable a Pod Disruption Budget creation",
                            "default": false
                        },
                        "minAvailable": {
                            "type": "number",
                            "description": "Minimum number/percentage of pods that should remain scheduled",
                            "default": 1
                        },
                        "maxUnavailable": {
                            "type": "string",
                            "description": "Maximum number/percentage of pods that may be made unavailable",
                            "default": ""
                        }
                    }
                },
                "nodeAffinityPreset": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "Node affinity preset type. Ignored if `server.affinity` is set. Allowed values: `soft` or `hard`",
                            "default": ""
                        },
                        "key": {
                            "type": "string",
                            "description": "Node label key to match. Ignored if `server.affinity` is set",
                            "default": ""
                        },
                        "values": {
                            "type": "array",
                            "description": "Node label values to match. Ignored if `server.affinity` is set",
                            "default": [],
                            "items": {}
                        }
                    }
                },
                "affinity": {
                    "type": "object",
                    "description": "Affinity for Vault Server pods assignment",
                    "default": {}
                },
                "nodeSelector": {
                    "type": "object",
                    "description": "Node labels for Vault Server pods assignment",
                    "default": {}
                },
                "tolerations": {
                    "type": "array",
                    "description": "Tolerations for Vault Server pods assignment",
                    "default": [],
                    "items": {}
                },
                "updateStrategy": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "Vault Server statefulset strategy type",
                            "default": "RollingUpdate"
                        }
                    }
                },
                "priorityClassName": {
                    "type": "string",
                    "description": "Vault Server pods' priorityClassName",
                    "default": ""
                },
                "topologySpreadConstraints": {
                    "type": "array",
                    "description": "Topology Spread Constraints for pod assignment spread across your cluster among failure-domains. Evaluated as a template",
                    "default": [],
                    "items": {}
                },
                "schedulerName": {
                    "type": "string",
                    "description": "Name of the k8s scheduler (other than default) for Vault Server pods",
                    "default": ""
                },
                "terminationGracePeriodSeconds": {
                    "type": "string",
                    "description": "Seconds Redmine pod needs to terminate gracefully",
                    "default": ""
                },
                "lifecycleHooks": {
                    "type": "object",
                    "description": "for the Vault Server container(s) to automate configuration before or after startup",
                    "default": {}
                },
                "extraEnvVars": {
                    "type": "array",
                    "description": "Array with extra environment variables to add to Vault Server nodes",
                    "default": [],
                    "items": {}
                },
                "extraEnvVarsCM": {
                    "type": "string",
                    "description": "Name of existing ConfigMap containing extra env vars for Vault Server nodes",
                    "default": ""
                },
                "extraEnvVarsSecret": {
                    "type": "string",
                    "description": "Name of existing Secret containing extra env vars for Vault Server nodes",
                    "default": ""
                },
                "extraVolumes": {
                    "type": "array",
                    "description": "Optionally specify extra list of additional volumes for the Vault Server pod(s)",
                    "default": [],
                    "items": {}
                },
                "extraVolumeMounts": {
                    "type": "array",
                    "description": "Optionally specify extra list of additional volumeMounts for the Vault Server container(s)",
                    "default": [],
                    "items": {}
                },
                "sidecars": {
                    "type": "array",
                    "description": "Add additional sidecar containers to the Vault Server pod(s)",
                    "default": [],
                    "items": {}
                },
                "initContainers": {
                    "type": "array",
                    "description": "Add additional init containers to the Vault Server pod(s)",
                    "default": [],
                    "items": {}
                },
                "service": {
                    "type": "object",
                    "properties": {
                        "general": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string",
                                    "description": "Vault Server service type",
                                    "default": "ClusterIP"
                                },
                                "ports": {
                                    "type": "object",
                                    "properties": {
                                        "http": {
                                            "type": "number",
                                            "description": "Vault Server service HTTP port",
                                            "default": 8200
                                        },
                                        "internal": {
                                            "type": "number",
                                            "description": "Vault Server internal port",
                                            "default": 8201
                                        }
                                    }
                                },
                                "nodePorts": {
                                    "type": "object",
                                    "properties": {
                                        "http": {
                                            "type": "string",
                                            "description": "Node port for HTTP",
                                            "default": ""
                                        },
                                        "internal": {
                                            "type": "string",
                                            "description": "Node port for HTTP",
                                            "default": ""
                                        }
                                    }
                                },
                                "clusterIP": {
                                    "type": "string",
                                    "description": "Vault Server service Cluster IP",
                                    "default": ""
                                },
                                "loadBalancerIP": {
                                    "type": "string",
                                    "description": "Vault Server service Load Balancer IP",
                                    "default": ""
                                },
                                "loadBalancerSourceRanges": {
                                    "type": "array",
                                    "description": "Vault Server service Load Balancer sources",
                                    "default": [],
                                    "items": {}
                                },
                                "externalTrafficPolicy": {
                                    "type": "string",
                                    "description": "Vault Server service external traffic policy",
                                    "default": "Cluster"
                                },
                                "annotations": {
                                    "type": "object",
                                    "description": "Additional custom annotations for Vault Server service",
                                    "default": {}
                                },
                                "extraPorts": {
                                    "type": "array",
                                    "description": "Extra ports to expose in Vault Server service (normally used with the `sidecars` value)",
                                    "default": [],
                                    "items": {}
                                },
                                "sessionAffinity": {
                                    "type": "string",
                                    "description": "Control where web requests go, to the same pod or round-robin",
                                    "default": "None"
                                },
                                "sessionAffinityConfig": {
                                    "type": "object",
                                    "description": "Additional settings for the sessionAffinity",
                                    "default": {}
                                }
                            }
                        },
                        "active": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string",
                                    "description": "Vault Server service type",
                                    "default": "ClusterIP"
                                },
                                "ports": {
                                    "type": "object",
                                    "properties": {
                                        "http": {
                                            "type": "number",
                                            "description": "Vault Server service HTTP port",
                                            "default": 8200
                                        },
                                        "internal": {
                                            "type": "number",
                                            "description": "Vault Server internal port",
                                            "default": 8201
                                        }
                                    }
                                },
                                "nodePorts": {
                                    "type": "object",
                                    "properties": {
                                        "http": {
                                            "type": "string",
                                            "description": "Node port for HTTP",
                                            "default": ""
                                        },
                                        "internal": {
                                            "type": "string",
                                            "description": "Node port for HTTP",
                                            "default": ""
                                        }
                                    }
                                },
                                "clusterIP": {
                                    "type": "string",
                                    "description": "Vault Server service Cluster IP",
                                    "default": ""
                                },
                                "loadBalancerIP": {
                                    "type": "string",
                                    "description": "Vault Server service Load Balancer IP",
                                    "default": ""
                                },
                                "loadBalancerSourceRanges": {
                                    "type": "array",
                                    "description": "Vault Server service Load Balancer sources",
                                    "default": [],
                                    "items": {}
                                },
                                "externalTrafficPolicy": {
                                    "type": "string",
                                    "description": "Vault Server service external traffic policy",
                                    "default": "Cluster"
                                },
                                "annotations": {
                                    "type": "object",
                                    "description": "Additional custom annotations for Vault Server service",
                                    "default": {}
                                },
                                "extraPorts": {
                                    "type": "array",
                                    "description": "Extra ports to expose in Vault Server service (normally used with the `sidecars` value)",
                                    "default": [],
                                    "items": {}
                                },
                                "sessionAffinity": {
                                    "type": "string",
                                    "description": "Control where web requests go, to the same pod or round-robin",
                                    "default": "None"
                                },
                                "sessionAffinityConfig": {
                                    "type": "object",
                                    "description": "Additional settings for the sessionAffinity",
                                    "default": {}
                                }
                            }
                        }
                    }
                },
                "ingress": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable ingress record generation for Vault",
                            "default": false
                        },
                        "pathType": {
                            "type": "string",
                            "description": "Ingress path type",
                            "default": "ImplementationSpecific"
                        },
                        "apiVersion": {
                            "type": "string",
                            "description": "Force Ingress API version (automatically detected if not set)",
                            "default": ""
                        },
                        "hostname": {
                            "type": "string",
                            "description": "Default host for the ingress record",
                            "default": "vault.local"
                        },
                        "ingressClassName": {
                            "type": "string",
                            "description": "IngressClass that will be be used to implement the Ingress (Kubernetes 1.18+)",
                            "default": ""
                        },
                        "path": {
                            "type": "string",
                            "description": "Default path for the ingress record",
                            "default": "/"
                        },
                        "annotations": {
                            "type": "object",
                            "description": "Additional annotations for the Ingress resource. To enable certificate autogeneration, place here your cert-manager annotations.",
                            "default": {}
                        },
                        "tls": {
                            "type": "boolean",
                            "description": "Enable TLS configuration for the host defined at `client.ingress.hostname` parameter",
                            "default": false
                        },
                        "selfSigned": {
                            "type": "boolean",
                            "description": "Create a TLS secret for this ingress record using self-signed certificates generated by Helm",
                            "default": false
                        },
                        "extraHosts": {
                            "type": "array",
                            "description": "An array with additional hostname(s) to be covered with the ingress record",
                            "default": [],
                            "items": {}
                        },
                        "extraPaths": {
                            "type": "array",
                            "description": "An array with additional arbitrary paths that may need to be added to the ingress under the main host",
                            "default": [],
                            "items": {}
                        },
                        "extraTls": {
                            "type": "array",
                            "description": "TLS configuration for additional hostname(s) to be covered with this ingress record",
                            "default": [],
                            "items": {}
                        },
                        "secrets": {
                            "type": "array",
                            "description": "Custom TLS certificates as secrets",
                            "default": [],
                            "items": {}
                        },
                        "extraRules": {
                            "type": "array",
                            "description": "Additional rules to be covered with this ingress record",
                            "default": [],
                            "items": {}
                        }
                    }
                },
                "rbac": {
                    "type": "object",
                    "properties": {
                        "create": {
                            "type": "boolean",
                            "description": "Specifies whether RBAC resources should be created",
                            "default": true
                        }
                    }
                },
                "serviceAccount": {
                    "type": "object",
                    "properties": {
                        "create": {
                            "type": "boolean",
                            "description": "Specifies whether a ServiceAccount should be created",
                            "default": true
                        },
                        "name": {
                            "type": "string",
                            "description": "The name of the ServiceAccount to use.",
                            "default": ""
                        },
                        "annotations": {
                            "type": "object",
                            "description": "Additional Service Account annotations (evaluated as a template)",
                            "default": {}
                        },
                        "automountServiceAccountToken": {
                            "type": "boolean",
                            "description": "Automount service account token for the server service account",
                            "default": true
                        }
                    }
                },
                "persistence": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable persistence using Persistent Volume Claims",
                            "default": true
                        },
                        "mountPath": {
                            "type": "string",
                            "description": "Persistent Volume mount root path",
                            "default": "/bitnami/vault/data"
                        },
                        "storageClass": {
                            "type": "string",
                            "description": "Persistent Volume storage class",
                            "default": ""
                        },
                        "accessModes": {
                            "type": "array",
                            "description": "Persistent Volume access modes",
                            "default": [
                                "ReadWriteOnce"
                            ],
                            "items": {
                                "type": "string"
                            }
                        },
                        "size": {
                            "type": "string",
                            "description": "Persistent Volume size",
                            "default": "10Gi"
                        },
                        "dataSource": {
                            "type": "object",
                            "description": "Custom PVC data source",
                            "default": {}
                        },
                        "annotations": {
                            "type": "object",
                            "description": "Annotations for the PVC",
                            "default": {}
                        },
                        "selector": {
                            "type": "object",
                            "description": "Selector to match an existing Persistent Volume (this value is evaluated as a template)",
                            "default": {}
                        },
                        "existingClaim": {
                            "type": "string",
                            "description": "The name of an existing PVC to use for persistence",
                            "default": ""
                        }
                    }
                },
                "metrics": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable the export of Prometheus metrics",
                            "default": false
                        },
                        "annotations": {
                            "type": "object",
                            "properties": {
                                "prometheus": {
                                    "type": "object",
                                    "properties": {
                                        "io/scrape": {
                                            "type": "string",
                                            "description": "",
                                            "default": "true"
                                        },
                                        "io/port": {
                                            "type": "string",
                                            "description": "",
                                            "default": "{{ .Values.server.service.general.ports.http }}"
                                        }
                                    }
                                }
                            }
                        },
                        "serviceMonitor": {
                            "type": "object",
                            "properties": {
                                "enabled": {
                                    "type": "boolean",
                                    "description": "if `true`, creates a Prometheus Operator ServiceMonitor (also requires `metrics.enabled` to be `true`)",
                                    "default": false
                                },
                                "namespace": {
                                    "type": "string",
                                    "description": "Namespace in which Prometheus is running",
                                    "default": ""
                                },
                                "annotations": {
                                    "type": "object",
                                    "description": "Additional custom annotations for the ServiceMonitor",
                                    "default": {}
                                },
                                "labels": {
                                    "type": "object",
                                    "description": "Extra labels for the ServiceMonitor",
                                    "default": {}
                                },
                                "jobLabel": {
                                    "type": "string",
                                    "description": "The name of the label on the target service to use as the job name in Prometheus",
                                    "default": ""
                                },
                                "honorLabels": {
                                    "type": "boolean",
                                    "description": "honorLabels chooses the metric's labels on collisions with target labels",
                                    "default": false
                                },
                                "interval": {
                                    "type": "string",
                                    "description": "Interval at which metrics should be scraped.",
                                    "default": ""
                                },
                                "scrapeTimeout": {
                                    "type": "string",
                                    "description": "Timeout after which the scrape is ended",
                                    "default": ""
                                },
                                "metricRelabelings": {
                                    "type": "array",
                                    "description": "Specify additional relabeling of metrics",
                                    "default": [],
                                    "items": {}
                                },
                                "relabelings": {
                                    "type": "array",
                                    "description": "Specify general relabeling",
                                    "default": [],
                                    "items": {}
                                },
                                "selector": {
                                    "type": "object",
                                    "description": "Prometheus instance selector labels",
                                    "default": {}
                                }
                            }
                        }
                    }
                }
            }
        },
        "csiProvider": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable Vault CSI Provider",
                    "default": false
                },
                "image": {
                    "type": "object",
                    "properties": {
                        "registry": {
                            "type": "string",
                            "description": "Vault CSI Provider image registry",
                            "default": "docker.io"
                        },
                        "repository": {
                            "type": "string",
                            "description": "Vault CSI Provider image repository",
                            "default": "bitnami/vault-csi-provider"
                        },
                        "tag": {
                            "type": "string",
                            "description": "Vault CSI Provider image tag (immutable tags are recommended)",
                            "default": "1.4.0-debian-11-r105"
                        },
                        "digest": {
                            "type": "string",
                            "description": "Vault CSI Provider image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag image tag (immutable tags are recommended)",
                            "default": ""
                        },
                        "pullPolicy": {
                            "type": "string",
                            "description": "Vault CSI Provider image pull policy",
                            "default": "IfNotPresent"
                        },
                        "pullSecrets": {
                            "type": "array",
                            "description": "Vault CSI Provider image pull secrets",
                            "default": [],
                            "items": {}
                        },
                        "debug": {
                            "type": "boolean",
                            "description": "Enable Vault CSI Provider image debug mode",
                            "default": false
                        }
                    }
                },
                "config": {
                    "type": "string",
                    "description": "Vault CSI Provider configuration (evaluated as a template)",
                    "default": "vault {\n    \"address\" = \"http://{{ include \"vault.server.fullname\" . }}:{{ .Values.server.service.general.ports.http }}\n}\n\ncache {}\n\nlistener \"unix\" {\n    address = \"/var/run/vault/agent.sock\"\n    tls_disable = true\n}\n"
                },
                "existingConfigMap": {
                    "type": "string",
                    "description": "name of a ConfigMap with existing configuration for the CSI Provider",
                    "default": ""
                },
                "secretStoreHostPath": {
                    "type": "string",
                    "description": "Path to the host CSI Provider folder",
                    "default": "/etc/kubernetes/secrets-store-csi-providers"
                },
                "hostAliases": {
                    "type": "array",
                    "description": "Vault CSI Provider pods host aliases",
                    "default": [],
                    "items": {}
                },
                "podLabels": {
                    "type": "object",
                    "description": "Extra labels for Vault CSI Provider pods",
                    "default": {}
                },
                "podAnnotations": {
                    "type": "object",
                    "description": "Annotations for Vault CSI Provider pods",
                    "default": {}
                },
                "podAffinityPreset": {
                    "type": "string",
                    "description": "Pod affinity preset. Ignored if `csiProvider.affinity` is set. Allowed values: `soft` or `hard`",
                    "default": ""
                },
                "podAntiAffinityPreset": {
                    "type": "string",
                    "description": "Pod anti-affinity preset. Ignored if `csiProvider.affinity` is set. Allowed values: `soft` or `hard`",
                    "default": "soft"
                },
                "nodeAffinityPreset": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "Node affinity preset type. Ignored if `csiProvider.affinity` is set. Allowed values: `soft` or `hard`",
                            "default": ""
                        },
                        "key": {
                            "type": "string",
                            "description": "Node label key to match. Ignored if `csiProvider.affinity` is set",
                            "default": ""
                        },
                        "values": {
                            "type": "array",
                            "description": "Node label values to match. Ignored if `csiProvider.affinity` is set",
                            "default": [],
                            "items": {}
                        }
                    }
                },
                "affinity": {
                    "type": "object",
                    "description": "Affinity for Vault CSI Provider pods assignment",
                    "default": {}
                },
                "nodeSelector": {
                    "type": "object",
                    "description": "Node labels for Vault CSI Provider pods assignment",
                    "default": {}
                },
                "tolerations": {
                    "type": "array",
                    "description": "Tolerations for Vault CSI Provider pods assignment",
                    "default": [],
                    "items": {}
                },
                "updateStrategy": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "Vault CSI Provider statefulset strategy type",
                            "default": "RollingUpdate"
                        }
                    }
                },
                "priorityClassName": {
                    "type": "string",
                    "description": "Vault CSI Provider pods' priorityClassName",
                    "default": ""
                },
                "topologySpreadConstraints": {
                    "type": "array",
                    "description": "Topology Spread Constraints for pod assignment spread across your cluster among failure-domains. Evaluated as a template",
                    "default": [],
                    "items": {}
                },
                "schedulerName": {
                    "type": "string",
                    "description": "Name of the k8s scheduler (other than default) for Vault CSI Provider pods",
                    "default": ""
                },
                "terminationGracePeriodSeconds": {
                    "type": "string",
                    "description": "Seconds Redmine pod needs to terminate gracefully",
                    "default": ""
                },
                "extraVolumes": {
                    "type": "array",
                    "description": "Optionally specify extra list of additional volumes for the Vault CSI Provider pod(s)",
                    "default": [],
                    "items": {}
                },
                "sidecars": {
                    "type": "array",
                    "description": "Add additional sidecar containers to the Vault CSI Provider pod(s)",
                    "default": [],
                    "items": {}
                },
                "initContainers": {
                    "type": "array",
                    "description": "Add additional init containers to the Vault CSI Provider pod(s)",
                    "default": [],
                    "items": {}
                },
                "podSecurityContext": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enabled CSI Provider pods' Security Context",
                            "default": true
                        },
                        "fsGroup": {
                            "type": "number",
                            "description": "Set CSI Provider pod's Security Context fsGroup",
                            "default": 1001
                        },
                        "seccompProfile": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string",
                                    "description": "Set CSI Provider pod's Security Context seccomp profile",
                                    "default": "RuntimeDefault"
                                }
                            }
                        }
                    }
                },
                "provider": {
                    "type": "object",
                    "properties": {
                        "containerPorts": {
                            "type": "object",
                            "properties": {
                                "health": {
                                    "type": "number",
                                    "description": "CSI Provider health container port",
                                    "default": 8080
                                }
                            }
                        },
                        "livenessProbe": {
                            "type": "object",
                            "properties": {
                                "enabled": {
                                    "type": "boolean",
                                    "description": "Enable livenessProbe on CSI Provider container",
                                    "default": true
                                },
                                "initialDelaySeconds": {
                                    "type": "number",
                                    "description": "Initial delay seconds for livenessProbe",
                                    "default": 5
                                },
                                "periodSeconds": {
                                    "type": "number",
                                    "description": "Period seconds for livenessProbe",
                                    "default": 10
                                },
                                "timeoutSeconds": {
                                    "type": "number",
                                    "description": "Timeout seconds for livenessProbe",
                                    "default": 5
                                },
                                "failureThreshold": {
                                    "type": "number",
                                    "description": "Failure threshold for livenessProbe",
                                    "default": 5
                                },
                                "successThreshold": {
                                    "type": "number",
                                    "description": "Success threshold for livenessProbe",
                                    "default": 1
                                }
                            }
                        },
                        "readinessProbe": {
                            "type": "object",
                            "properties": {
                                "enabled": {
                                    "type": "boolean",
                                    "description": "Enable readinessProbe on CSI Provider container",
                                    "default": true
                                },
                                "initialDelaySeconds": {
                                    "type": "number",
                                    "description": "Initial delay seconds for readinessProbe",
                                    "default": 5
                                },
                                "periodSeconds": {
                                    "type": "number",
                                    "description": "Period seconds for readinessProbe",
                                    "default": 10
                                },
                                "timeoutSeconds": {
                                    "type": "number",
                                    "description": "Timeout seconds for readinessProbe",
                                    "default": 5
                                },
                                "failureThreshold": {
                                    "type": "number",
                                    "description": "Failure threshold for readinessProbe",
                                    "default": 5
                                },
                                "successThreshold": {
                                    "type": "number",
                                    "description": "Success threshold for readinessProbe",
                                    "default": 1
                                }
                            }
                        },
                        "startupProbe": {
                            "type": "object",
                            "properties": {
                                "enabled": {
                                    "type": "boolean",
                                    "description": "Enable startupProbe on CSI Provider container",
                                    "default": false
                                },
                                "initialDelaySeconds": {
                                    "type": "number",
                                    "description": "Initial delay seconds for startupProbe",
                                    "default": 5
                                },
                                "periodSeconds": {
                                    "type": "number",
                                    "description": "Period seconds for startupProbe",
                                    "default": 10
                                },
                                "timeoutSeconds": {
                                    "type": "number",
                                    "description": "Timeout seconds for startupProbe",
                                    "default": 5
                                },
                                "failureThreshold": {
                                    "type": "number",
                                    "description": "Failure threshold for startupProbe",
                                    "default": 5
                                },
                                "successThreshold": {
                                    "type": "number",
                                    "description": "Success threshold for startupProbe",
                                    "default": 1
                                }
                            }
                        },
                        "customLivenessProbe": {
                            "type": "object",
                            "description": "Custom livenessProbe that overrides the default one",
                            "default": {}
                        },
                        "customReadinessProbe": {
                            "type": "object",
                            "description": "Custom readinessProbe that overrides the default one",
                            "default": {}
                        },
                        "customStartupProbe": {
                            "type": "object",
                            "description": "Custom startupProbe that overrides the default one",
                            "default": {}
                        },
                        "resources": {
                            "type": "object",
                            "properties": {
                                "limits": {
                                    "type": "object",
                                    "description": "The resources limits for the CSI Provider container",
                                    "default": {}
                                },
                                "requests": {
                                    "type": "object",
                                    "description": "The requested resources for the CSI Provider container",
                                    "default": {}
                                }
                            }
                        },
                        "containerSecurityContext": {
                            "type": "object",
                            "properties": {
                                "enabled": {
                                    "type": "boolean",
                                    "description": "Enabled CSI Provider container' Security Context",
                                    "default": true
                                },
                                "runAsUser": {
                                    "type": "number",
                                    "description": "Set CSI Provider container' Security Context runAsUser",
                                    "default": 1001
                                },
                                "runAsNonRoot": {
                                    "type": "boolean",
                                    "description": "Set CSI Provider container' Security Context runAsNonRoot",
                                    "default": true
                                },
                                "readOnlyRootFilesystem": {
                                    "type": "boolean",
                                    "description": "Set CSI Provider container' Security Context runAsNonRoot",
                                    "default": true
                                },
                                "allowPrivilegeEscalation": {
                                    "type": "boolean",
                                    "description": "Set CSI Provider container's privilege escalation",
                                    "default": false
                                },
                                "capabilities": {
                                    "type": "object",
                                    "properties": {
                                        "drop": {
                                            "type": "array",
                                            "description": "Set CSI Provider container's Security Context runAsNonRoot",
                                            "default": [
                                                "ALL"
                                            ],
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "command": {
                            "type": "array",
                            "description": "Override default container command (useful when using custom images)",
                            "default": [],
                            "items": {}
                        },
                        "args": {
                            "type": "array",
                            "description": "Override default container args (useful when using custom images)",
                            "default": [],
                            "items": {}
                        },
                        "lifecycleHooks": {
                            "type": "object",
                            "description": "for the CSI Provider container(s) to automate configuration before or after startup",
                            "default": {}
                        },
                        "extraEnvVars": {
                            "type": "array",
                            "description": "Array with extra environment variables to add to CSI Provider nodes",
                            "default": [],
                            "items": {}
                        },
                        "extraEnvVarsCM": {
                            "type": "string",
                            "description": "Name of existing ConfigMap containing extra env vars for CSI Provider nodes",
                            "default": ""
                        },
                        "extraEnvVarsSecret": {
                            "type": "string",
                            "description": "Name of existing Secret containing extra env vars for CSI Provider nodes",
                            "default": ""
                        },
                        "extraVolumeMounts": {
                            "type": "array",
                            "description": "Optionally specify extra list of additional volumeMounts for the Vault CSI Provider container",
                            "default": [],
                            "items": {}
                        }
                    }
                },
                "agent": {
                    "type": "object",
                    "properties": {
                        "containerPorts": {
                            "type": "object",
                            "properties": {
                                "tcp": {
                                    "type": "number",
                                    "description": "CSI Provider Agent metrics container port",
                                    "default": 8200
                                }
                            }
                        },
                        "livenessProbe": {
                            "type": "object",
                            "properties": {
                                "enabled": {
                                    "type": "boolean",
                                    "description": "Enable livenessProbe on CSI Provider Agent container",
                                    "default": true
                                },
                                "initialDelaySeconds": {
                                    "type": "number",
                                    "description": "Initial delay seconds for livenessProbe",
                                    "default": 5
                                },
                                "periodSeconds": {
                                    "type": "number",
                                    "description": "Period seconds for livenessProbe",
                                    "default": 10
                                },
                                "timeoutSeconds": {
                                    "type": "number",
                                    "description": "Timeout seconds for livenessProbe",
                                    "default": 5
                                },
                                "failureThreshold": {
                                    "type": "number",
                                    "description": "Failure threshold for livenessProbe",
                                    "default": 5
                                },
                                "successThreshold": {
                                    "type": "number",
                                    "description": "Success threshold for livenessProbe",
                                    "default": 1
                                }
                            }
                        },
                        "readinessProbe": {
                            "type": "object",
                            "properties": {
                                "enabled": {
                                    "type": "boolean",
                                    "description": "Enable readinessProbe on CSI Provider Agent container",
                                    "default": true
                                },
                                "initialDelaySeconds": {
                                    "type": "number",
                                    "description": "Initial delay seconds for readinessProbe",
                                    "default": 5
                                },
                                "periodSeconds": {
                                    "type": "number",
                                    "description": "Period seconds for readinessProbe",
                                    "default": 10
                                },
                                "timeoutSeconds": {
                                    "type": "number",
                                    "description": "Timeout seconds for readinessProbe",
                                    "default": 5
                                },
                                "failureThreshold": {
                                    "type": "number",
                                    "description": "Failure threshold for readinessProbe",
                                    "default": 5
                                },
                                "successThreshold": {
                                    "type": "number",
                                    "description": "Success threshold for readinessProbe",
                                    "default": 1
                                }
                            }
                        },
                        "startupProbe": {
                            "type": "object",
                            "properties": {
                                "enabled": {
                                    "type": "boolean",
                                    "description": "Enable startupProbe on CSI Provider Agent container",
                                    "default": false
                                },
                                "initialDelaySeconds": {
                                    "type": "number",
                                    "description": "Initial delay seconds for startupProbe",
                                    "default": 5
                                },
                                "periodSeconds": {
                                    "type": "number",
                                    "description": "Period seconds for startupProbe",
                                    "default": 10
                                },
                                "timeoutSeconds": {
                                    "type": "number",
                                    "description": "Timeout seconds for startupProbe",
                                    "default": 5
                                },
                                "failureThreshold": {
                                    "type": "number",
                                    "description": "Failure threshold for startupProbe",
                                    "default": 5
                                },
                                "successThreshold": {
                                    "type": "number",
                                    "description": "Success threshold for startupProbe",
                                    "default": 1
                                }
                            }
                        },
                        "customLivenessProbe": {
                            "type": "object",
                            "description": "Custom livenessProbe that overrides the default one",
                            "default": {}
                        },
                        "customReadinessProbe": {
                            "type": "object",
                            "description": "Custom readinessProbe that overrides the default one",
                            "default": {}
                        },
                        "customStartupProbe": {
                            "type": "object",
                            "description": "Custom startupProbe that overrides the default one",
                            "default": {}
                        },
                        "containerSecurityContext": {
                            "type": "object",
                            "properties": {
                                "enabled": {
                                    "type": "boolean",
                                    "description": "Enabled CSI Agent container' Security Context",
                                    "default": true
                                },
                                "runAsUser": {
                                    "type": "number",
                                    "description": "Set CSI Agent container' Security Context runAsUser",
                                    "default": 1001
                                },
                                "runAsNonRoot": {
                                    "type": "boolean",
                                    "description": "Set CSI Agent container' Security Context runAsNonRoot",
                                    "default": true
                                },
                                "readOnlyRootFilesystem": {
                                    "type": "boolean",
                                    "description": "Set CSI Agent container' Security Context runAsNonRoot",
                                    "default": true
                                },
                                "allowPrivilegeEscalation": {
                                    "type": "boolean",
                                    "description": "Set CSI Agent container's privilege escalation",
                                    "default": false
                                },
                                "capabilities": {
                                    "type": "object",
                                    "properties": {
                                        "drop": {
                                            "type": "array",
                                            "description": "Set CSI Agent container's Security Context runAsNonRoot",
                                            "default": [
                                                "ALL"
                                            ],
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "resources": {
                            "type": "object",
                            "properties": {
                                "limits": {
                                    "type": "object",
                                    "description": "The resources limits for the CSI Provider Agent container",
                                    "default": {}
                                },
                                "requests": {
                                    "type": "object",
                                    "description": "The requested resources for the CSI Provider Agent container",
                                    "default": {}
                                }
                            }
                        },
                        "command": {
                            "type": "array",
                            "description": "Override default container command (useful when using custom images)",
                            "default": [],
                            "items": {}
                        },
                        "args": {
                            "type": "array",
                            "description": "Override default container args (useful when using custom images)",
                            "default": [],
                            "items": {}
                        },
                        "lifecycleHooks": {
                            "type": "object",
                            "description": "for the CSI Provider Agent container(s) to automate configuration before or after startup",
                            "default": {}
                        },
                        "extraEnvVars": {
                            "type": "array",
                            "description": "Array with extra environment variables to add to CSI Provider Agent nodes",
                            "default": [],
                            "items": {}
                        },
                        "extraEnvVarsCM": {
                            "type": "string",
                            "description": "Name of existing ConfigMap containing extra env vars for CSI Provider Agent nodes",
                            "default": ""
                        },
                        "extraEnvVarsSecret": {
                            "type": "string",
                            "description": "Name of existing Secret containing extra env vars for CSI Provider Agent nodes",
                            "default": ""
                        },
                        "extraVolumeMounts": {
                            "type": "array",
                            "description": "Optionally specify extra list of additional volumeMounts for the CSI Provider container(s)",
                            "default": [],
                            "items": {}
                        }
                    }
                },
                "rbac": {
                    "type": "object",
                    "properties": {
                        "create": {
                            "type": "boolean",
                            "description": "Specifies whether RBAC resources should be created",
                            "default": true
                        },
                        "rules": {
                            "type": "array",
                            "description": "Custom RBAC rules to set",
                            "default": [],
                            "items": {}
                        }
                    }
                },
                "serviceAccount": {
                    "type": "object",
                    "properties": {
                        "create": {
                            "type": "boolean",
                            "description": "Specifies whether a ServiceAccount should be created",
                            "default": true
                        },
                        "name": {
                            "type": "string",
                            "description": "The name of the ServiceAccount to use.",
                            "default": ""
                        },
                        "annotations": {
                            "type": "object",
                            "description": "Additional Service Account annotations (evaluated as a template)",
                            "default": {}
                        },
                        "automountServiceAccountToken": {
                            "type": "boolean",
                            "description": "Automount service account token for the server service account",
                            "default": true
                        }
                    }
                }
            }
        },
        "injector": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable Vault Kubernetes Injector",
                    "default": true
                },
                "image": {
                    "type": "object",
                    "properties": {
                        "registry": {
                            "type": "string",
                            "description": "Vault Kubernetes Injector image registry",
                            "default": "docker.io"
                        },
                        "repository": {
                            "type": "string",
                            "description": "Vault Kubernetes Injector image repository",
                            "default": "bitnami/vault-k8s"
                        },
                        "tag": {
                            "type": "string",
                            "description": "Vault Kubernetes Injector image tag (immutable tags are recommended)",
                            "default": "1.2.1-debian-11-r96"
                        },
                        "digest": {
                            "type": "string",
                            "description": "Vault Kubernetes Injector image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag image tag (immutable tags are recommended)",
                            "default": ""
                        },
                        "pullPolicy": {
                            "type": "string",
                            "description": "Vault Kubernetes Injector image pull policy",
                            "default": "IfNotPresent"
                        },
                        "pullSecrets": {
                            "type": "array",
                            "description": "Vault Kubernetes Injector image pull secrets",
                            "default": [],
                            "items": {}
                        },
                        "debug": {
                            "type": "boolean",
                            "description": "Enable Vault Kubernetes Injector image debug mode",
                            "default": false
                        }
                    }
                },
                "replicaCount": {
                    "type": "number",
                    "description": "Number of Vault Kubernetes Injector replicas to deploy",
                    "default": 1
                },
                "containerPorts": {
                    "type": "object",
                    "properties": {
                        "https": {
                            "type": "number",
                            "description": "Vault Kubernetes Injector metrics container port",
                            "default": 8080
                        }
                    }
                },
                "livenessProbe": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable livenessProbe on Vault Kubernetes Injector containers",
                            "default": true
                        },
                        "initialDelaySeconds": {
                            "type": "number",
                            "description": "Initial delay seconds for livenessProbe",
                            "default": 5
                        },
                        "periodSeconds": {
                            "type": "number",
                            "description": "Period seconds for livenessProbe",
                            "default": 10
                        },
                        "timeoutSeconds": {
                            "type": "number",
                            "description": "Timeout seconds for livenessProbe",
                            "default": 5
                        },
                        "failureThreshold": {
                            "type": "number",
                            "description": "Failure threshold for livenessProbe",
                            "default": 5
                        },
                        "successThreshold": {
                            "type": "number",
                            "description": "Success threshold for livenessProbe",
                            "default": 1
                        }
                    }
                },
                "readinessProbe": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable readinessProbe on Vault Kubernetes Injector containers",
                            "default": true
                        },
                        "initialDelaySeconds": {
                            "type": "number",
                            "description": "Initial delay seconds for readinessProbe",
                            "default": 5
                        },
                        "periodSeconds": {
                            "type": "number",
                            "description": "Period seconds for readinessProbe",
                            "default": 10
                        },
                        "timeoutSeconds": {
                            "type": "number",
                            "description": "Timeout seconds for readinessProbe",
                            "default": 5
                        },
                        "failureThreshold": {
                            "type": "number",
                            "description": "Failure threshold for readinessProbe",
                            "default": 5
                        },
                        "successThreshold": {
                            "type": "number",
                            "description": "Success threshold for readinessProbe",
                            "default": 1
                        }
                    }
                },
                "startupProbe": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable startupProbe on Vault Kubernetes Injector containers",
                            "default": false
                        },
                        "initialDelaySeconds": {
                            "type": "number",
                            "description": "Initial delay seconds for startupProbe",
                            "default": 5
                        },
                        "periodSeconds": {
                            "type": "number",
                            "description": "Period seconds for startupProbe",
                            "default": 10
                        },
                        "timeoutSeconds": {
                            "type": "number",
                            "description": "Timeout seconds for startupProbe",
                            "default": 5
                        },
                        "failureThreshold": {
                            "type": "number",
                            "description": "Failure threshold for startupProbe",
                            "default": 5
                        },
                        "successThreshold": {
                            "type": "number",
                            "description": "Success threshold for startupProbe",
                            "default": 1
                        }
                    }
                },
                "customLivenessProbe": {
                    "type": "object",
                    "description": "Custom livenessProbe that overrides the default one",
                    "default": {}
                },
                "customReadinessProbe": {
                    "type": "object",
                    "description": "Custom readinessProbe that overrides the default one",
                    "default": {}
                },
                "customStartupProbe": {
                    "type": "object",
                    "description": "Custom startupProbe that overrides the default one",
                    "default": {}
                },
                "resources": {
                    "type": "object",
                    "properties": {
                        "limits": {
                            "type": "object",
                            "description": "The resources limits for the Vault Kubernetes Injector containers",
                            "default": {}
                        },
                        "requests": {
                            "type": "object",
                            "description": "The requested resources for the Vault Kubernetes Injector containers",
                            "default": {}
                        }
                    }
                },
                "podSecurityContext": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enabled Vault Kubernetes Injector pods' Security Context",
                            "default": true
                        },
                        "fsGroup": {
                            "type": "number",
                            "description": "Set Vault Kubernetes Injector pod's Security Context fsGroup",
                            "default": 1001
                        },
                        "seccompProfile": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string",
                                    "description": "Set Vault Kubernetes Injector container's Security Context seccomp profile",
                                    "default": "RuntimeDefault"
                                }
                            }
                        }
                    }
                },
                "containerSecurityContext": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enabled Vault Kubernetes Injector containers' Security Context",
                            "default": true
                        },
                        "runAsUser": {
                            "type": "number",
                            "description": "Set Vault Kubernetes Injector containers' Security Context runAsUser",
                            "default": 1001
                        },
                        "runAsNonRoot": {
                            "type": "boolean",
                            "description": "Set Vault Kubernetes Injector containers' Security Context runAsNonRoot",
                            "default": true
                        },
                        "readOnlyRootFilesystem": {
                            "type": "boolean",
                            "description": "Set Vault Kubernetes Injector containers' Security Context runAsNonRoot",
                            "default": true
                        },
                        "allowPrivilegeEscalation": {
                            "type": "boolean",
                            "description": "Set Vault Kubernetes Injector container's privilege escalation",
                            "default": false
                        },
                        "capabilities": {
                            "type": "object",
                            "properties": {
                                "drop": {
                                    "type": "array",
                                    "description": "Set Vault Kubernetes Injector container's Security Context runAsNonRoot",
                                    "default": [
                                        "ALL"
                                    ],
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "command": {
                    "type": "array",
                    "description": "Override default container command (useful when using custom images)",
                    "default": [],
                    "items": {}
                },
                "args": {
                    "type": "array",
                    "description": "Override default container args (useful when using custom images)",
                    "default": [],
                    "items": {}
                },
                "hostAliases": {
                    "type": "array",
                    "description": "Vault Kubernetes Injector pods host aliases",
                    "default": [],
                    "items": {}
                },
                "podLabels": {
                    "type": "object",
                    "description": "Extra labels for Vault Kubernetes Injector pods",
                    "default": {}
                },
                "podAnnotations": {
                    "type": "object",
                    "description": "Annotations for Vault Kubernetes Injector pods",
                    "default": {}
                },
                "podAffinityPreset": {
                    "type": "string",
                    "description": "Pod affinity preset. Ignored if `injector.affinity` is set. Allowed values: `soft` or `hard`",
                    "default": ""
                },
                "podAntiAffinityPreset": {
                    "type": "string",
                    "description": "Pod anti-affinity preset. Ignored if `injector.affinity` is set. Allowed values: `soft` or `hard`",
                    "default": "soft"
                },
                "pdb": {
                    "type": "object",
                    "properties": {
                        "create": {
                            "type": "boolean",
                            "description": "Enable/disable a Pod Disruption Budget creation",
                            "default": false
                        },
                        "minAvailable": {
                            "type": "number",
                            "description": "Minimum number/percentage of pods that should remain scheduled",
                            "default": 1
                        },
                        "maxUnavailable": {
                            "type": "string",
                            "description": "Maximum number/percentage of pods that may be made unavailable",
                            "default": ""
                        }
                    }
                },
                "autoscaling": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable autoscaling for injector",
                            "default": false
                        },
                        "minReplicas": {
                            "type": "string",
                            "description": "Minimum number of injector replicas",
                            "default": ""
                        },
                        "maxReplicas": {
                            "type": "string",
                            "description": "Maximum number of injector replicas",
                            "default": ""
                        },
                        "targetCPU": {
                            "type": "string",
                            "description": "Target CPU utilization percentage",
                            "default": ""
                        },
                        "targetMemory": {
                            "type": "string",
                            "description": "Target Memory utilization percentage",
                            "default": ""
                        }
                    }
                },
                "nodeAffinityPreset": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "Node affinity preset type. Ignored if `injector.affinity` is set. Allowed values: `soft` or `hard`",
                            "default": ""
                        },
                        "key": {
                            "type": "string",
                            "description": "Node label key to match. Ignored if `injector.affinity` is set",
                            "default": ""
                        },
                        "values": {
                            "type": "array",
                            "description": "Node label values to match. Ignored if `injector.affinity` is set",
                            "default": [],
                            "items": {}
                        }
                    }
                },
                "affinity": {
                    "type": "object",
                    "description": "Affinity for Vault Kubernetes Injector pods assignment",
                    "default": {}
                },
                "nodeSelector": {
                    "type": "object",
                    "description": "Node labels for Vault Kubernetes Injector pods assignment",
                    "default": {}
                },
                "tolerations": {
                    "type": "array",
                    "description": "Tolerations for Vault Kubernetes Injector pods assignment",
                    "default": [],
                    "items": {}
                },
                "updateStrategy": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "Vault Kubernetes Injector statefulset strategy type",
                            "default": "RollingUpdate"
                        }
                    }
                },
                "priorityClassName": {
                    "type": "string",
                    "description": "Vault Kubernetes Injector pods' priorityClassName",
                    "default": ""
                },
                "topologySpreadConstraints": {
                    "type": "array",
                    "description": "Topology Spread Constraints for pod assignment spread across your cluster among failure-domains. Evaluated as a template",
                    "default": [],
                    "items": {}
                },
                "schedulerName": {
                    "type": "string",
                    "description": "Name of the k8s scheduler (other than default) for Vault Kubernetes Injector pods",
                    "default": ""
                },
                "terminationGracePeriodSeconds": {
                    "type": "string",
                    "description": "Seconds Redmine pod needs to terminate gracefully",
                    "default": ""
                },
                "lifecycleHooks": {
                    "type": "object",
                    "description": "for the Vault Kubernetes Injector container(s) to automate configuration before or after startup",
                    "default": {}
                },
                "extraEnvVars": {
                    "type": "array",
                    "description": "Array with extra environment variables to add to Vault Kubernetes Injector nodes",
                    "default": [],
                    "items": {}
                },
                "extraEnvVarsCM": {
                    "type": "string",
                    "description": "Name of existing ConfigMap containing extra env vars for Vault Kubernetes Injector nodes",
                    "default": ""
                },
                "extraEnvVarsSecret": {
                    "type": "string",
                    "description": "Name of existing Secret containing extra env vars for Vault Kubernetes Injector nodes",
                    "default": ""
                },
                "extraVolumes": {
                    "type": "array",
                    "description": "Optionally specify extra list of additional volumes for the Vault Kubernetes Injector pod(s)",
                    "default": [],
                    "items": {}
                },
                "extraVolumeMounts": {
                    "type": "array",
                    "description": "Optionally specify extra list of additional volumeMounts for the Vault Kubernetes Injector container(s)",
                    "default": [],
                    "items": {}
                },
                "sidecars": {
                    "type": "array",
                    "description": "Add additional sidecar containers to the Vault Kubernetes Injector pod(s)",
                    "default": [],
                    "items": {}
                },
                "initContainers": {
                    "type": "array",
                    "description": "Add additional init containers to the Vault Kubernetes Injector pod(s)",
                    "default": [],
                    "items": {}
                },
                "service": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "Vault Kubernetes Injector service type",
                            "default": "ClusterIP"
                        },
                        "ports": {
                            "type": "object",
                            "properties": {
                                "https": {
                                    "type": "number",
                                    "description": "Vault Kubernetes Injector service HTTPS port",
                                    "default": 443
                                }
                            }
                        },
                        "nodePorts": {
                            "type": "object",
                            "properties": {
                                "https": {
                                    "type": "string",
                                    "description": "Node port for HTTPS",
                                    "default": ""
                                }
                            }
                        },
                        "clusterIP": {
                            "type": "string",
                            "description": "Vault Kubernetes Injector service Cluster IP",
                            "default": ""
                        },
                        "loadBalancerIP": {
                            "type": "string",
                            "description": "Vault Kubernetes Injector service Load Balancer IP",
                            "default": ""
                        },
                        "loadBalancerSourceRanges": {
                            "type": "array",
                            "description": "Vault Kubernetes Injector service Load Balancer sources",
                            "default": [],
                            "items": {}
                        },
                        "externalTrafficPolicy": {
                            "type": "string",
                            "description": "Vault Kubernetes Injector service external traffic policy",
                            "default": "Cluster"
                        },
                        "annotations": {
                            "type": "object",
                            "description": "Additional custom annotations for Vault Kubernetes Injector service",
                            "default": {}
                        },
                        "extraPorts": {
                            "type": "array",
                            "description": "Extra ports to expose in Vault Kubernetes Injector service (normally used with the `sidecars` value)",
                            "default": [],
                            "items": {}
                        },
                        "sessionAffinity": {
                            "type": "string",
                            "description": "Control where web requests go, to the same pod or round-robin",
                            "default": "None"
                        },
                        "sessionAffinityConfig": {
                            "type": "object",
                            "description": "Additional settings for the sessionAffinity",
                            "default": {}
                        }
                    }
                },
                "rbac": {
                    "type": "object",
                    "properties": {
                        "create": {
                            "type": "boolean",
                            "description": "Specifies whether RBAC resources should be created",
                            "default": true
                        },
                        "rules": {
                            "type": "array",
                            "description": "Custom RBAC rules to set",
                            "default": [],
                            "items": {}
                        }
                    }
                },
                "serviceAccount": {
                    "type": "object",
                    "properties": {
                        "create": {
                            "type": "boolean",
                            "description": "Specifies whether a ServiceAccount should be created",
                            "default": true
                        },
                        "name": {
                            "type": "string",
                            "description": "The name of the ServiceAccount to use.",
                            "default": ""
                        },
                        "annotations": {
                            "type": "object",
                            "description": "Additional Service Account annotations (evaluated as a template)",
                            "default": {}
                        },
                        "automountServiceAccountToken": {
                            "type": "boolean",
                            "description": "Automount service account token for the server service account",
                            "default": true
                        }
                    }
                }
            }
        },
        "volumePermissions": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable init container that changes the owner/group of the PV mount point to `runAsUser:fsGroup`",
                    "default": false
                },
                "image": {
                    "type": "object",
                    "properties": {
                        "registry": {
                            "type": "string",
                            "description": "OS Shell + Utility image registry",
                            "default": "docker.io"
                        },
                        "repository": {
                            "type": "string",
                            "description": "OS Shell + Utility image repository",
                            "default": "bitnami/os-shell"
                        },
                        "tag": {
                            "type": "string",
                            "description": "OS Shell + Utility image tag (immutable tags are recommended)",
                            "default": "11-debian-11-r51"
                        },
                        "digest": {
                            "type": "string",
                            "description": "OS Shell + Utility image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag",
                            "default": ""
                        },
                        "pullPolicy": {
                            "type": "string",
                            "description": "OS Shell + Utility image pull policy",
                            "default": "IfNotPresent"
                        },
                        "pullSecrets": {
                            "type": "array",
                            "description": "OS Shell + Utility image pull secrets",
                            "default": [],
                            "items": {}
                        }
                    }
                },
                "resources": {
                    "type": "object",
                    "properties": {
                        "limits": {
                            "type": "object",
                            "description": "The resources limits for the init container",
                            "default": {}
                        },
                        "requests": {
                            "type": "object",
                            "description": "The requested resources for the init container",
                            "default": {}
                        }
                    }
                },
                "containerSecurityContext": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable init container's Security Context",
                            "default": true
                        },
                        "runAsUser": {
                            "type": "number",
                            "description": "Set init container's Security Context runAsUser",
                            "default": 0
                        }
                    }
                }
            }
        }
    }
}