{
    "title": "Chart Values",
    "type": "object",
    "properties": {
        "global": {
            "type": "object",
            "properties": {
                "imageRegistry": {
                    "type": "string",
                    "description": "Global Docker image registry",
                    "default": ""
                },
                "imagePullSecrets": {
                    "type": "array",
                    "description": "Global Docker registry secret names as an array",
                    "default": [],
                    "items": {}
                },
                "storageClass": {
                    "type": "string",
                    "description": "Global StorageClass for Persistent Volume(s)",
                    "default": ""
                }
            }
        },
        "kubeVersion": {
            "type": "string",
            "description": "Override Kubernetes version",
            "default": ""
        },
        "nameOverride": {
            "type": "string",
            "description": "String to partially override common.names.fullname template (will maintain the release name)",
            "default": ""
        },
        "fullnameOverride": {
            "type": "string",
            "description": "String to fully override common.names.fullname template",
            "default": ""
        },
        "commonLabels": {
            "type": "object",
            "description": "Labels to add to all deployed resources",
            "default": {}
        },
        "commonAnnotations": {
            "type": "object",
            "description": "Annotations to add to all deployed resources",
            "default": {}
        },
        "clusterDomain": {
            "type": "string",
            "description": "Kubernetes Cluster Domain",
            "default": "cluster.local"
        },
        "extraDeploy": {
            "type": "array",
            "description": "Array of extra objects to deploy with the release",
            "default": [],
            "items": {}
        },
        "diagnosticMode": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable diagnostic mode (all probes will be disabled and the command will be overridden)",
                    "default": false
                },
                "command": {
                    "type": "array",
                    "description": "Command to override all containers in the deployment",
                    "default": [
                        "sleep"
                    ],
                    "items": {
                        "type": "string"
                    }
                },
                "args": {
                    "type": "array",
                    "description": "Args to override all containers in the deployment",
                    "default": [
                        "infinity"
                    ],
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "image": {
            "type": "object",
            "properties": {
                "registry": {
                    "type": "string",
                    "description": "WordPress image registry",
                    "default": "docker.io"
                },
                "repository": {
                    "type": "string",
                    "description": "WordPress image repository",
                    "default": "bitnami/wordpress"
                },
                "tag": {
                    "type": "string",
                    "description": "WordPress image tag (immutable tags are recommended)",
                    "default": "6.3.1-debian-11-r2"
                },
                "digest": {
                    "type": "string",
                    "description": "WordPress image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag",
                    "default": ""
                },
                "pullPolicy": {
                    "type": "string",
                    "description": "WordPress image pull policy",
                    "default": "IfNotPresent"
                },
                "pullSecrets": {
                    "type": "array",
                    "description": "WordPress image pull secrets",
                    "default": [],
                    "items": {}
                },
                "debug": {
                    "type": "boolean",
                    "description": "Specify if debug values should be set",
                    "default": false
                }
            }
        },
        "wordpressUsername": {
            "type": "string",
            "description": "WordPress username",
            "default": "user"
        },
        "wordpressPassword": {
            "type": "string",
            "description": "WordPress user password",
            "default": ""
        },
        "existingSecret": {
            "type": "string",
            "description": "Name of existing secret containing WordPress credentials",
            "default": ""
        },
        "wordpressEmail": {
            "type": "string",
            "description": "WordPress user email",
            "default": "user@example.com"
        },
        "wordpressFirstName": {
            "type": "string",
            "description": "WordPress user first name",
            "default": "FirstName"
        },
        "wordpressLastName": {
            "type": "string",
            "description": "WordPress user last name",
            "default": "LastName"
        },
        "wordpressBlogName": {
            "type": "string",
            "description": "Blog name",
            "default": "User's Blog!"
        },
        "wordpressTablePrefix": {
            "type": "string",
            "description": "Prefix to use for WordPress database tables",
            "default": "wp_"
        },
        "wordpressScheme": {
            "type": "string",
            "description": "Scheme to use to generate WordPress URLs",
            "default": "http"
        },
        "wordpressSkipInstall": {
            "type": "boolean",
            "description": "Skip wizard installation",
            "default": false
        },
        "wordpressExtraConfigContent": {
            "type": "string",
            "description": "Add extra content to the default wp-config.php file",
            "default": ""
        },
        "wordpressConfiguration": {
            "type": "string",
            "description": "The content for your custom wp-config.php file (advanced feature)",
            "default": ""
        },
        "existingWordPressConfigurationSecret": {
            "type": "string",
            "description": "The name of an existing secret with your custom wp-config.php file (advanced feature)",
            "default": ""
        },
        "wordpressConfigureCache": {
            "type": "boolean",
            "description": "Enable W3 Total Cache plugin and configure cache settings",
            "default": false
        },
        "wordpressPlugins": {
            "type": "string",
            "description": "Array of plugins to install and activate. Can be specified as `all` or `none`.",
            "default": "none"
        },
        "apacheConfiguration": {
            "type": "string",
            "description": "The content for your custom httpd.conf file (advanced feature)",
            "default": ""
        },
        "existingApacheConfigurationConfigMap": {
            "type": "string",
            "description": "The name of an existing secret with your custom httpd.conf file (advanced feature)",
            "default": ""
        },
        "customPostInitScripts": {
            "type": "object",
            "description": "Custom post-init.d user scripts",
            "default": {}
        },
        "smtpHost": {
            "type": "string",
            "description": "SMTP server host",
            "default": ""
        },
        "smtpPort": {
            "type": "string",
            "description": "SMTP server port",
            "default": ""
        },
        "smtpUser": {
            "type": "string",
            "description": "SMTP username",
            "default": ""
        },
        "smtpPassword": {
            "type": "string",
            "description": "SMTP user password",
            "default": ""
        },
        "smtpProtocol": {
            "type": "string",
            "description": "SMTP protocol",
            "default": ""
        },
        "smtpExistingSecret": {
            "type": "string",
            "description": "The name of an existing secret with SMTP credentials",
            "default": ""
        },
        "allowEmptyPassword": {
            "type": "boolean",
            "description": "Allow the container to be started with blank passwords",
            "default": true
        },
        "allowOverrideNone": {
            "type": "boolean",
            "description": "Configure Apache to prohibit overriding directives with htaccess files",
            "default": false
        },
        "overrideDatabaseSettings": {
            "type": "boolean",
            "description": "Allow overriding the database settings persisted in wp-config.php",
            "default": false
        },
        "htaccessPersistenceEnabled": {
            "type": "boolean",
            "description": "Persist custom changes on htaccess files",
            "default": false
        },
        "customHTAccessCM": {
            "type": "string",
            "description": "The name of an existing ConfigMap with custom htaccess rules",
            "default": ""
        },
        "command": {
            "type": "array",
            "description": "Override default container command (useful when using custom images)",
            "default": [],
            "items": {}
        },
        "args": {
            "type": "array",
            "description": "Override default container args (useful when using custom images)",
            "default": [],
            "items": {}
        },
        "extraEnvVars": {
            "type": "array",
            "description": "Array with extra environment variables to add to the WordPress container",
            "default": [],
            "items": {}
        },
        "extraEnvVarsCM": {
            "type": "string",
            "description": "Name of existing ConfigMap containing extra env vars",
            "default": ""
        },
        "extraEnvVarsSecret": {
            "type": "string",
            "description": "Name of existing Secret containing extra env vars",
            "default": ""
        },
        "multisite": {
            "type": "object",
            "properties": {
                "enable": {
                    "type": "boolean",
                    "description": "Whether to enable WordPress Multisite configuration.",
                    "default": false
                },
                "host": {
                    "type": "string",
                    "description": "WordPress Multisite hostname/address. This value is mandatory when enabling Multisite mode.",
                    "default": ""
                },
                "networkType": {
                    "type": "string",
                    "description": "WordPress Multisite network type to enable. Allowed values: `subfolder`, `subdirectory` or `subdomain`.",
                    "default": "subdomain"
                },
                "enableNipIoRedirect": {
                    "type": "boolean",
                    "description": "Whether to enable IP address redirection to nip.io wildcard DNS. Useful when running on an IP address with subdomain network type.",
                    "default": false
                }
            }
        },
        "replicaCount": {
            "type": "number",
            "description": "Number of WordPress replicas to deploy",
            "default": 1
        },
        "updateStrategy": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string",
                    "description": "WordPress deployment strategy type",
                    "default": "RollingUpdate"
                }
            }
        },
        "schedulerName": {
            "type": "string",
            "description": "Alternate scheduler",
            "default": ""
        },
        "terminationGracePeriodSeconds": {
            "type": "string",
            "description": "In seconds, time given to the WordPress pod to terminate gracefully",
            "default": ""
        },
        "topologySpreadConstraints": {
            "type": "array",
            "description": "Topology Spread Constraints for pod assignment spread across your cluster among failure-domains. Evaluated as a template",
            "default": [],
            "items": {}
        },
        "priorityClassName": {
            "type": "string",
            "description": "Name of the existing priority class to be used by WordPress pods, priority class needs to be created beforehand",
            "default": ""
        },
        "hostAliases": {
            "type": "array",
            "description": "",
            "items": {
                "type": "object",
                "properties": {
                    "ip": {
                        "type": "string",
                        "description": ""
                    },
                    "hostnames": {
                        "type": "array",
                        "description": "",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "extraVolumes": {
            "type": "array",
            "description": "Optionally specify extra list of additional volumes for WordPress pods",
            "default": [],
            "items": {}
        },
        "extraVolumeMounts": {
            "type": "array",
            "description": "Optionally specify extra list of additional volumeMounts for WordPress container(s)",
            "default": [],
            "items": {}
        },
        "sidecars": {
            "type": "array",
            "description": "Add additional sidecar containers to the WordPress pod",
            "default": [],
            "items": {}
        },
        "initContainers": {
            "type": "array",
            "description": "Add additional init containers to the WordPress pods",
            "default": [],
            "items": {}
        },
        "podLabels": {
            "type": "object",
            "description": "Extra labels for WordPress pods",
            "default": {}
        },
        "podAnnotations": {
            "type": "object",
            "description": "Annotations for WordPress pods",
            "default": {}
        },
        "podAffinityPreset": {
            "type": "string",
            "description": "Pod affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`",
            "default": ""
        },
        "podAntiAffinityPreset": {
            "type": "string",
            "description": "Pod anti-affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`",
            "default": "soft"
        },
        "nodeAffinityPreset": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string",
                    "description": "Node affinity preset type. Ignored if `affinity` is set. Allowed values: `soft` or `hard`",
                    "default": ""
                },
                "key": {
                    "type": "string",
                    "description": "Node label key to match. Ignored if `affinity` is set",
                    "default": ""
                },
                "values": {
                    "type": "array",
                    "description": "Node label values to match. Ignored if `affinity` is set",
                    "default": [],
                    "items": {}
                }
            }
        },
        "affinity": {
            "type": "object",
            "description": "Affinity for pod assignment",
            "default": {}
        },
        "nodeSelector": {
            "type": "object",
            "description": "Node labels for pod assignment",
            "default": {}
        },
        "tolerations": {
            "type": "array",
            "description": "Tolerations for pod assignment",
            "default": [],
            "items": {}
        },
        "resources": {
            "type": "object",
            "properties": {
                "limits": {
                    "type": "object",
                    "description": "The resources limits for the WordPress containers",
                    "default": {}
                },
                "requests": {
                    "type": "object",
                    "properties": {
                        "memory": {
                            "type": "string",
                            "description": "The requested memory for the WordPress containers",
                            "default": "512Mi"
                        },
                        "cpu": {
                            "type": "string",
                            "description": "The requested cpu for the WordPress containers",
                            "default": "300m"
                        }
                    }
                }
            }
        },
        "containerPorts": {
            "type": "object",
            "properties": {
                "http": {
                    "type": "number",
                    "description": "WordPress HTTP container port",
                    "default": 8080
                },
                "https": {
                    "type": "number",
                    "description": "WordPress HTTPS container port",
                    "default": 8443
                }
            }
        },
        "extraContainerPorts": {
            "type": "array",
            "description": "Optionally specify extra list of additional ports for WordPress container(s)",
            "default": [],
            "items": {}
        },
        "podSecurityContext": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enabled WordPress pods' Security Context",
                    "default": true
                },
                "fsGroup": {
                    "type": "number",
                    "description": "Set WordPress pod's Security Context fsGroup",
                    "default": 1001
                },
                "seccompProfile": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "Set WordPress container's Security Context seccomp profile",
                            "default": "RuntimeDefault"
                        }
                    }
                }
            }
        },
        "containerSecurityContext": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enabled WordPress containers' Security Context",
                    "default": true
                },
                "runAsUser": {
                    "type": "number",
                    "description": "Set WordPress container's Security Context runAsUser",
                    "default": 1001
                },
                "runAsNonRoot": {
                    "type": "boolean",
                    "description": "Set WordPress container's Security Context runAsNonRoot",
                    "default": true
                },
                "allowPrivilegeEscalation": {
                    "type": "boolean",
                    "description": "Set WordPress container's privilege escalation",
                    "default": false
                },
                "readOnlyRootFilesystem": {
                    "type": "boolean",
                    "description": "Set WordPress container's Security Context readOnlyRootFilesystem",
                    "default": false
                },
                "capabilities": {
                    "type": "object",
                    "properties": {
                        "drop": {
                            "type": "array",
                            "description": "Set WordPress container's Security Context runAsNonRoot",
                            "default": [
                                "ALL"
                            ],
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "livenessProbe": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable livenessProbe on WordPress containers",
                    "default": true
                },
                "httpGet": {
                    "type": "object",
                    "properties": {
                        "path": {
                            "type": "string",
                            "description": "",
                            "default": "/wp-admin/install.php"
                        },
                        "port": {
                            "type": "string",
                            "description": "",
                            "default": "{{ .Values.wordpressScheme }}"
                        },
                        "scheme": {
                            "type": "string",
                            "description": "",
                            "default": "{{ .Values.wordpressScheme | upper }}"
                        },
                        "httpHeaders": {
                            "type": "array",
                            "description": "",
                            "default": [],
                            "items": {}
                        }
                    }
                },
                "initialDelaySeconds": {
                    "type": "number",
                    "description": "Initial delay seconds for livenessProbe",
                    "default": 120
                },
                "periodSeconds": {
                    "type": "number",
                    "description": "Period seconds for livenessProbe",
                    "default": 10
                },
                "timeoutSeconds": {
                    "type": "number",
                    "description": "Timeout seconds for livenessProbe",
                    "default": 5
                },
                "failureThreshold": {
                    "type": "number",
                    "description": "Failure threshold for livenessProbe",
                    "default": 6
                },
                "successThreshold": {
                    "type": "number",
                    "description": "Success threshold for livenessProbe",
                    "default": 1
                }
            }
        },
        "readinessProbe": {
            "type": "object",
            "properties": {
                "httpGet": {
                    "type": "object",
                    "properties": {
                        "path": {
                            "type": "string",
                            "description": "",
                            "default": "/wp-login.php"
                        },
                        "port": {
                            "type": "string",
                            "description": "",
                            "default": "{{ .Values.wordpressScheme }}"
                        },
                        "scheme": {
                            "type": "string",
                            "description": "",
                            "default": "{{ .Values.wordpressScheme | upper }}"
                        },
                        "httpHeaders": {
                            "type": "array",
                            "description": "",
                            "default": [],
                            "items": {}
                        }
                    }
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Enable readinessProbe on WordPress containers",
                    "default": true
                },
                "initialDelaySeconds": {
                    "type": "number",
                    "description": "Initial delay seconds for readinessProbe",
                    "default": 30
                },
                "periodSeconds": {
                    "type": "number",
                    "description": "Period seconds for readinessProbe",
                    "default": 10
                },
                "timeoutSeconds": {
                    "type": "number",
                    "description": "Timeout seconds for readinessProbe",
                    "default": 5
                },
                "failureThreshold": {
                    "type": "number",
                    "description": "Failure threshold for readinessProbe",
                    "default": 6
                },
                "successThreshold": {
                    "type": "number",
                    "description": "Success threshold for readinessProbe",
                    "default": 1
                }
            }
        },
        "startupProbe": {
            "type": "object",
            "properties": {
                "httpGet": {
                    "type": "object",
                    "properties": {
                        "path": {
                            "type": "string",
                            "description": "",
                            "default": "/wp-login.php"
                        },
                        "port": {
                            "type": "string",
                            "description": "",
                            "default": "{{ .Values.wordpressScheme }}"
                        },
                        "scheme": {
                            "type": "string",
                            "description": "",
                            "default": "{{ .Values.wordpressScheme | upper }}"
                        },
                        "httpHeaders": {
                            "type": "array",
                            "description": "",
                            "default": [],
                            "items": {}
                        }
                    }
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Enable startupProbe on WordPress containers",
                    "default": false
                },
                "initialDelaySeconds": {
                    "type": "number",
                    "description": "Initial delay seconds for startupProbe",
                    "default": 30
                },
                "periodSeconds": {
                    "type": "number",
                    "description": "Period seconds for startupProbe",
                    "default": 10
                },
                "timeoutSeconds": {
                    "type": "number",
                    "description": "Timeout seconds for startupProbe",
                    "default": 5
                },
                "failureThreshold": {
                    "type": "number",
                    "description": "Failure threshold for startupProbe",
                    "default": 6
                },
                "successThreshold": {
                    "type": "number",
                    "description": "Success threshold for startupProbe",
                    "default": 1
                }
            }
        },
        "customLivenessProbe": {
            "type": "object",
            "description": "Custom livenessProbe that overrides the default one",
            "default": {}
        },
        "customReadinessProbe": {
            "type": "object",
            "description": "Custom readinessProbe that overrides the default one",
            "default": {}
        },
        "customStartupProbe": {
            "type": "object",
            "description": "Custom startupProbe that overrides the default one",
            "default": {}
        },
        "lifecycleHooks": {
            "type": "object",
            "description": "for the WordPress container(s) to automate configuration before or after startup",
            "default": {}
        },
        "service": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string",
                    "description": "WordPress service type",
                    "default": "LoadBalancer"
                },
                "ports": {
                    "type": "object",
                    "properties": {
                        "http": {
                            "type": "number",
                            "description": "WordPress service HTTP port",
                            "default": 80
                        },
                        "https": {
                            "type": "number",
                            "description": "WordPress service HTTPS port",
                            "default": 443
                        }
                    }
                },
                "httpsTargetPort": {
                    "type": "string",
                    "description": "Target port for HTTPS",
                    "default": "https"
                },
                "nodePorts": {
                    "type": "object",
                    "properties": {
                        "http": {
                            "type": "string",
                            "description": "Node port for HTTP",
                            "default": ""
                        },
                        "https": {
                            "type": "string",
                            "description": "Node port for HTTPS",
                            "default": ""
                        }
                    }
                },
                "sessionAffinity": {
                    "type": "string",
                    "description": "Control where client requests go, to the same pod or round-robin",
                    "default": "None"
                },
                "sessionAffinityConfig": {
                    "type": "object",
                    "description": "Additional settings for the sessionAffinity",
                    "default": {}
                },
                "clusterIP": {
                    "type": "string",
                    "description": "WordPress service Cluster IP",
                    "default": ""
                },
                "loadBalancerIP": {
                    "type": "string",
                    "description": "WordPress service Load Balancer IP",
                    "default": ""
                },
                "loadBalancerSourceRanges": {
                    "type": "array",
                    "description": "WordPress service Load Balancer sources",
                    "default": [],
                    "items": {}
                },
                "externalTrafficPolicy": {
                    "type": "string",
                    "description": "WordPress service external traffic policy",
                    "default": "Cluster"
                },
                "annotations": {
                    "type": "object",
                    "description": "Additional custom annotations for WordPress service",
                    "default": {}
                },
                "extraPorts": {
                    "type": "array",
                    "description": "Extra port to expose on WordPress service",
                    "default": [],
                    "items": {}
                }
            }
        },
        "ingress": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable ingress record generation for WordPress",
                    "default": false
                },
                "pathType": {
                    "type": "string",
                    "description": "Ingress path type",
                    "default": "ImplementationSpecific"
                },
                "apiVersion": {
                    "type": "string",
                    "description": "Force Ingress API version (automatically detected if not set)",
                    "default": ""
                },
                "ingressClassName": {
                    "type": "string",
                    "description": "IngressClass that will be be used to implement the Ingress (Kubernetes 1.18+)",
                    "default": ""
                },
                "hostname": {
                    "type": "string",
                    "description": "Default host for the ingress record. The hostname is templated and thus can contain other variable references.",
                    "default": "wordpress.local"
                },
                "path": {
                    "type": "string",
                    "description": "Default path for the ingress record",
                    "default": "/"
                },
                "annotations": {
                    "type": "object",
                    "description": "Additional annotations for the Ingress resource. To enable certificate autogeneration, place here your cert-manager annotations.",
                    "default": {}
                },
                "tls": {
                    "type": "boolean",
                    "description": "Enable TLS configuration for the host defined at `ingress.hostname` parameter",
                    "default": false
                },
                "tlsWwwPrefix": {
                    "type": "boolean",
                    "description": "Adds www subdomain to default cert",
                    "default": false
                },
                "selfSigned": {
                    "type": "boolean",
                    "description": "Create a TLS secret for this ingress record using self-signed certificates generated by Helm",
                    "default": false
                },
                "extraHosts": {
                    "type": "array",
                    "description": "An array with additional hostname(s) to be covered with the ingress record. The host names are templated and thus can contain other variable references.",
                    "default": [],
                    "items": {}
                },
                "extraPaths": {
                    "type": "array",
                    "description": "An array with additional arbitrary paths that may need to be added to the ingress under the main host",
                    "default": [],
                    "items": {}
                },
                "extraTls": {
                    "type": "array",
                    "description": "TLS configuration for additional hostname(s) to be covered with this ingress record",
                    "default": [],
                    "items": {}
                },
                "secrets": {
                    "type": "array",
                    "description": "Custom TLS certificates as secrets",
                    "default": [],
                    "items": {}
                },
                "extraRules": {
                    "type": "array",
                    "description": "Additional rules to be covered with this ingress record",
                    "default": [],
                    "items": {}
                }
            }
        },
        "persistence": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable persistence using Persistent Volume Claims",
                    "default": true
                },
                "storageClass": {
                    "type": "string",
                    "description": "Persistent Volume storage class",
                    "default": ""
                },
                "accessModes": {
                    "type": "array",
                    "description": "Persistent Volume access modes",
                    "default": [
                        "ReadWriteOnce"
                    ],
                    "items": {
                        "type": "string"
                    }
                },
                "accessMode": {
                    "type": "string",
                    "description": "Persistent Volume access mode (DEPRECATED: use `persistence.accessModes` instead)",
                    "default": "ReadWriteOnce"
                },
                "size": {
                    "type": "string",
                    "description": "Persistent Volume size",
                    "default": "10Gi"
                },
                "dataSource": {
                    "type": "object",
                    "description": "Custom PVC data source",
                    "default": {}
                },
                "existingClaim": {
                    "type": "string",
                    "description": "The name of an existing PVC to use for persistence",
                    "default": ""
                },
                "selector": {
                    "type": "object",
                    "description": "Selector to match an existing Persistent Volume for WordPress data PVC",
                    "default": {}
                },
                "annotations": {
                    "type": "object",
                    "description": "Persistent Volume Claim annotations",
                    "default": {}
                }
            }
        },
        "volumePermissions": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable init container that changes the owner/group of the PV mount point to `runAsUser:fsGroup`",
                    "default": false
                },
                "image": {
                    "type": "object",
                    "properties": {
                        "registry": {
                            "type": "string",
                            "description": "OS Shell + Utility image registry",
                            "default": "docker.io"
                        },
                        "repository": {
                            "type": "string",
                            "description": "OS Shell + Utility image repository",
                            "default": "bitnami/os-shell"
                        },
                        "tag": {
                            "type": "string",
                            "description": "OS Shell + Utility image tag (immutable tags are recommended)",
                            "default": "11-debian-11-r54"
                        },
                        "digest": {
                            "type": "string",
                            "description": "OS Shell + Utility image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag",
                            "default": ""
                        },
                        "pullPolicy": {
                            "type": "string",
                            "description": "OS Shell + Utility image pull policy",
                            "default": "IfNotPresent"
                        },
                        "pullSecrets": {
                            "type": "array",
                            "description": "OS Shell + Utility image pull secrets",
                            "default": [],
                            "items": {}
                        }
                    }
                },
                "resources": {
                    "type": "object",
                    "properties": {
                        "limits": {
                            "type": "object",
                            "description": "The resources limits for the init container",
                            "default": {}
                        },
                        "requests": {
                            "type": "object",
                            "description": "The requested resources for the init container",
                            "default": {}
                        }
                    }
                },
                "containerSecurityContext": {
                    "type": "object",
                    "properties": {
                        "runAsUser": {
                            "type": "number",
                            "description": "User ID for the init container",
                            "default": 0
                        }
                    }
                }
            }
        },
        "serviceAccount": {
            "type": "object",
            "properties": {
                "create": {
                    "type": "boolean",
                    "description": "Enable creation of ServiceAccount for WordPress pod",
                    "default": false
                },
                "name": {
                    "type": "string",
                    "description": "The name of the ServiceAccount to use.",
                    "default": ""
                },
                "automountServiceAccountToken": {
                    "type": "boolean",
                    "description": "Allows auto mount of ServiceAccountToken on the serviceAccount created",
                    "default": true
                },
                "annotations": {
                    "type": "object",
                    "description": "Additional custom annotations for the ServiceAccount",
                    "default": {}
                }
            }
        },
        "pdb": {
            "type": "object",
            "properties": {
                "create": {
                    "type": "boolean",
                    "description": "Enable a Pod Disruption Budget creation",
                    "default": false
                },
                "minAvailable": {
                    "type": "number",
                    "description": "Minimum number/percentage of pods that should remain scheduled",
                    "default": 1
                },
                "maxUnavailable": {
                    "type": "string",
                    "description": "Maximum number/percentage of pods that may be made unavailable",
                    "default": ""
                }
            }
        },
        "autoscaling": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable Horizontal POD autoscaling for WordPress",
                    "default": false
                },
                "minReplicas": {
                    "type": "number",
                    "description": "Minimum number of WordPress replicas",
                    "default": 1
                },
                "maxReplicas": {
                    "type": "number",
                    "description": "Maximum number of WordPress replicas",
                    "default": 11
                },
                "targetCPU": {
                    "type": "number",
                    "description": "Target CPU utilization percentage",
                    "default": 50
                },
                "targetMemory": {
                    "type": "number",
                    "description": "Target Memory utilization percentage",
                    "default": 50
                }
            }
        },
        "metrics": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Start a sidecar prometheus exporter to expose metrics",
                    "default": false
                },
                "image": {
                    "type": "object",
                    "properties": {
                        "registry": {
                            "type": "string",
                            "description": "Apache exporter image registry",
                            "default": "docker.io"
                        },
                        "repository": {
                            "type": "string",
                            "description": "Apache exporter image repository",
                            "default": "bitnami/apache-exporter"
                        },
                        "tag": {
                            "type": "string",
                            "description": "Apache exporter image tag (immutable tags are recommended)",
                            "default": "1.0.1-debian-11-r32"
                        },
                        "digest": {
                            "type": "string",
                            "description": "Apache exporter image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag",
                            "default": ""
                        },
                        "pullPolicy": {
                            "type": "string",
                            "description": "Apache exporter image pull policy",
                            "default": "IfNotPresent"
                        },
                        "pullSecrets": {
                            "type": "array",
                            "description": "Apache exporter image pull secrets",
                            "default": [],
                            "items": {}
                        }
                    }
                },
                "containerPorts": {
                    "type": "object",
                    "properties": {
                        "metrics": {
                            "type": "number",
                            "description": "Prometheus exporter container port",
                            "default": 9117
                        }
                    }
                },
                "livenessProbe": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable livenessProbe on Prometheus exporter containers",
                            "default": true
                        },
                        "initialDelaySeconds": {
                            "type": "number",
                            "description": "Initial delay seconds for livenessProbe",
                            "default": 15
                        },
                        "periodSeconds": {
                            "type": "number",
                            "description": "Period seconds for livenessProbe",
                            "default": 10
                        },
                        "timeoutSeconds": {
                            "type": "number",
                            "description": "Timeout seconds for livenessProbe",
                            "default": 5
                        },
                        "failureThreshold": {
                            "type": "number",
                            "description": "Failure threshold for livenessProbe",
                            "default": 3
                        },
                        "successThreshold": {
                            "type": "number",
                            "description": "Success threshold for livenessProbe",
                            "default": 1
                        }
                    }
                },
                "readinessProbe": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable readinessProbe on Prometheus exporter containers",
                            "default": true
                        },
                        "initialDelaySeconds": {
                            "type": "number",
                            "description": "Initial delay seconds for readinessProbe",
                            "default": 5
                        },
                        "periodSeconds": {
                            "type": "number",
                            "description": "Period seconds for readinessProbe",
                            "default": 10
                        },
                        "timeoutSeconds": {
                            "type": "number",
                            "description": "Timeout seconds for readinessProbe",
                            "default": 3
                        },
                        "failureThreshold": {
                            "type": "number",
                            "description": "Failure threshold for readinessProbe",
                            "default": 3
                        },
                        "successThreshold": {
                            "type": "number",
                            "description": "Success threshold for readinessProbe",
                            "default": 1
                        }
                    }
                },
                "startupProbe": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable startupProbe on Prometheus exporter containers",
                            "default": false
                        },
                        "initialDelaySeconds": {
                            "type": "number",
                            "description": "Initial delay seconds for startupProbe",
                            "default": 10
                        },
                        "periodSeconds": {
                            "type": "number",
                            "description": "Period seconds for startupProbe",
                            "default": 10
                        },
                        "timeoutSeconds": {
                            "type": "number",
                            "description": "Timeout seconds for startupProbe",
                            "default": 1
                        },
                        "failureThreshold": {
                            "type": "number",
                            "description": "Failure threshold for startupProbe",
                            "default": 15
                        },
                        "successThreshold": {
                            "type": "number",
                            "description": "Success threshold for startupProbe",
                            "default": 1
                        }
                    }
                },
                "customLivenessProbe": {
                    "type": "object",
                    "description": "Custom livenessProbe that overrides the default one",
                    "default": {}
                },
                "customReadinessProbe": {
                    "type": "object",
                    "description": "Custom readinessProbe that overrides the default one",
                    "default": {}
                },
                "customStartupProbe": {
                    "type": "object",
                    "description": "Custom startupProbe that overrides the default one",
                    "default": {}
                },
                "service": {
                    "type": "object",
                    "properties": {
                        "annotations": {
                            "type": "object",
                            "properties": {
                                "prometheus": {
                                    "type": "object",
                                    "properties": {
                                        "io/scrape": {
                                            "type": "string",
                                            "description": "",
                                            "default": "true"
                                        },
                                        "io/port": {
                                            "type": "string",
                                            "description": "",
                                            "default": "{{ .Values.metrics.containerPorts.metrics }}"
                                        }
                                    }
                                }
                            }
                        },
                        "ports": {
                            "type": "object",
                            "properties": {
                                "metrics": {
                                    "type": "number",
                                    "description": "Prometheus metrics service port",
                                    "default": 9150
                                }
                            }
                        }
                    }
                },
                "resources": {
                    "type": "object",
                    "properties": {
                        "limits": {
                            "type": "object",
                            "description": "The resources limits for the Prometheus exporter container",
                            "default": {}
                        },
                        "requests": {
                            "type": "object",
                            "description": "The requested resources for the Prometheus exporter container",
                            "default": {}
                        }
                    }
                },
                "serviceMonitor": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Create ServiceMonitor Resource for scraping metrics using Prometheus Operator",
                            "default": false
                        },
                        "namespace": {
                            "type": "string",
                            "description": "Namespace for the ServiceMonitor Resource (defaults to the Release Namespace)",
                            "default": ""
                        },
                        "interval": {
                            "type": "string",
                            "description": "Interval at which metrics should be scraped.",
                            "default": ""
                        },
                        "scrapeTimeout": {
                            "type": "string",
                            "description": "Timeout after which the scrape is ended",
                            "default": ""
                        },
                        "labels": {
                            "type": "object",
                            "description": "Additional labels that can be used so ServiceMonitor will be discovered by Prometheus",
                            "default": {}
                        },
                        "selector": {
                            "type": "object",
                            "description": "Prometheus instance selector labels",
                            "default": {}
                        },
                        "relabelings": {
                            "type": "array",
                            "description": "RelabelConfigs to apply to samples before scraping",
                            "default": [],
                            "items": {}
                        },
                        "metricRelabelings": {
                            "type": "array",
                            "description": "MetricRelabelConfigs to apply to samples before ingestion",
                            "default": [],
                            "items": {}
                        },
                        "honorLabels": {
                            "type": "boolean",
                            "description": "Specify honorLabels parameter to add the scrape endpoint",
                            "default": false
                        },
                        "jobLabel": {
                            "type": "string",
                            "description": "The name of the label on the target service to use as the job name in prometheus.",
                            "default": ""
                        }
                    }
                }
            }
        },
        "networkPolicy": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable network policies",
                    "default": false
                },
                "metrics": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable network policy for metrics (prometheus)",
                            "default": false
                        }
                    }
                },
                "ingress": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable network policy for Ingress Proxies",
                            "default": false
                        }
                    }
                },
                "ingressRules": {
                    "type": "object",
                    "properties": {
                        "backendOnlyAccessibleByFrontend": {
                            "type": "boolean",
                            "description": "Enable ingress rule that makes the backend (mariadb) only accessible by testlink's pods.",
                            "default": false
                        },
                        "accessOnlyFrom": {
                            "type": "object",
                            "properties": {
                                "enabled": {
                                    "type": "boolean",
                                    "description": "Enable ingress rule that makes testlink only accessible from a particular origin",
                                    "default": false
                                }
                            }
                        }
                    }
                },
                "egressRules": {
                    "type": "object",
                    "properties": {
                        "denyConnectionsToExternal": {
                            "type": "boolean",
                            "description": "Enable egress rule that denies outgoing traffic outside the cluster, except for DNS (port 53).",
                            "default": false
                        }
                    }
                }
            }
        },
        "mariadb": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Deploy a MariaDB server to satisfy the applications database requirements",
                    "default": true
                },
                "architecture": {
                    "type": "string",
                    "description": "MariaDB architecture. Allowed values: `standalone` or `replication`",
                    "default": "standalone"
                },
                "auth": {
                    "type": "object",
                    "properties": {
                        "rootPassword": {
                            "type": "string",
                            "description": "MariaDB root password",
                            "default": ""
                        },
                        "database": {
                            "type": "string",
                            "description": "MariaDB custom database",
                            "default": "bitnami_wordpress"
                        },
                        "username": {
                            "type": "string",
                            "description": "MariaDB custom user name",
                            "default": "bn_wordpress"
                        },
                        "password": {
                            "type": "string",
                            "description": "MariaDB custom user password",
                            "default": ""
                        }
                    }
                },
                "primary": {
                    "type": "object",
                    "properties": {
                        "persistence": {
                            "type": "object",
                            "properties": {
                                "enabled": {
                                    "type": "boolean",
                                    "description": "Enable persistence on MariaDB using PVC(s)",
                                    "default": true
                                },
                                "storageClass": {
                                    "type": "string",
                                    "description": "Persistent Volume storage class",
                                    "default": ""
                                },
                                "accessModes": {
                                    "type": "array",
                                    "description": "Persistent Volume access modes",
                                    "default": [
                                        "ReadWriteOnce"
                                    ],
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "size": {
                                    "type": "string",
                                    "description": "Persistent Volume size",
                                    "default": "8Gi"
                                }
                            }
                        }
                    }
                }
            }
        },
        "externalDatabase": {
            "type": "object",
            "properties": {
                "host": {
                    "type": "string",
                    "description": "External Database server host",
                    "default": "localhost"
                },
                "port": {
                    "type": "number",
                    "description": "External Database server port",
                    "default": 3306
                },
                "user": {
                    "type": "string",
                    "description": "External Database username",
                    "default": "bn_wordpress"
                },
                "password": {
                    "type": "string",
                    "description": "External Database user password",
                    "default": ""
                },
                "database": {
                    "type": "string",
                    "description": "External Database database name",
                    "default": "bitnami_wordpress"
                },
                "existingSecret": {
                    "type": "string",
                    "description": "The name of an existing secret with database credentials. Evaluated as a template",
                    "default": ""
                }
            }
        },
        "memcached": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Deploy a Memcached server for caching database queries",
                    "default": false
                },
                "auth": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable Memcached authentication",
                            "default": false
                        },
                        "username": {
                            "type": "string",
                            "description": "Memcached admin user",
                            "default": ""
                        },
                        "password": {
                            "type": "string",
                            "description": "Memcached admin password",
                            "default": ""
                        }
                    }
                },
                "service": {
                    "type": "object",
                    "properties": {
                        "port": {
                            "type": "number",
                            "description": "Memcached service port",
                            "default": 11211
                        }
                    }
                }
            }
        },
        "externalCache": {
            "type": "object",
            "properties": {
                "host": {
                    "type": "string",
                    "description": "External cache server host",
                    "default": "localhost"
                },
                "port": {
                    "type": "number",
                    "description": "External cache server port",
                    "default": 11211
                }
            }
        }
    }
}